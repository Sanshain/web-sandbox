function loclog(/** @type {string} */ value) {
   window.parent.postMessage(
      // { value: typeof value === \'object\' ? JSON.stringify(value) : value, type: typeof value },
      { value: String.fromCharCode(8250) + " " + value, type: typeof value },
      "*"
   );
   console.log([].slice.call(arguments).join());
}
window.addEventListener(\'message\', function onmessage(event) {
                if (typeof event.data == "string") {
   let data = { type: "string" };
   try {
      data.value = globalThis.eval(event.data);
   } catch (e) {
      data.value = data.error = "> " + e.stack.split(":").shift() + ": " + e.message;
   }

   if (typeof data.value === "object") {
      if (data.value === null) data.value += "";
      else if (~data.value.toString().indexOf("HTML")) data.value = data.value.toString();
      else {
         data.value = JSON.stringify(data.value);
      }
   }
   console.log(data);
   window.parent.postMessage(data, "*");
}
             });

const App = (function () {

   //@modules:





   //@App.svelte: 
   /* generated by Svelte v3.49.0 */
   "use strict";

   const { SvelteComponent, append_styles, attr, detach, element, init, insert, noop, safe_not_equal } = svelteRuntime;

   function add_css(target) {
      append_styles(target, "svelte-1hjti4q", "h1.svelte-1hjti4q{color:green}");
   }

   function create_fragment(ctx) {
      let h1;

      return {
         c() {
            h1 = element("h1");
            h1.textContent = `Hello ${place}!`;
            attr(h1, "class", "svelte-1hjti4q");
         },
         m(target, anchor) {
            insert(target, h1, anchor);
         },
         p: noop,
         i: noop,
         o: noop,
         d(detaching) {
            if (detaching) detach(h1);
         }
      };
   }

   let place = 'world';

   class Component extends SvelteComponent {
      constructor(options) {
         super();
         init(this, options, null, create_fragment, safe_not_equal, {}, add_css);
      }
   }

   return Component;
})()