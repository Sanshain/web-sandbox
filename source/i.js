function loclog(/** @type {string} */ value) {
  window.parent.postMessage(
    // { value: typeof value === 'object' ? JSON.stringify(value) : value, type: typeof value },
    { value: String.fromCharCode(8250) + " " + value, type: typeof value },
    "*"
  );
  console.log([].slice.call(arguments).join());
}

window.addEventListener("message", function onmessage(event) {
  if (typeof event.data == "string") {
    let data = { type: "string" };
    try {
      data.value = globalThis.eval(event.data);
    } catch (e) {
      data.value = data.error = "> " + e.stack.split(":").shift() + ": " + e.message;
    }

    if (typeof data.value === "object") {
      if (data.value === null) data.value += "";
      else if (~data.value.toString().indexOf("HTML")) data.value = data.value.toString();
      else {
        data.value = JSON.stringify(data.value);
      }
    }
    console.log(data);
    window.parent.postMessage(data, "*");
  }
});

window.addEventListener("load", function () {
  /* generated by Svelte v3.58.0 */ "use strict";

  const {
    SvelteComponent,
    append_styles,
    attr,
    detach,
    element,
    init,
    insert,
    noop,
    safe_not_equal,
    space,
  } = require("svelte/internal");

  function add_css(target) {
    append_styles(target, "svelte-1hjti4q", "h1.svelte-1hjti4q{color:green}");
  }

  function create_fragment(ctx) {
    let h1;
    let t3;
    let h3;

    return {
      c() {
        h1 = element("h1");
        h1.textContent = `Hello ${place}!`;
        t3 = space();
        h3 = element("h3");
        attr(h1, "class", "svelte-1hjti4q");
      },
      m(target, anchor) {
        insert(target, h1, anchor);
        insert(target, t3, anchor);
        insert(target, h3, anchor);
      },
      p: noop,
      i: noop,
      o: noop,
      d(detaching) {
        if (detaching) detach(h1);
        if (detaching) detach(t3);
        if (detaching) detach(h3);
      },
    };
  }

  let place = "world";

  class Component extends SvelteComponent {
    constructor(options) {
      super();
      init(this, options, null, create_fragment, safe_not_equal, {}, add_css);
    }
  }

  return Component;

  globalThis.add_css = add_css;
  globalThis.create_fragment = create_fragment;
});
