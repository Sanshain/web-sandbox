{"version":3,"file":"page_builder.js","sources":["../node_modules/@emmetio/scanner/scanner.es.js","../node_modules/@emmetio/abbreviation/dist/abbreviation.es.js","../node_modules/@emmetio/css-abbreviation/dist/css-abbreviation.es.js","../node_modules/emmet/dist/emmet.es.js","../source/utils/utils.js","../source/features/compiler.js","../source/utils/page_generator.js","../source/utils/linter.js","../source/ui/ChoiceMenu.js","../source/features/base.js","../source/pageBuilder.js","../source/features/expantion.js","../source/utils/autocompletion.js","../source/aceInitialize.js","../source/features/resizing.js","../source/features/tabs.js","../source/main.js"],"sourcesContent":["const defaultQuotedOptions = {\n    escape: 92,\n    throws: false\n};\n/**\n * Check if given code is a number\n */\nfunction isNumber(code) {\n    return code > 47 && code < 58;\n}\n/**\n * Check if given character code is alpha code (letter through A to Z)\n */\nfunction isAlpha(code, from, to) {\n    from = from || 65; // A\n    to = to || 90; // Z\n    code &= ~32; // quick hack to convert any char code to uppercase char code\n    return code >= from && code <= to;\n}\n/**\n * Check if given character code is alpha-numeric (letter through A to Z or number)\n */\nfunction isAlphaNumeric(code) {\n    return isNumber(code) || isAlpha(code);\n}\nfunction isAlphaNumericWord(code) {\n    return isNumber(code) || isAlphaWord(code);\n}\nfunction isAlphaWord(code) {\n    return code === 95 /* _ */ || isAlpha(code);\n}\n/**\n * Check if given character code is a white-space character: a space character\n * or line breaks\n */\nfunction isWhiteSpace(code) {\n    return code === 32 /* space */\n        || code === 9 /* tab */\n        || code === 160; /* non-breaking space */\n}\n/**\n * Check if given character code is a space character\n */\nfunction isSpace(code) {\n    return isWhiteSpace(code)\n        || code === 10 /* LF */\n        || code === 13; /* CR */\n}\n/**\n * Consumes 'single' or \"double\"-quoted string from given string, if possible\n * @return `true` if quoted string was consumed. The contents of quoted string\n * will be available as `stream.current()`\n */\nfunction eatQuoted(stream, options) {\n    options = Object.assign(Object.assign({}, defaultQuotedOptions), options);\n    const start = stream.pos;\n    const quote = stream.peek();\n    if (stream.eat(isQuote)) {\n        while (!stream.eof()) {\n            switch (stream.next()) {\n                case quote:\n                    stream.start = start;\n                    return true;\n                case options.escape:\n                    stream.next();\n                    break;\n            }\n        }\n        // If we’re here then stream wasn’t properly consumed.\n        // Revert stream and decide what to do\n        stream.pos = start;\n        if (options.throws) {\n            throw stream.error('Unable to consume quoted string');\n        }\n    }\n    return false;\n}\n/**\n * Check if given character code is a quote character\n */\nfunction isQuote(code) {\n    return code === 39 /* ' */ || code === 34 /* \" */;\n}\n/**\n * Eats paired characters substring, for example `(foo)` or `[bar]`\n * @param open Character code of pair opening\n * @param close Character code of pair closing\n * @return Returns `true` if character pair was successfully consumed, it’s\n * content will be available as `stream.current()`\n */\nfunction eatPair(stream, open, close, options) {\n    options = Object.assign(Object.assign({}, defaultQuotedOptions), options);\n    const start = stream.pos;\n    if (stream.eat(open)) {\n        let stack = 1;\n        let ch;\n        while (!stream.eof()) {\n            if (eatQuoted(stream, options)) {\n                continue;\n            }\n            ch = stream.next();\n            if (ch === open) {\n                stack++;\n            }\n            else if (ch === close) {\n                stack--;\n                if (!stack) {\n                    stream.start = start;\n                    return true;\n                }\n            }\n            else if (ch === options.escape) {\n                stream.next();\n            }\n        }\n        // If we’re here then paired character can’t be consumed\n        stream.pos = start;\n        if (options.throws) {\n            throw stream.error(`Unable to find matching pair for ${String.fromCharCode(open)}`);\n        }\n    }\n    return false;\n}\n\n/**\n * A streaming, character code-based string reader\n */\nclass Scanner {\n    constructor(str, start, end) {\n        if (end == null && typeof str === 'string') {\n            end = str.length;\n        }\n        this.string = str;\n        this.pos = this.start = start || 0;\n        this.end = end || 0;\n    }\n    /**\n     * Returns true only if the stream is at the end of the file.\n     */\n    eof() {\n        return this.pos >= this.end;\n    }\n    /**\n     * Creates a new stream instance which is limited to given `start` and `end`\n     * range. E.g. its `eof()` method will look at `end` property, not actual\n     * stream end\n     */\n    limit(start, end) {\n        return new Scanner(this.string, start, end);\n    }\n    /**\n     * Returns the next character code in the stream without advancing it.\n     * Will return NaN at the end of the file.\n     */\n    peek() {\n        return this.string.charCodeAt(this.pos);\n    }\n    /**\n     * Returns the next character in the stream and advances it.\n     * Also returns <code>undefined</code> when no more characters are available.\n     */\n    next() {\n        if (this.pos < this.string.length) {\n            return this.string.charCodeAt(this.pos++);\n        }\n    }\n    /**\n     * `match` can be a character code or a function that takes a character code\n     * and returns a boolean. If the next character in the stream 'matches'\n     * the given argument, it is consumed and returned.\n     * Otherwise, `false` is returned.\n     */\n    eat(match) {\n        const ch = this.peek();\n        const ok = typeof match === 'function' ? match(ch) : ch === match;\n        if (ok) {\n            this.next();\n        }\n        return ok;\n    }\n    /**\n     * Repeatedly calls <code>eat</code> with the given argument, until it\n     * fails. Returns <code>true</code> if any characters were eaten.\n     */\n    eatWhile(match) {\n        const start = this.pos;\n        while (!this.eof() && this.eat(match)) { /* */ }\n        return this.pos !== start;\n    }\n    /**\n     * Backs up the stream n characters. Backing it up further than the\n     * start of the current token will cause things to break, so be careful.\n     */\n    backUp(n) {\n        this.pos -= (n || 1);\n    }\n    /**\n     * Get the string between the start of the current token and the\n     * current stream position.\n     */\n    current() {\n        return this.substring(this.start, this.pos);\n    }\n    /**\n     * Returns substring for given range\n     */\n    substring(start, end) {\n        return this.string.slice(start, end);\n    }\n    /**\n     * Creates error object with current stream state\n     */\n    error(message, pos = this.pos) {\n        return new ScannerError(`${message} at ${pos + 1}`, pos, this.string);\n    }\n}\nclass ScannerError extends Error {\n    constructor(message, pos, str) {\n        super(message);\n        this.pos = pos;\n        this.string = str;\n    }\n}\n\nexport default Scanner;\nexport { ScannerError, eatPair, eatQuoted, isAlpha, isAlphaNumeric, isAlphaNumericWord, isAlphaWord, isNumber, isQuote, isSpace, isWhiteSpace };\n//# sourceMappingURL=scanner.es.js.map\n","import Scanner, { isAlphaNumericWord, isSpace, isQuote as isQuote$1, isNumber, isAlpha, ScannerError } from '@emmetio/scanner';\n\nfunction tokenScanner(tokens) {\n    return {\n        tokens,\n        start: 0,\n        pos: 0,\n        size: tokens.length\n    };\n}\nfunction peek(scanner) {\n    return scanner.tokens[scanner.pos];\n}\nfunction next(scanner) {\n    return scanner.tokens[scanner.pos++];\n}\nfunction slice(scanner, from = scanner.start, to = scanner.pos) {\n    return scanner.tokens.slice(from, to);\n}\nfunction readable(scanner) {\n    return scanner.pos < scanner.size;\n}\nfunction consume(scanner, test) {\n    const token = peek(scanner);\n    if (token && test(token)) {\n        scanner.pos++;\n        return true;\n    }\n    return false;\n}\nfunction error(scanner, message, token = peek(scanner)) {\n    if (token && token.start != null) {\n        message += ` at ${token.start}`;\n    }\n    const err = new Error(message);\n    err['pos'] = token && token.start;\n    return err;\n}\n\nfunction abbreviation(abbr, options = {}) {\n    const scanner = tokenScanner(abbr);\n    const result = statements(scanner, options);\n    if (readable(scanner)) {\n        throw error(scanner, 'Unexpected character');\n    }\n    return result;\n}\nfunction statements(scanner, options) {\n    const result = {\n        type: 'TokenGroup',\n        elements: []\n    };\n    let ctx = result;\n    let node;\n    const stack = [];\n    while (readable(scanner)) {\n        if (node = element(scanner, options) || group(scanner, options)) {\n            ctx.elements.push(node);\n            if (consume(scanner, isChildOperator)) {\n                stack.push(ctx);\n                ctx = node;\n            }\n            else if (consume(scanner, isSiblingOperator)) {\n                continue;\n            }\n            else if (consume(scanner, isClimbOperator)) {\n                do {\n                    if (stack.length) {\n                        ctx = stack.pop();\n                    }\n                } while (consume(scanner, isClimbOperator));\n            }\n        }\n        else {\n            break;\n        }\n    }\n    return result;\n}\n/**\n * Consumes group from given scanner\n */\nfunction group(scanner, options) {\n    if (consume(scanner, isGroupStart)) {\n        const result = statements(scanner, options);\n        const token = next(scanner);\n        if (isBracket(token, 'group', false)) {\n            result.repeat = repeater(scanner);\n        }\n        return result;\n    }\n}\n/**\n * Consumes single element from given scanner\n */\nfunction element(scanner, options) {\n    let attr;\n    const elem = {\n        type: 'TokenElement',\n        name: void 0,\n        attributes: void 0,\n        value: void 0,\n        repeat: void 0,\n        selfClose: false,\n        elements: []\n    };\n    if (elementName(scanner, options)) {\n        elem.name = slice(scanner);\n    }\n    while (readable(scanner)) {\n        scanner.start = scanner.pos;\n        if (!elem.repeat && !isEmpty(elem) && consume(scanner, isRepeater)) {\n            elem.repeat = scanner.tokens[scanner.pos - 1];\n        }\n        else if (!elem.value && text(scanner)) {\n            elem.value = getText(scanner);\n        }\n        else if (attr = shortAttribute(scanner, 'id', options) || shortAttribute(scanner, 'class', options) || attributeSet(scanner)) {\n            if (!elem.attributes) {\n                elem.attributes = Array.isArray(attr) ? attr.slice() : [attr];\n            }\n            else {\n                elem.attributes = elem.attributes.concat(attr);\n            }\n        }\n        else {\n            if (!isEmpty(elem) && consume(scanner, isCloseOperator)) {\n                elem.selfClose = true;\n                if (!elem.repeat && consume(scanner, isRepeater)) {\n                    elem.repeat = scanner.tokens[scanner.pos - 1];\n                }\n            }\n            break;\n        }\n    }\n    return !isEmpty(elem) ? elem : void 0;\n}\n/**\n * Consumes attribute set from given scanner\n */\nfunction attributeSet(scanner) {\n    if (consume(scanner, isAttributeSetStart)) {\n        const attributes = [];\n        let attr;\n        while (readable(scanner)) {\n            if (attr = attribute(scanner)) {\n                attributes.push(attr);\n            }\n            else if (consume(scanner, isAttributeSetEnd)) {\n                break;\n            }\n            else if (!consume(scanner, isWhiteSpace)) {\n                throw error(scanner, `Unexpected \"${peek(scanner).type}\" token`);\n            }\n        }\n        return attributes;\n    }\n}\n/**\n * Consumes attribute shorthand (class or id) from given scanner\n */\nfunction shortAttribute(scanner, type, options) {\n    if (isOperator(peek(scanner), type)) {\n        scanner.pos++;\n        const attr = {\n            name: [createLiteral(type)]\n        };\n        // Consume expression after shorthand start for React-like components\n        if (options.jsx && text(scanner)) {\n            attr.value = getText(scanner);\n            attr.expression = true;\n        }\n        else {\n            attr.value = literal(scanner) ? slice(scanner) : void 0;\n        }\n        return attr;\n    }\n}\n/**\n * Consumes single attribute from given scanner\n */\nfunction attribute(scanner) {\n    if (quoted(scanner)) {\n        // Consumed quoted value: it’s a value for default attribute\n        return {\n            value: slice(scanner)\n        };\n    }\n    if (literal(scanner, true)) {\n        return {\n            name: slice(scanner),\n            value: consume(scanner, isEquals) && (quoted(scanner) || literal(scanner, true))\n                ? slice(scanner)\n                : void 0\n        };\n    }\n}\nfunction repeater(scanner) {\n    return isRepeater(peek(scanner))\n        ? scanner.tokens[scanner.pos++]\n        : void 0;\n}\n/**\n * Consumes quoted value from given scanner, if possible\n */\nfunction quoted(scanner) {\n    const start = scanner.pos;\n    const quote = peek(scanner);\n    if (isQuote(quote)) {\n        scanner.pos++;\n        while (readable(scanner)) {\n            if (isQuote(next(scanner), quote.single)) {\n                scanner.start = start;\n                return true;\n            }\n        }\n        throw error(scanner, 'Unclosed quote', quote);\n    }\n    return false;\n}\n/**\n * Consumes literal (unquoted value) from given scanner\n */\nfunction literal(scanner, allowBrackets) {\n    const start = scanner.pos;\n    const brackets = {\n        attribute: 0,\n        expression: 0,\n        group: 0\n    };\n    while (readable(scanner)) {\n        const token = peek(scanner);\n        if (brackets.expression) {\n            // If we’re inside expression, we should consume all content in it\n            if (isBracket(token, 'expression')) {\n                brackets[token.context] += token.open ? 1 : -1;\n            }\n        }\n        else if (isQuote(token) || isOperator(token) || isWhiteSpace(token) || isRepeater(token)) {\n            break;\n        }\n        else if (isBracket(token)) {\n            if (!allowBrackets) {\n                break;\n            }\n            if (token.open) {\n                brackets[token.context]++;\n            }\n            else if (!brackets[token.context]) {\n                // Stop if found unmatched closing brace: it must be handled\n                // by parent consumer\n                break;\n            }\n            else {\n                brackets[token.context]--;\n            }\n        }\n        scanner.pos++;\n    }\n    if (start !== scanner.pos) {\n        scanner.start = start;\n        return true;\n    }\n    return false;\n}\n/**\n * Consumes element name from given scanner\n */\nfunction elementName(scanner, options) {\n    const start = scanner.pos;\n    if (options.jsx && consume(scanner, isCapitalizedLiteral)) {\n        // Check for edge case: consume immediate capitalized class names\n        // for React-like components, e.g. `Foo.Bar.Baz`\n        while (readable(scanner)) {\n            const { pos } = scanner;\n            if (!consume(scanner, isClassNameOperator) || !consume(scanner, isCapitalizedLiteral)) {\n                scanner.pos = pos;\n                break;\n            }\n        }\n    }\n    while (readable(scanner) && consume(scanner, isElementName)) {\n        // empty\n    }\n    if (scanner.pos !== start) {\n        scanner.start = start;\n        return true;\n    }\n    return false;\n}\n/**\n * Consumes text value from given scanner\n */\nfunction text(scanner) {\n    const start = scanner.pos;\n    if (consume(scanner, isTextStart)) {\n        let brackets = 0;\n        while (readable(scanner)) {\n            const token = next(scanner);\n            if (isBracket(token, 'expression')) {\n                if (token.open) {\n                    brackets++;\n                }\n                else if (!brackets) {\n                    break;\n                }\n                else {\n                    brackets--;\n                }\n            }\n        }\n        scanner.start = start;\n        return true;\n    }\n    return false;\n}\nfunction getText(scanner) {\n    let from = scanner.start;\n    let to = scanner.pos;\n    if (isBracket(scanner.tokens[from], 'expression', true)) {\n        from++;\n    }\n    if (isBracket(scanner.tokens[to - 1], 'expression', false)) {\n        to--;\n    }\n    return slice(scanner, from, to);\n}\nfunction isBracket(token, context, isOpen) {\n    return Boolean(token && token.type === 'Bracket'\n        && (!context || token.context === context)\n        && (isOpen == null || token.open === isOpen));\n}\nfunction isOperator(token, type) {\n    return Boolean(token && token.type === 'Operator' && (!type || token.operator === type));\n}\nfunction isQuote(token, isSingle) {\n    return Boolean(token && token.type === 'Quote' && (isSingle == null || token.single === isSingle));\n}\nfunction isWhiteSpace(token) {\n    return Boolean(token && token.type === 'WhiteSpace');\n}\nfunction isEquals(token) {\n    return isOperator(token, 'equal');\n}\nfunction isRepeater(token) {\n    return Boolean(token && token.type === 'Repeater');\n}\nfunction isLiteral(token) {\n    return token.type === 'Literal';\n}\nfunction isCapitalizedLiteral(token) {\n    if (isLiteral(token)) {\n        const ch = token.value.charCodeAt(0);\n        return ch >= 65 && ch <= 90;\n    }\n    return false;\n}\nfunction isElementName(token) {\n    return token.type === 'Literal' || token.type === 'RepeaterNumber' || token.type === 'RepeaterPlaceholder';\n}\nfunction isClassNameOperator(token) {\n    return isOperator(token, 'class');\n}\nfunction isAttributeSetStart(token) {\n    return isBracket(token, 'attribute', true);\n}\nfunction isAttributeSetEnd(token) {\n    return isBracket(token, 'attribute', false);\n}\nfunction isTextStart(token) {\n    return isBracket(token, 'expression', true);\n}\nfunction isGroupStart(token) {\n    return isBracket(token, 'group', true);\n}\nfunction createLiteral(value) {\n    return { type: 'Literal', value };\n}\nfunction isEmpty(elem) {\n    return !elem.name && !elem.value && !elem.attributes;\n}\nfunction isChildOperator(token) {\n    return isOperator(token, 'child');\n}\nfunction isSiblingOperator(token) {\n    return isOperator(token, 'sibling');\n}\nfunction isClimbOperator(token) {\n    return isOperator(token, 'climb');\n}\nfunction isCloseOperator(token) {\n    return isOperator(token, 'close');\n}\n\n/**\n * If consumes escape character, sets current stream range to escaped value\n */\nfunction escaped(scanner) {\n    if (scanner.eat(92 /* Escape */)) {\n        scanner.start = scanner.pos;\n        if (!scanner.eof()) {\n            scanner.pos++;\n        }\n        return true;\n    }\n    return false;\n}\n\nfunction tokenize(source) {\n    const scanner = new Scanner(source);\n    const result = [];\n    const ctx = {\n        group: 0,\n        attribute: 0,\n        expression: 0,\n        quote: 0\n    };\n    let ch = 0;\n    let token;\n    while (!scanner.eof()) {\n        ch = scanner.peek();\n        token = getToken(scanner, ctx);\n        if (token) {\n            result.push(token);\n            if (token.type === 'Quote') {\n                ctx.quote = ch === ctx.quote ? 0 : ch;\n            }\n            else if (token.type === 'Bracket') {\n                ctx[token.context] += token.open ? 1 : -1;\n            }\n        }\n        else {\n            throw scanner.error('Unexpected character');\n        }\n    }\n    return result;\n}\n/**\n * Returns next token from given scanner, if possible\n */\nfunction getToken(scanner, ctx) {\n    return field(scanner, ctx)\n        || repeaterPlaceholder(scanner)\n        || repeaterNumber(scanner)\n        || repeater$1(scanner)\n        || whiteSpace(scanner)\n        || literal$1(scanner, ctx)\n        || operator(scanner)\n        || quote(scanner)\n        || bracket(scanner);\n}\n/**\n * Consumes literal from given scanner\n */\nfunction literal$1(scanner, ctx) {\n    const start = scanner.pos;\n    let value = '';\n    while (!scanner.eof()) {\n        // Consume escaped sequence no matter of context\n        if (escaped(scanner)) {\n            value += scanner.current();\n            continue;\n        }\n        const ch = scanner.peek();\n        if (ch === ctx.quote || ch === 36 /* Dollar */ || isAllowedOperator(ch, ctx)) {\n            // 1. Found matching quote\n            // 2. The `$` character has special meaning in every context\n            // 3. Depending on context, some characters should be treated as operators\n            break;\n        }\n        if (ctx.expression && ch === 125 /* CurlyBracketClose */) {\n            break;\n        }\n        if (!ctx.quote && !ctx.expression) {\n            // Consuming element name\n            if (!ctx.attribute && !isElementName$1(ch)) {\n                break;\n            }\n            if (isAllowedSpace(ch, ctx) || isAllowedRepeater(ch, ctx) || isQuote$1(ch) || bracketType(ch)) {\n                // Stop for characters not allowed in unquoted literal\n                break;\n            }\n        }\n        value += scanner.string[scanner.pos++];\n    }\n    if (start !== scanner.pos) {\n        scanner.start = start;\n        return {\n            type: 'Literal',\n            value,\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes white space characters as string literal from given scanner\n */\nfunction whiteSpace(scanner) {\n    const start = scanner.pos;\n    if (scanner.eatWhile(isSpace)) {\n        return {\n            type: 'WhiteSpace',\n            start,\n            end: scanner.pos,\n            value: scanner.substring(start, scanner.pos)\n        };\n    }\n}\n/**\n * Consumes quote from given scanner\n */\nfunction quote(scanner) {\n    const ch = scanner.peek();\n    if (isQuote$1(ch)) {\n        return {\n            type: 'Quote',\n            single: ch === 39 /* SingleQuote */,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes bracket from given scanner\n */\nfunction bracket(scanner) {\n    const ch = scanner.peek();\n    const context = bracketType(ch);\n    if (context) {\n        return {\n            type: 'Bracket',\n            open: isOpenBracket(ch),\n            context,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes operator from given scanner\n */\nfunction operator(scanner) {\n    const op = operatorType(scanner.peek());\n    if (op) {\n        return {\n            type: 'Operator',\n            operator: op,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes node repeat token from current stream position and returns its\n * parsed value\n */\nfunction repeater$1(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(42 /* Asterisk */)) {\n        scanner.start = scanner.pos;\n        let count = 1;\n        let implicit = false;\n        if (scanner.eatWhile(isNumber)) {\n            count = Number(scanner.current());\n        }\n        else {\n            implicit = true;\n        }\n        return {\n            type: 'Repeater',\n            count,\n            value: 0,\n            implicit,\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes repeater placeholder `$#` from given scanner\n */\nfunction repeaterPlaceholder(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(36 /* Dollar */) && scanner.eat(35 /* Hash */)) {\n        return {\n            type: 'RepeaterPlaceholder',\n            value: void 0,\n            start,\n            end: scanner.pos\n        };\n    }\n    scanner.pos = start;\n}\n/**\n * Consumes numbering token like `$` from given scanner state\n */\nfunction repeaterNumber(scanner) {\n    const start = scanner.pos;\n    if (scanner.eatWhile(36 /* Dollar */)) {\n        const size = scanner.pos - start;\n        let reverse = false;\n        let base = 1;\n        let parent = 0;\n        if (scanner.eat(64 /* At */)) {\n            // Consume numbering modifiers\n            while (scanner.eat(94 /* Climb */)) {\n                parent++;\n            }\n            reverse = scanner.eat(45 /* Dash */);\n            scanner.start = scanner.pos;\n            if (scanner.eatWhile(isNumber)) {\n                base = Number(scanner.current());\n            }\n        }\n        scanner.start = start;\n        return {\n            type: 'RepeaterNumber',\n            size,\n            reverse,\n            base,\n            parent,\n            start,\n            end: scanner.pos\n        };\n    }\n}\nfunction field(scanner, ctx) {\n    const start = scanner.pos;\n    // Fields are allowed inside expressions and attributes\n    if ((ctx.expression || ctx.attribute) && scanner.eat(36 /* Dollar */) && scanner.eat(123 /* CurlyBracketOpen */)) {\n        scanner.start = scanner.pos;\n        let index;\n        let name = '';\n        if (scanner.eatWhile(isNumber)) {\n            // It’s a field\n            index = Number(scanner.current());\n            name = scanner.eat(58 /* Colon */) ? consumePlaceholder(scanner) : '';\n        }\n        else if (isAlpha(scanner.peek())) {\n            // It’s a variable\n            name = consumePlaceholder(scanner);\n        }\n        if (scanner.eat(125 /* CurlyBracketClose */)) {\n            return {\n                type: 'Field',\n                index, name,\n                start,\n                end: scanner.pos\n            };\n        }\n        throw scanner.error('Expecting }');\n    }\n    // If we reached here then there’s no valid field here, revert\n    // back to starting position\n    scanner.pos = start;\n}\n/**\n * Consumes a placeholder: value right after `:` in field. Could be empty\n */\nfunction consumePlaceholder(stream) {\n    const stack = [];\n    stream.start = stream.pos;\n    while (!stream.eof()) {\n        if (stream.eat(123 /* CurlyBracketOpen */)) {\n            stack.push(stream.pos);\n        }\n        else if (stream.eat(125 /* CurlyBracketClose */)) {\n            if (!stack.length) {\n                stream.pos--;\n                break;\n            }\n            stack.pop();\n        }\n        else {\n            stream.pos++;\n        }\n    }\n    if (stack.length) {\n        stream.pos = stack.pop();\n        throw stream.error(`Expecting }`);\n    }\n    return stream.current();\n}\n/**\n * Check if given character code is an operator and it’s allowed in current context\n */\nfunction isAllowedOperator(ch, ctx) {\n    const op = operatorType(ch);\n    if (!op || ctx.quote || ctx.expression) {\n        // No operators inside quoted values or expressions\n        return false;\n    }\n    // Inside attributes, only `equals` is allowed\n    return !ctx.attribute || op === 'equal';\n}\n/**\n * Check if given character is a space character and is allowed to be consumed\n * as a space token in current context\n */\nfunction isAllowedSpace(ch, ctx) {\n    return isSpace(ch) && !ctx.expression;\n}\n/**\n * Check if given character can be consumed as repeater in current context\n */\nfunction isAllowedRepeater(ch, ctx) {\n    return ch === 42 /* Asterisk */ && !ctx.attribute && !ctx.expression;\n}\n/**\n * If given character is a bracket, returns it’s type\n */\nfunction bracketType(ch) {\n    if (ch === 40 /* RoundBracketOpen */ || ch === 41 /* RoundBracketClose */) {\n        return 'group';\n    }\n    if (ch === 91 /* SquareBracketOpen */ || ch === 93 /* SquareBracketClose */) {\n        return 'attribute';\n    }\n    if (ch === 123 /* CurlyBracketOpen */ || ch === 125 /* CurlyBracketClose */) {\n        return 'expression';\n    }\n}\n/**\n * If given character is an operator, returns it’s type\n */\nfunction operatorType(ch) {\n    return (ch === 62 /* Child */ && 'child')\n        || (ch === 43 /* Sibling */ && 'sibling')\n        || (ch === 94 /* Climb */ && 'climb')\n        || (ch === 46 /* Dot */ && 'class')\n        || (ch === 35 /* Hash */ && 'id')\n        || (ch === 47 /* Slash */ && 'close')\n        || (ch === 61 /* Equals */ && 'equal')\n        || void 0;\n}\n/**\n * Check if given character is an open bracket\n */\nfunction isOpenBracket(ch) {\n    return ch === 123 /* CurlyBracketOpen */\n        || ch === 91 /* SquareBracketOpen */\n        || ch === 40 /* RoundBracketOpen */;\n}\n/**\n * Check if given character is allowed in element name\n */\nfunction isElementName$1(ch) {\n    return isAlphaNumericWord(ch)\n        || ch === 45 /* Dash */\n        || ch === 58 /* Colon */\n        || ch === 33 /* Excl */;\n}\n\nconst operators = {\n    child: '>',\n    class: '.',\n    climb: '^',\n    id: '#',\n    equal: '=',\n    close: '/',\n    sibling: '+'\n};\nconst tokenVisitor = {\n    Literal(token) {\n        return token.value;\n    },\n    Quote(token) {\n        return token.single ? '\\'' : '\"';\n    },\n    Bracket(token) {\n        if (token.context === 'attribute') {\n            return token.open ? '[' : ']';\n        }\n        else if (token.context === 'expression') {\n            return token.open ? '{' : '}';\n        }\n        else {\n            return token.open ? '(' : '}';\n        }\n    },\n    Operator(token) {\n        return operators[token.operator];\n    },\n    Field(token, state) {\n        if (token.index != null) {\n            // It’s a field: by default, return TextMate-compatible field\n            return token.name\n                ? `\\${${token.index}:${token.name}}`\n                : `\\${${token.index}`;\n        }\n        else if (token.name) {\n            // It’s a variable\n            return state.getVariable(token.name);\n        }\n        return '';\n    },\n    RepeaterPlaceholder(token, state) {\n        // Find closest implicit repeater\n        let repeater;\n        for (let i = state.repeaters.length - 1; i >= 0; i--) {\n            if (state.repeaters[i].implicit) {\n                repeater = state.repeaters[i];\n                break;\n            }\n        }\n        state.inserted = true;\n        return state.getText(repeater && repeater.value);\n    },\n    RepeaterNumber(token, state) {\n        let value = 1;\n        const lastIx = state.repeaters.length - 1;\n        // const repeaterIx = Math.max(0, state.repeaters.length - 1 - token.parent);\n        const repeater = state.repeaters[lastIx];\n        if (repeater) {\n            value = token.reverse\n                ? token.base + repeater.count - repeater.value - 1\n                : token.base + repeater.value;\n            if (token.parent) {\n                const parentIx = Math.max(0, lastIx - token.parent);\n                if (parentIx !== lastIx) {\n                    const parentRepeater = state.repeaters[parentIx];\n                    value += repeater.count * parentRepeater.value;\n                }\n            }\n        }\n        let result = String(value);\n        while (result.length < token.size) {\n            result = '0' + result;\n        }\n        return result;\n    },\n    WhiteSpace(token) {\n        return token.value;\n    }\n};\n/**\n * Converts given value token to string\n */\nfunction stringify(token, state) {\n    if (!tokenVisitor[token.type]) {\n        throw new Error(`Unknown token ${token.type}`);\n    }\n    return tokenVisitor[token.type](token, state);\n}\n\nconst urlRegex = /^((https?:|ftp:|file:)?\\/\\/|(www|ftp)\\.)[^ ]*$/;\nconst emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,5}$/;\n/**\n * Converts given token-based abbreviation into simplified and unrolled node-based\n * abbreviation\n */\nfunction convert(abbr, options = {}) {\n    let textInserted = false;\n    let cleanText;\n    if (options.text) {\n        if (Array.isArray(options.text)) {\n            cleanText = options.text.filter(s => s.trim());\n        }\n        else {\n            cleanText = options.text;\n        }\n    }\n    const result = {\n        type: 'Abbreviation',\n        children: convertGroup(abbr, {\n            inserted: false,\n            repeaters: [],\n            text: options.text,\n            cleanText,\n            repeatGuard: options.maxRepeat || Number.POSITIVE_INFINITY,\n            getText(pos) {\n                var _a;\n                textInserted = true;\n                let value;\n                if (Array.isArray(options.text)) {\n                    if (pos !== undefined && pos >= 0 && pos < cleanText.length) {\n                        return cleanText[pos];\n                    }\n                    value = pos !== undefined ? options.text[pos] : options.text.join('\\n');\n                }\n                else {\n                    value = (_a = options.text) !== null && _a !== void 0 ? _a : '';\n                }\n                return value;\n            },\n            getVariable(name) {\n                const varValue = options.variables && options.variables[name];\n                return varValue != null ? varValue : name;\n            }\n        })\n    };\n    if (options.text != null && !textInserted) {\n        // Text given but no implicitly repeated elements: insert it into\n        // deepest child\n        const deepest = deepestNode(last(result.children));\n        if (deepest) {\n            const text = Array.isArray(options.text) ? options.text.join('\\n') : options.text;\n            insertText(deepest, text);\n            if (deepest.name === 'a' && options.href) {\n                // Automatically update value of `<a>` element if inserting URL or email\n                insertHref(deepest, text);\n            }\n        }\n    }\n    return result;\n}\n/**\n * Converts given statement to abbreviation nodes\n */\nfunction convertStatement(node, state) {\n    let result = [];\n    if (node.repeat) {\n        // Node is repeated: we should create copies of given node\n        // and supply context token with actual repeater state\n        const original = node.repeat;\n        const repeat = Object.assign({}, original);\n        repeat.count = repeat.implicit && Array.isArray(state.text)\n            ? state.cleanText.length\n            : (repeat.count || 1);\n        let items;\n        state.repeaters.push(repeat);\n        for (let i = 0; i < repeat.count; i++) {\n            repeat.value = i;\n            node.repeat = repeat;\n            items = isGroup(node)\n                ? convertGroup(node, state)\n                : convertElement(node, state);\n            if (repeat.implicit && !state.inserted) {\n                // It’s an implicit repeater but no repeater placeholders found inside,\n                // we should insert text into deepest node\n                const target = last(items);\n                const deepest = target && deepestNode(target);\n                if (deepest) {\n                    insertText(deepest, state.getText(repeat.value));\n                }\n            }\n            result = result.concat(items);\n            // We should output at least one repeated item even if it’s reached\n            // repeat limit\n            if (--state.repeatGuard <= 0) {\n                break;\n            }\n        }\n        state.repeaters.pop();\n        node.repeat = original;\n        if (repeat.implicit) {\n            state.inserted = true;\n        }\n    }\n    else {\n        result = result.concat(isGroup(node) ? convertGroup(node, state) : convertElement(node, state));\n    }\n    return result;\n}\nfunction convertElement(node, state) {\n    let children = [];\n    const elem = {\n        type: 'AbbreviationNode',\n        name: node.name && stringifyName(node.name, state),\n        value: node.value && stringifyValue(node.value, state),\n        attributes: void 0,\n        children,\n        repeat: node.repeat && Object.assign({}, node.repeat),\n        selfClosing: node.selfClose,\n    };\n    let result = [elem];\n    for (const child of node.elements) {\n        children = children.concat(convertStatement(child, state));\n    }\n    if (node.attributes) {\n        elem.attributes = [];\n        for (const attr of node.attributes) {\n            elem.attributes.push(convertAttribute(attr, state));\n        }\n    }\n    // In case if current node is a text-only snippet without fields, we should\n    // put all children as siblings\n    if (!elem.name && !elem.attributes && elem.value && !elem.value.some(isField)) {\n        // XXX it’s unclear that `children` is not bound to `elem`\n        // due to concat operation\n        result = result.concat(children);\n    }\n    else {\n        elem.children = children;\n    }\n    return result;\n}\nfunction convertGroup(node, state) {\n    let result = [];\n    for (const child of node.elements) {\n        result = result.concat(convertStatement(child, state));\n    }\n    if (node.repeat) {\n        result = attachRepeater(result, node.repeat);\n    }\n    return result;\n}\nfunction convertAttribute(node, state) {\n    let implied = false;\n    let isBoolean = false;\n    let valueType = node.expression ? 'expression' : 'raw';\n    let value;\n    const name = node.name && stringifyName(node.name, state);\n    if (name && name[0] === '!') {\n        implied = true;\n    }\n    if (name && name[name.length - 1] === '.') {\n        isBoolean = true;\n    }\n    if (node.value) {\n        const tokens = node.value.slice();\n        if (isQuote(tokens[0])) {\n            // It’s a quoted value: remove quotes from output but mark attribute\n            // value as quoted\n            const quote = tokens.shift();\n            if (tokens.length && last(tokens).type === quote.type) {\n                tokens.pop();\n            }\n            valueType = quote.single ? 'singleQuote' : 'doubleQuote';\n        }\n        else if (isBracket(tokens[0], 'expression', true)) {\n            // Value is expression: remove brackets but mark value type\n            valueType = 'expression';\n            tokens.shift();\n            if (isBracket(last(tokens), 'expression', false)) {\n                tokens.pop();\n            }\n        }\n        value = stringifyValue(tokens, state);\n    }\n    return {\n        name: isBoolean || implied\n            ? name.slice(implied ? 1 : 0, isBoolean ? -1 : void 0)\n            : name,\n        value,\n        boolean: isBoolean,\n        implied,\n        valueType\n    };\n}\n/**\n * Converts given token list to string\n */\nfunction stringifyName(tokens, state) {\n    let str = '';\n    for (let i = 0; i < tokens.length; i++) {\n        str += stringify(tokens[i], state);\n    }\n    return str;\n}\n/**\n * Converts given token list to value list\n */\nfunction stringifyValue(tokens, state) {\n    const result = [];\n    let str = '';\n    for (let i = 0, token; i < tokens.length; i++) {\n        token = tokens[i];\n        if (isField(token)) {\n            // We should keep original fields in output since some editors has their\n            // own syntax for field or doesn’t support fields at all so we should\n            // capture actual field location in output stream\n            if (str) {\n                result.push(str);\n                str = '';\n            }\n            result.push(token);\n        }\n        else {\n            str += stringify(token, state);\n        }\n    }\n    if (str) {\n        result.push(str);\n    }\n    return result;\n}\nfunction isGroup(node) {\n    return node.type === 'TokenGroup';\n}\nfunction isField(token) {\n    return typeof token === 'object' && token.type === 'Field' && token.index != null;\n}\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\nfunction deepestNode(node) {\n    return node.children.length ? deepestNode(last(node.children)) : node;\n}\nfunction insertText(node, text) {\n    if (node.value) {\n        const lastToken = last(node.value);\n        if (typeof lastToken === 'string') {\n            node.value[node.value.length - 1] += text;\n        }\n        else {\n            node.value.push(text);\n        }\n    }\n    else {\n        node.value = [text];\n    }\n}\nfunction insertHref(node, text) {\n    var _a;\n    let href = '';\n    if (urlRegex.test(text)) {\n        href = text;\n        if (!/\\w+:/.test(href) && !href.startsWith('//')) {\n            href = `http://${href}`;\n        }\n    }\n    else if (emailRegex.test(text)) {\n        href = `mailto:${text}`;\n    }\n    const hrefAttribute = (_a = node.attributes) === null || _a === void 0 ? void 0 : _a.find(attr => attr.name === 'href');\n    if (!hrefAttribute) {\n        if (!node.attributes) {\n            node.attributes = [];\n        }\n        node.attributes.push({ name: 'href', value: [href], valueType: 'doubleQuote' });\n    }\n    else if (!hrefAttribute.value) {\n        hrefAttribute.value = [href];\n    }\n}\nfunction attachRepeater(items, repeater) {\n    for (const item of items) {\n        if (!item.repeat) {\n            item.repeat = Object.assign({}, repeater);\n        }\n    }\n    return items;\n}\n\n/**\n * Parses given abbreviation into node tree\n */\nfunction parseAbbreviation(abbr, options) {\n    try {\n        const tokens = typeof abbr === 'string' ? tokenize(abbr) : abbr;\n        return convert(abbreviation(tokens, options), options);\n    }\n    catch (err) {\n        if (err instanceof ScannerError && typeof abbr === 'string') {\n            err.message += `\\n${abbr}\\n${'-'.repeat(err.pos)}^`;\n        }\n        throw err;\n    }\n}\n\nexport default parseAbbreviation;\nexport { convert, getToken, abbreviation as parse, tokenize };\n//# sourceMappingURL=abbreviation.es.js.map\n","import Scanner, { isNumber, isAlpha, isAlphaWord, isQuote, isSpace, isAlphaNumericWord, ScannerError } from '@emmetio/scanner';\n\nfunction tokenize(abbr, isValue) {\n    let brackets = 0;\n    let token;\n    const scanner = new Scanner(abbr);\n    const tokens = [];\n    while (!scanner.eof()) {\n        token = getToken(scanner, brackets === 0 && !isValue);\n        if (!token) {\n            throw scanner.error('Unexpected character');\n        }\n        if (token.type === 'Bracket') {\n            if (!brackets && token.open) {\n                mergeTokens(scanner, tokens);\n            }\n            brackets += token.open ? 1 : -1;\n            if (brackets < 0) {\n                throw scanner.error('Unexpected bracket', token.start);\n            }\n        }\n        tokens.push(token);\n        // Forcibly consume next operator after unit-less numeric value or color:\n        // next dash `-` must be used as value delimiter\n        if (shouldConsumeDashAfter(token) && (token = operator(scanner))) {\n            tokens.push(token);\n        }\n    }\n    return tokens;\n}\n/**\n * Returns next token from given scanner, if possible\n */\nfunction getToken(scanner, short) {\n    return field(scanner)\n        || numberValue(scanner)\n        || colorValue(scanner)\n        || stringValue(scanner)\n        || bracket(scanner)\n        || operator(scanner)\n        || whiteSpace(scanner)\n        || literal(scanner, short);\n}\nfunction field(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(36 /* Dollar */) && scanner.eat(123 /* CurlyBracketOpen */)) {\n        scanner.start = scanner.pos;\n        let index;\n        let name = '';\n        if (scanner.eatWhile(isNumber)) {\n            // It’s a field\n            index = Number(scanner.current());\n            name = scanner.eat(58 /* Colon */) ? consumePlaceholder(scanner) : '';\n        }\n        else if (isAlpha(scanner.peek())) {\n            // It’s a variable\n            name = consumePlaceholder(scanner);\n        }\n        if (scanner.eat(125 /* CurlyBracketClose */)) {\n            return {\n                type: 'Field',\n                index, name,\n                start,\n                end: scanner.pos\n            };\n        }\n        throw scanner.error('Expecting }');\n    }\n    // If we reached here then there’s no valid field here, revert\n    // back to starting position\n    scanner.pos = start;\n}\n/**\n * Consumes a placeholder: value right after `:` in field. Could be empty\n */\nfunction consumePlaceholder(stream) {\n    const stack = [];\n    stream.start = stream.pos;\n    while (!stream.eof()) {\n        if (stream.eat(123 /* CurlyBracketOpen */)) {\n            stack.push(stream.pos);\n        }\n        else if (stream.eat(125 /* CurlyBracketClose */)) {\n            if (!stack.length) {\n                stream.pos--;\n                break;\n            }\n            stack.pop();\n        }\n        else {\n            stream.pos++;\n        }\n    }\n    if (stack.length) {\n        stream.pos = stack.pop();\n        throw stream.error(`Expecting }`);\n    }\n    return stream.current();\n}\n/**\n * Consumes literal from given scanner\n * @param short Use short notation for consuming value.\n * The difference between “short” and “full” notation is that first one uses\n * alpha characters only and used for extracting keywords from abbreviation,\n * while “full” notation also supports numbers and dashes\n */\nfunction literal(scanner, short) {\n    const start = scanner.pos;\n    if (scanner.eat(isIdentPrefix)) {\n        // SCSS or LESS variable\n        // NB a bit dirty hack: if abbreviation starts with identifier prefix,\n        // consume alpha characters only to allow embedded variables\n        scanner.eatWhile(start ? isKeyword : isLiteral);\n    }\n    else if (scanner.eat(isAlphaWord)) {\n        scanner.eatWhile(short ? isLiteral : isKeyword);\n    }\n    else {\n        // Allow dots only at the beginning of literal\n        scanner.eat(46 /* Dot */);\n        scanner.eatWhile(isLiteral);\n    }\n    if (start !== scanner.pos) {\n        scanner.start = start;\n        return createLiteral(scanner, scanner.start = start);\n    }\n}\nfunction createLiteral(scanner, start = scanner.start, end = scanner.pos) {\n    return {\n        type: 'Literal',\n        value: scanner.substring(start, end),\n        start,\n        end\n    };\n}\n/**\n * Consumes numeric CSS value (number with optional unit) from current stream,\n * if possible\n */\nfunction numberValue(scanner) {\n    const start = scanner.pos;\n    if (consumeNumber(scanner)) {\n        scanner.start = start;\n        const rawValue = scanner.current();\n        // eat unit, which can be a % or alpha word\n        scanner.start = scanner.pos;\n        scanner.eat(37 /* Percent */) || scanner.eatWhile(isAlphaWord);\n        return {\n            type: 'NumberValue',\n            value: Number(rawValue),\n            rawValue,\n            unit: scanner.current(),\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes quoted string value from given scanner\n */\nfunction stringValue(scanner) {\n    const ch = scanner.peek();\n    const start = scanner.pos;\n    let finished = false;\n    if (isQuote(ch)) {\n        scanner.pos++;\n        while (!scanner.eof()) {\n            // Do not throw error on malformed string\n            if (scanner.eat(ch)) {\n                finished = true;\n                break;\n            }\n            else {\n                scanner.pos++;\n            }\n        }\n        scanner.start = start;\n        return {\n            type: 'StringValue',\n            value: scanner.substring(start + 1, scanner.pos - (finished ? 1 : 0)),\n            quote: ch === 39 /* SingleQuote */ ? 'single' : 'double',\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes a color token from given string\n */\nfunction colorValue(scanner) {\n    // supported color variations:\n    // #abc   → #aabbccc\n    // #0     → #000000\n    // #fff.5 → rgba(255, 255, 255, 0.5)\n    // #t     → transparent\n    const start = scanner.pos;\n    if (scanner.eat(35 /* Hash */)) {\n        const valueStart = scanner.pos;\n        let color = '';\n        let alpha = '';\n        if (scanner.eatWhile(isHex)) {\n            color = scanner.substring(valueStart, scanner.pos);\n            alpha = colorAlpha(scanner);\n        }\n        else if (scanner.eat(116 /* Transparent */)) {\n            color = '0';\n            alpha = colorAlpha(scanner) || '0';\n        }\n        else {\n            alpha = colorAlpha(scanner);\n        }\n        if (color || alpha || scanner.eof()) {\n            const { r, g, b, a } = parseColor(color, alpha);\n            return {\n                type: 'ColorValue',\n                r, g, b, a,\n                raw: scanner.substring(start + 1, scanner.pos),\n                start,\n                end: scanner.pos\n            };\n        }\n        else {\n            // Consumed # but no actual value: invalid color value, treat it as literal\n            return createLiteral(scanner, start);\n        }\n    }\n    scanner.pos = start;\n}\n/**\n * Consumes alpha value of color: `.1`\n */\nfunction colorAlpha(scanner) {\n    const start = scanner.pos;\n    if (scanner.eat(46 /* Dot */)) {\n        scanner.start = start;\n        if (scanner.eatWhile(isNumber)) {\n            return scanner.current();\n        }\n        return '1';\n    }\n    return '';\n}\n/**\n * Consumes white space characters as string literal from given scanner\n */\nfunction whiteSpace(scanner) {\n    const start = scanner.pos;\n    if (scanner.eatWhile(isSpace)) {\n        return {\n            type: 'WhiteSpace',\n            start,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes bracket from given scanner\n */\nfunction bracket(scanner) {\n    const ch = scanner.peek();\n    if (isBracket(ch)) {\n        return {\n            type: 'Bracket',\n            open: ch === 40 /* RoundBracketOpen */,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Consumes operator from given scanner\n */\nfunction operator(scanner) {\n    const op = operatorType(scanner.peek());\n    if (op) {\n        return {\n            type: 'Operator',\n            operator: op,\n            start: scanner.pos++,\n            end: scanner.pos\n        };\n    }\n}\n/**\n * Eats number value from given stream\n * @return Returns `true` if number was consumed\n */\nfunction consumeNumber(stream) {\n    const start = stream.pos;\n    stream.eat(45 /* Dash */);\n    const afterNegative = stream.pos;\n    const hasDecimal = stream.eatWhile(isNumber);\n    const prevPos = stream.pos;\n    if (stream.eat(46 /* Dot */)) {\n        // It’s perfectly valid to have numbers like `1.`, which enforces\n        // value to float unit type\n        const hasFloat = stream.eatWhile(isNumber);\n        if (!hasDecimal && !hasFloat) {\n            // Lone dot\n            stream.pos = prevPos;\n        }\n    }\n    // Edge case: consumed dash only: not a number, bail-out\n    if (stream.pos === afterNegative) {\n        stream.pos = start;\n    }\n    return stream.pos !== start;\n}\nfunction isIdentPrefix(code) {\n    return code === 64 /* At */ || code === 36 /* Dollar */;\n}\n/**\n * If given character is an operator, returns it’s type\n */\nfunction operatorType(ch) {\n    return (ch === 43 /* Sibling */ && \"+\" /* Sibling */)\n        || (ch === 33 /* Excl */ && \"!\" /* Important */)\n        || (ch === 44 /* Comma */ && \",\" /* ArgumentDelimiter */)\n        || (ch === 58 /* Colon */ && \":\" /* PropertyDelimiter */)\n        || (ch === 45 /* Dash */ && \"-\" /* ValueDelimiter */)\n        || void 0;\n}\n/**\n * Check if given code is a hex value (/0-9a-f/)\n */\nfunction isHex(code) {\n    return isNumber(code) || isAlpha(code, 65, 70); // A-F\n}\nfunction isKeyword(code) {\n    return isAlphaNumericWord(code) || code === 45 /* Dash */;\n}\nfunction isBracket(code) {\n    return code === 40 /* RoundBracketOpen */ || code === 41 /* RoundBracketClose */;\n}\nfunction isLiteral(code) {\n    return isAlphaWord(code) || code === 37 /* Percent */ || code === 47 /* Slash */;\n}\n/**\n * Parses given color value from abbreviation into RGBA format\n */\nfunction parseColor(value, alpha) {\n    let r = '0';\n    let g = '0';\n    let b = '0';\n    let a = Number(alpha != null && alpha !== '' ? alpha : 1);\n    if (value === 't') {\n        a = 0;\n    }\n    else {\n        switch (value.length) {\n            case 0:\n                break;\n            case 1:\n                r = g = b = value + value;\n                break;\n            case 2:\n                r = g = b = value;\n                break;\n            case 3:\n                r = value[0] + value[0];\n                g = value[1] + value[1];\n                b = value[2] + value[2];\n                break;\n            default:\n                value += value;\n                r = value.slice(0, 2);\n                g = value.slice(2, 4);\n                b = value.slice(4, 6);\n        }\n    }\n    return {\n        r: parseInt(r, 16),\n        g: parseInt(g, 16),\n        b: parseInt(b, 16),\n        a\n    };\n}\n/**\n * Check if scanner reader must consume dash after given token.\n * Used in cases where user must explicitly separate numeric values\n */\nfunction shouldConsumeDashAfter(token) {\n    return token.type === 'ColorValue' || (token.type === 'NumberValue' && !token.unit);\n}\n/**\n * Merges last adjacent tokens into a single literal.\n * This function is used to overcome edge case when function name was parsed\n * as a list of separate tokens. For example, a `scale3d()` value will be\n * parsed as literal and number tokens (`scale` and `3d`) which is a perfectly\n * valid abbreviation but undesired result. This function will detect last adjacent\n * literal and number values and combine them into single literal\n */\nfunction mergeTokens(scanner, tokens) {\n    let start = 0;\n    let end = 0;\n    while (tokens.length) {\n        const token = last(tokens);\n        if (token.type === 'Literal' || token.type === 'NumberValue') {\n            start = token.start;\n            if (!end) {\n                end = token.end;\n            }\n            tokens.pop();\n        }\n        else {\n            break;\n        }\n    }\n    if (start !== end) {\n        tokens.push(createLiteral(scanner, start, end));\n    }\n}\nfunction last(arr) {\n    return arr[arr.length - 1];\n}\n\nfunction tokenScanner(tokens) {\n    return {\n        tokens,\n        start: 0,\n        pos: 0,\n        size: tokens.length\n    };\n}\nfunction peek(scanner) {\n    return scanner.tokens[scanner.pos];\n}\nfunction readable(scanner) {\n    return scanner.pos < scanner.size;\n}\nfunction consume(scanner, test) {\n    if (test(peek(scanner))) {\n        scanner.pos++;\n        return true;\n    }\n    return false;\n}\nfunction error(scanner, message, token = peek(scanner)) {\n    if (token && token.start != null) {\n        message += ` at ${token.start}`;\n    }\n    const err = new Error(message);\n    err['pos'] = token && token.start;\n    return err;\n}\n\nfunction parser(tokens, options = {}) {\n    const scanner = tokenScanner(tokens);\n    const result = [];\n    let property;\n    while (readable(scanner)) {\n        if (property = consumeProperty(scanner, options)) {\n            result.push(property);\n        }\n        else if (!consume(scanner, isSiblingOperator)) {\n            throw error(scanner, 'Unexpected token');\n        }\n    }\n    return result;\n}\n/**\n * Consumes single CSS property\n */\nfunction consumeProperty(scanner, options) {\n    let name;\n    let important = false;\n    let valueFragment;\n    const value = [];\n    const token = peek(scanner);\n    const valueMode = !!options.value;\n    if (!valueMode && isLiteral$1(token) && !isFunctionStart(scanner)) {\n        scanner.pos++;\n        name = token.value;\n        // Consume any following value delimiter after property name\n        consume(scanner, isValueDelimiter);\n    }\n    // Skip whitespace right after property name, if any\n    if (valueMode) {\n        consume(scanner, isWhiteSpace);\n    }\n    while (readable(scanner)) {\n        if (consume(scanner, isImportant)) {\n            important = true;\n        }\n        else if (valueFragment = consumeValue(scanner, valueMode)) {\n            value.push(valueFragment);\n        }\n        else if (!consume(scanner, isFragmentDelimiter)) {\n            break;\n        }\n    }\n    if (name || value.length || important) {\n        return { name, value, important };\n    }\n}\n/**\n * Consumes single value fragment, e.g. all value tokens before comma\n */\nfunction consumeValue(scanner, inArgument) {\n    const result = [];\n    let token;\n    let args;\n    while (readable(scanner)) {\n        token = peek(scanner);\n        if (isValue(token)) {\n            scanner.pos++;\n            if (isLiteral$1(token) && (args = consumeArguments(scanner))) {\n                result.push({\n                    type: 'FunctionCall',\n                    name: token.value,\n                    arguments: args\n                });\n            }\n            else {\n                result.push(token);\n            }\n        }\n        else if (isValueDelimiter(token) || (inArgument && isWhiteSpace(token))) {\n            scanner.pos++;\n        }\n        else {\n            break;\n        }\n    }\n    return result.length\n        ? { type: 'CSSValue', value: result }\n        : void 0;\n}\nfunction consumeArguments(scanner) {\n    const start = scanner.pos;\n    if (consume(scanner, isOpenBracket)) {\n        const args = [];\n        let value;\n        while (readable(scanner) && !consume(scanner, isCloseBracket)) {\n            if (value = consumeValue(scanner, true)) {\n                args.push(value);\n            }\n            else if (!consume(scanner, isWhiteSpace) && !consume(scanner, isArgumentDelimiter)) {\n                throw error(scanner, 'Unexpected token');\n            }\n        }\n        scanner.start = start;\n        return args;\n    }\n}\nfunction isLiteral$1(token) {\n    return token && token.type === 'Literal';\n}\nfunction isBracket$1(token, open) {\n    return token && token.type === 'Bracket' && (open == null || token.open === open);\n}\nfunction isOpenBracket(token) {\n    return isBracket$1(token, true);\n}\nfunction isCloseBracket(token) {\n    return isBracket$1(token, false);\n}\nfunction isWhiteSpace(token) {\n    return token && token.type === 'WhiteSpace';\n}\nfunction isOperator(token, operator) {\n    return token && token.type === 'Operator' && (!operator || token.operator === operator);\n}\nfunction isSiblingOperator(token) {\n    return isOperator(token, \"+\" /* Sibling */);\n}\nfunction isArgumentDelimiter(token) {\n    return isOperator(token, \",\" /* ArgumentDelimiter */);\n}\nfunction isFragmentDelimiter(token) {\n    return isArgumentDelimiter(token);\n}\nfunction isImportant(token) {\n    return isOperator(token, \"!\" /* Important */);\n}\nfunction isValue(token) {\n    return token.type === 'StringValue'\n        || token.type === 'ColorValue'\n        || token.type === 'NumberValue'\n        || token.type === 'Literal'\n        || token.type === 'Field';\n}\nfunction isValueDelimiter(token) {\n    return isOperator(token, \":\" /* PropertyDelimiter */)\n        || isOperator(token, \"-\" /* ValueDelimiter */);\n}\nfunction isFunctionStart(scanner) {\n    const t1 = scanner.tokens[scanner.pos];\n    const t2 = scanner.tokens[scanner.pos + 1];\n    return t1 && t2 && isLiteral$1(t1) && t2.type === 'Bracket';\n}\n\n/**\n * Parses given abbreviation into property set\n */\nfunction parse(abbr, options) {\n    try {\n        const tokens = typeof abbr === 'string' ? tokenize(abbr, options && options.value) : abbr;\n        return parser(tokens, options);\n    }\n    catch (err) {\n        if (err instanceof ScannerError && typeof abbr === 'string') {\n            err.message += `\\n${abbr}\\n${'-'.repeat(err.pos)}^`;\n        }\n        throw err;\n    }\n}\n\nexport default parse;\nexport { getToken, parser, tokenize };\n","import parse$2 from '@emmetio/abbreviation';\nexport { default as markupAbbreviation } from '@emmetio/abbreviation';\nimport parse$3 from '@emmetio/css-abbreviation';\nexport { default as stylesheetAbbreviation } from '@emmetio/css-abbreviation';\n\n/**\n * Merges attributes in current node: de-duplicates attributes with the same name\n * and merges class names\n */\nfunction mergeAttributes(node, config) {\n    if (!node.attributes) {\n        return;\n    }\n    const attributes = [];\n    const lookup = {};\n    for (const attr of node.attributes) {\n        if (attr.name) {\n            const attrName = attr.name;\n            if (attrName in lookup) {\n                const prev = lookup[attrName];\n                if (attrName === 'class') {\n                    prev.value = mergeValue(prev.value, attr.value, ' ');\n                }\n                else {\n                    mergeDeclarations(prev, attr, config);\n                }\n            }\n            else {\n                // Create new attribute instance so we can safely modify it later\n                attributes.push(lookup[attrName] = Object.assign({}, attr));\n            }\n        }\n        else {\n            attributes.push(attr);\n        }\n    }\n    node.attributes = attributes;\n}\n/**\n * Merges two token lists into single list. Adjacent strings are merged together\n */\nfunction mergeValue(prev, next, glue) {\n    if (prev && next) {\n        if (prev.length && glue) {\n            append(prev, glue);\n        }\n        for (const t of next) {\n            append(prev, t);\n        }\n        return prev;\n    }\n    const result = prev || next;\n    return result && result.slice();\n}\n/**\n * Merges data from `src` attribute into `dest` and returns it\n */\nfunction mergeDeclarations(dest, src, config) {\n    dest.name = src.name;\n    if (!config.options['output.reverseAttributes']) {\n        dest.value = src.value;\n    }\n    // Keep high-priority properties\n    if (!dest.implied) {\n        dest.implied = src.implied;\n    }\n    if (!dest.boolean) {\n        dest.boolean = src.boolean;\n    }\n    if (dest.valueType !== 'expression') {\n        dest.valueType = src.valueType;\n    }\n    return dest;\n}\nfunction append(tokens, value) {\n    const lastIx = tokens.length - 1;\n    if (typeof tokens[lastIx] === 'string' && typeof value === 'string') {\n        tokens[lastIx] += value;\n    }\n    else {\n        tokens.push(value);\n    }\n}\n\n/**\n * Walks over each child node of given markup abbreviation AST node (not including\n * given one) and invokes `fn` on each node.\n * The `fn` callback accepts context node, list of ancestor nodes and optional\n * state object\n */\nfunction walk(node, fn, state) {\n    const ancestors = [node];\n    const callback = (ctx) => {\n        fn(ctx, ancestors, state);\n        ancestors.push(ctx);\n        ctx.children.forEach(callback);\n        ancestors.pop();\n    };\n    node.children.forEach(callback);\n}\n/**\n * Finds node which is the deepest for in current node or node itself.\n */\nfunction findDeepest(node) {\n    let parent;\n    while (node.children.length) {\n        parent = node;\n        node = node.children[node.children.length - 1];\n    }\n    return { parent, node };\n}\nfunction isNode(node) {\n    return node.type === 'AbbreviationNode';\n}\n\n/**\n * Finds matching snippet from `registry` and resolves it into a parsed abbreviation.\n * Resolved node is then updated or replaced with matched abbreviation tree.\n *\n * A HTML registry basically contains aliases to another Emmet abbreviations,\n * e.g. a predefined set of name, attributes and so on, possibly a complex\n * abbreviation with multiple elements. So we have to get snippet, parse it\n * and recursively resolve it.\n */\nfunction resolveSnippets(abbr, config) {\n    const stack = [];\n    const reversed = config.options['output.reverseAttributes'];\n    const resolve = (child) => {\n        const snippet = child.name && config.snippets[child.name];\n        // A snippet in stack means circular reference.\n        // It can be either a user error or a perfectly valid snippet like\n        // \"img\": \"img[src alt]/\", e.g. an element with predefined shape.\n        // In any case, simply stop parsing and keep element as is\n        if (!snippet || stack.includes(snippet)) {\n            return null;\n        }\n        const snippetAbbr = parse$2(snippet, config);\n        stack.push(snippet);\n        walkResolve(snippetAbbr, resolve);\n        stack.pop();\n        // Add attributes from current node into every top-level node of parsed abbreviation\n        for (const topNode of snippetAbbr.children) {\n            if (child.attributes) {\n                const from = topNode.attributes || [];\n                const to = child.attributes || [];\n                topNode.attributes = reversed ? to.concat(from) : from.concat(to);\n            }\n            mergeNodes(child, topNode);\n        }\n        return snippetAbbr;\n    };\n    walkResolve(abbr, resolve);\n    return abbr;\n}\nfunction walkResolve(node, resolve, config) {\n    let children = [];\n    for (const child of node.children) {\n        const resolved = resolve(child);\n        if (resolved) {\n            children = children.concat(resolved.children);\n            const deepest = findDeepest(resolved);\n            if (isNode(deepest.node)) {\n                deepest.node.children = deepest.node.children.concat(walkResolve(child, resolve));\n            }\n        }\n        else {\n            children.push(child);\n            child.children = walkResolve(child, resolve);\n        }\n    }\n    return node.children = children;\n}\n/**\n * Adds data from first node into second node\n */\nfunction mergeNodes(from, to) {\n    if (from.selfClosing) {\n        to.selfClosing = true;\n    }\n    if (from.value != null) {\n        to.value = from.value;\n    }\n    if (from.repeat) {\n        to.repeat = from.repeat;\n    }\n}\n\nfunction createOutputStream(options, level = 0) {\n    return {\n        options,\n        value: '',\n        level,\n        offset: 0,\n        line: 0,\n        column: 0\n    };\n}\n/**\n * Pushes plain string into output stream without newline processing\n */\nfunction push(stream, text) {\n    const processText = stream.options['output.text'];\n    _push(stream, processText(text, stream.offset, stream.line, stream.column));\n}\n/**\n * Pushes given string with possible newline formatting into output\n */\nfunction pushString(stream, value) {\n    // If given value contains newlines, we should push content line-by-line and\n    // use `pushNewline()` to maintain proper line/column state\n    const lines = splitByLines(value);\n    for (let i = 0, il = lines.length - 1; i <= il; i++) {\n        push(stream, lines[i]);\n        if (i !== il) {\n            pushNewline(stream, true);\n        }\n    }\n}\n/**\n * Pushes new line into given output stream\n */\nfunction pushNewline(stream, indent) {\n    const baseIndent = stream.options['output.baseIndent'];\n    const newline = stream.options['output.newline'];\n    push(stream, newline + baseIndent);\n    stream.line++;\n    stream.column = baseIndent.length;\n    if (indent) {\n        pushIndent(stream, indent === true ? stream.level : indent);\n    }\n}\n/**\n * Adds indentation of `size` to current output stream\n */\nfunction pushIndent(stream, size = stream.level) {\n    const indent = stream.options['output.indent'];\n    push(stream, indent.repeat(Math.max(size, 0)));\n}\n/**\n * Pushes field/tabstop into output stream\n */\nfunction pushField(stream, index, placeholder) {\n    const field = stream.options['output.field'];\n    // NB: use `_push` instead of `push` to skip text processing\n    _push(stream, field(index, placeholder, stream.offset, stream.line, stream.column));\n}\n/**\n * Returns given tag name formatted according to given config\n */\nfunction tagName(name, config) {\n    return strCase(name, config.options['output.tagCase']);\n}\n/**\n * Returns given attribute name formatted according to given config\n */\nfunction attrName(name, config) {\n    return strCase(name, config.options['output.attributeCase']);\n}\n/**\n * Returns character for quoting value of given attribute\n */\nfunction attrQuote(attr, config, isOpen) {\n    if (attr.valueType === 'expression') {\n        return isOpen ? '{' : '}';\n    }\n    return config.options['output.attributeQuotes'] === 'single' ? '\\'' : '\"';\n}\n/**\n * Check if given attribute is boolean\n */\nfunction isBooleanAttribute(attr, config) {\n    return attr.boolean\n        || config.options['output.booleanAttributes'].includes((attr.name || '').toLowerCase());\n}\n/**\n * Returns a token for self-closing tag, depending on current options\n */\nfunction selfClose(config) {\n    switch (config.options['output.selfClosingStyle']) {\n        case 'xhtml': return ' /';\n        case 'xml': return '/';\n        default: return '';\n    }\n}\n/**\n * Check if given tag name belongs to inline-level element\n * @param node Parsed node or tag name\n */\nfunction isInline(node, config) {\n    if (typeof node === 'string') {\n        return config.options.inlineElements.includes(node.toLowerCase());\n    }\n    // inline node is a node either with inline-level name or text-only node\n    return node.name ? isInline(node.name, config) : Boolean(node.value && !node.attributes);\n}\n/**\n * Splits given text by lines\n */\nfunction splitByLines(text) {\n    return text.split(/\\r\\n|\\r|\\n/g);\n}\n/**\n * Pushes raw string into output stream without any processing\n */\nfunction _push(stream, text) {\n    stream.value += text;\n    stream.offset += text.length;\n    stream.column += text.length;\n}\nfunction strCase(str, type) {\n    if (type) {\n        return type === 'upper' ? str.toUpperCase() : str.toLowerCase();\n    }\n    return str;\n}\n\nconst elementMap = {\n    p: 'span',\n    ul: 'li',\n    ol: 'li',\n    table: 'tr',\n    tr: 'td',\n    tbody: 'tr',\n    thead: 'tr',\n    tfoot: 'tr',\n    colgroup: 'col',\n    select: 'option',\n    optgroup: 'option',\n    audio: 'source',\n    video: 'source',\n    object: 'param',\n    map: 'area'\n};\nfunction implicitTag(node, ancestors, config) {\n    if (!node.name && node.attributes) {\n        resolveImplicitTag(node, ancestors, config);\n    }\n}\nfunction resolveImplicitTag(node, ancestors, config) {\n    const parent = getParentElement(ancestors);\n    const contextName = config.context ? config.context.name : '';\n    const parentName = lowercase(parent ? parent.name : contextName);\n    node.name = elementMap[parentName]\n        || (isInline(parentName, config) ? 'span' : 'div');\n}\nfunction lowercase(str) {\n    return (str || '').toLowerCase();\n}\n/**\n * Returns closest element node from given ancestors list\n */\nfunction getParentElement(ancestors) {\n    for (let i = ancestors.length - 1; i >= 0; i--) {\n        const elem = ancestors[i];\n        if (isNode(elem)) {\n            return elem;\n        }\n    }\n}\n\nvar latin = {\n\t\"common\": [\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipisicing\", \"elit\"],\n\t\"words\": [\"exercitationem\", \"perferendis\", \"perspiciatis\", \"laborum\", \"eveniet\",\n\t\t\"sunt\", \"iure\", \"nam\", \"nobis\", \"eum\", \"cum\", \"officiis\", \"excepturi\",\n\t\t\"odio\", \"consectetur\", \"quasi\", \"aut\", \"quisquam\", \"vel\", \"eligendi\",\n\t\t\"itaque\", \"non\", \"odit\", \"tempore\", \"quaerat\", \"dignissimos\",\n\t\t\"facilis\", \"neque\", \"nihil\", \"expedita\", \"vitae\", \"vero\", \"ipsum\",\n\t\t\"nisi\", \"animi\", \"cumque\", \"pariatur\", \"velit\", \"modi\", \"natus\",\n\t\t\"iusto\", \"eaque\", \"sequi\", \"illo\", \"sed\", \"ex\", \"et\", \"voluptatibus\",\n\t\t\"tempora\", \"veritatis\", \"ratione\", \"assumenda\", \"incidunt\", \"nostrum\",\n\t\t\"placeat\", \"aliquid\", \"fuga\", \"provident\", \"praesentium\", \"rem\",\n\t\t\"necessitatibus\", \"suscipit\", \"adipisci\", \"quidem\", \"possimus\",\n\t\t\"voluptas\", \"debitis\", \"sint\", \"accusantium\", \"unde\", \"sapiente\",\n\t\t\"voluptate\", \"qui\", \"aspernatur\", \"laudantium\", \"soluta\", \"amet\",\n\t\t\"quo\", \"aliquam\", \"saepe\", \"culpa\", \"libero\", \"ipsa\", \"dicta\",\n\t\t\"reiciendis\", \"nesciunt\", \"doloribus\", \"autem\", \"impedit\", \"minima\",\n\t\t\"maiores\", \"repudiandae\", \"ipsam\", \"obcaecati\", \"ullam\", \"enim\",\n\t\t\"totam\", \"delectus\", \"ducimus\", \"quis\", \"voluptates\", \"dolores\",\n\t\t\"molestiae\", \"harum\", \"dolorem\", \"quia\", \"voluptatem\", \"molestias\",\n\t\t\"magni\", \"distinctio\", \"omnis\", \"illum\", \"dolorum\", \"voluptatum\", \"ea\",\n\t\t\"quas\", \"quam\", \"corporis\", \"quae\", \"blanditiis\", \"atque\", \"deserunt\",\n\t\t\"laboriosam\", \"earum\", \"consequuntur\", \"hic\", \"cupiditate\",\n\t\t\"quibusdam\", \"accusamus\", \"ut\", \"rerum\", \"error\", \"minus\", \"eius\",\n\t\t\"ab\", \"ad\", \"nemo\", \"fugit\", \"officia\", \"at\", \"in\", \"id\", \"quos\",\n\t\t\"reprehenderit\", \"numquam\", \"iste\", \"fugiat\", \"sit\", \"inventore\",\n\t\t\"beatae\", \"repellendus\", \"magnam\", \"recusandae\", \"quod\", \"explicabo\",\n\t\t\"doloremque\", \"aperiam\", \"consequatur\", \"asperiores\", \"commodi\",\n\t\t\"optio\", \"dolor\", \"labore\", \"temporibus\", \"repellat\", \"veniam\",\n\t\t\"architecto\", \"est\", \"esse\", \"mollitia\", \"nulla\", \"a\", \"similique\",\n\t\t\"eos\", \"alias\", \"dolore\", \"tenetur\", \"deleniti\", \"porro\", \"facere\",\n\t\t\"maxime\", \"corrupti\"]\n};\n\nvar ru = {\n\t\"common\": [\"далеко-далеко\", \"за\", \"словесными\", \"горами\", \"в стране\", \"гласных\", \"и согласных\", \"живут\", \"рыбные\", \"тексты\"],\n\t\"words\": [\"вдали\", \"от всех\", \"они\", \"буквенных\", \"домах\", \"на берегу\", \"семантика\",\n\t\t\"большого\", \"языкового\", \"океана\", \"маленький\", \"ручеек\", \"даль\",\n\t\t\"журчит\", \"по всей\", \"обеспечивает\", \"ее\",\"всеми\", \"необходимыми\",\n\t\t\"правилами\", \"эта\", \"парадигматическая\", \"страна\", \"которой\", \"жаренные\",\n\t\t\"предложения\", \"залетают\", \"прямо\", \"рот\", \"даже\", \"всемогущая\",\n\t\t\"пунктуация\", \"не\", \"имеет\", \"власти\", \"над\", \"рыбными\", \"текстами\",\n\t\t\"ведущими\", \"безорфографичный\", \"образ\", \"жизни\", \"однажды\", \"одна\",\n\t\t\"маленькая\", \"строчка\",\"рыбного\", \"текста\", \"имени\", \"lorem\", \"ipsum\",\n\t\t\"решила\", \"выйти\", \"большой\", \"мир\", \"грамматики\", \"великий\", \"оксмокс\",\n\t\t\"предупреждал\", \"о\", \"злых\", \"запятых\", \"диких\", \"знаках\", \"вопроса\",\n\t\t\"коварных\", \"точках\", \"запятой\", \"но\", \"текст\", \"дал\", \"сбить\",\n\t\t\"себя\", \"толку\", \"он\", \"собрал\", \"семь\", \"своих\", \"заглавных\", \"букв\",\n\t\t\"подпоясал\", \"инициал\", \"за\", \"пояс\", \"пустился\", \"дорогу\",\n\t\t\"взобравшись\", \"первую\", \"вершину\", \"курсивных\", \"гор\", \"бросил\",\n\t\t\"последний\", \"взгляд\", \"назад\", \"силуэт\", \"своего\", \"родного\", \"города\",\n\t\t\"буквоград\", \"заголовок\", \"деревни\", \"алфавит\", \"подзаголовок\", \"своего\",\n\t\t\"переулка\", \"грустный\", \"реторический\", \"вопрос\", \"скатился\", \"его\",\n\t\t\"щеке\", \"продолжил\", \"свой\", \"путь\", \"дороге\", \"встретил\", \"рукопись\",\n\t\t\"она\", \"предупредила\",  \"моей\", \"все\", \"переписывается\", \"несколько\",\n\t\t\"раз\", \"единственное\", \"что\", \"меня\", \"осталось\", \"это\", \"приставка\",\n\t\t\"возвращайся\", \"ты\", \"лучше\", \"свою\", \"безопасную\", \"страну\", \"послушавшись\",\n\t\t\"рукописи\", \"наш\", \"продолжил\", \"свой\", \"путь\", \"вскоре\", \"ему\",\n\t\t\"повстречался\", \"коварный\", \"составитель\", \"рекламных\", \"текстов\",\n\t\t\"напоивший\", \"языком\", \"речью\", \"заманивший\", \"свое\", \"агентство\",\n\t\t\"которое\", \"использовало\", \"снова\", \"снова\", \"своих\", \"проектах\",\n\t\t\"если\", \"переписали\", \"то\", \"живет\", \"там\", \"до\", \"сих\", \"пор\"]\n};\n\nvar sp = {\n\t\"common\": [\"mujer\", \"uno\", \"dolor\", \"más\", \"de\", \"poder\", \"mismo\", \"si\"],\n\t\"words\": [\"ejercicio\", \"preferencia\", \"perspicacia\", \"laboral\", \"paño\",\n\t\t\"suntuoso\", \"molde\", \"namibia\", \"planeador\", \"mirar\", \"demás\", \"oficinista\", \"excepción\",\n\t\t\"odio\", \"consecuencia\", \"casi\", \"auto\", \"chicharra\", \"velo\", \"elixir\",\n\t\t\"ataque\", \"no\", \"odio\", \"temporal\", \"cuórum\", \"dignísimo\",\n\t\t\"facilismo\", \"letra\", \"nihilista\", \"expedición\", \"alma\", \"alveolar\", \"aparte\",\n\t\t\"león\", \"animal\", \"como\", \"paria\", \"belleza\", \"modo\", \"natividad\",\n\t\t\"justo\", \"ataque\", \"séquito\", \"pillo\", \"sed\", \"ex\", \"y\", \"voluminoso\",\n\t\t\"temporalidad\", \"verdades\", \"racional\", \"asunción\", \"incidente\", \"marejada\",\n\t\t\"placenta\", \"amanecer\", \"fuga\", \"previsor\", \"presentación\", \"lejos\",\n\t\t\"necesariamente\", \"sospechoso\", \"adiposidad\", \"quindío\", \"pócima\",\n\t\t\"voluble\", \"débito\", \"sintió\", \"accesorio\", \"falda\", \"sapiencia\",\n\t\t\"volutas\", \"queso\", \"permacultura\", \"laudo\", \"soluciones\", \"entero\",\n\t\t\"pan\", \"litro\", \"tonelada\", \"culpa\", \"libertario\", \"mosca\", \"dictado\",\n\t\t\"reincidente\", \"nascimiento\", \"dolor\", \"escolar\", \"impedimento\", \"mínima\",\n\t\t\"mayores\", \"repugnante\", \"dulce\", \"obcecado\", \"montaña\", \"enigma\",\n\t\t\"total\", \"deletéreo\", \"décima\", \"cábala\", \"fotografía\", \"dolores\",\n\t\t\"molesto\", \"olvido\", \"paciencia\", \"resiliencia\", \"voluntad\", \"molestias\",\n\t\t\"magnífico\", \"distinción\", \"ovni\", \"marejada\", \"cerro\", \"torre\", \"y\",\n\t\t\"abogada\", \"manantial\", \"corporal\", \"agua\", \"crepúsculo\", \"ataque\", \"desierto\",\n\t\t\"laboriosamente\", \"angustia\", \"afortunado\", \"alma\", \"encefalograma\",\n\t\t\"materialidad\", \"cosas\", \"o\", \"renuncia\", \"error\", \"menos\", \"conejo\",\n\t\t\"abadía\", \"analfabeto\", \"remo\", \"fugacidad\", \"oficio\", \"en\", \"almácigo\", \"vos\", \"pan\",\n\t\t\"represión\", \"números\", \"triste\", \"refugiado\", \"trote\", \"inventor\",\n\t\t\"corchea\", \"repelente\", \"magma\", \"recusado\", \"patrón\", \"explícito\",\n\t\t\"paloma\", \"síndrome\", \"inmune\", \"autoinmune\", \"comodidad\",\n\t\t\"ley\", \"vietnamita\", \"demonio\", \"tasmania\", \"repeler\", \"apéndice\",\n\t\t\"arquitecto\", \"columna\", \"yugo\", \"computador\", \"mula\", \"a\", \"propósito\",\n\t\t\"fantasía\", \"alias\", \"rayo\", \"tenedor\", \"deleznable\", \"ventana\", \"cara\",\n\t\t\"anemia\", \"corrupto\"]\n};\n\nconst vocabularies = { ru, sp, latin };\nconst reLorem = /^lorem([a-z]*)(\\d*)(-\\d*)?$/i;\nfunction lorem(node, ancestors, config) {\n    let m;\n    if (node.name && (m = node.name.match(reLorem))) {\n        const db = vocabularies[m[1]] || vocabularies.latin;\n        const minWordCount = m[2] ? Math.max(1, Number(m[2])) : 30;\n        const maxWordCount = m[3] ? Math.max(minWordCount, Number(m[3].slice(1))) : minWordCount;\n        const wordCount = rand(minWordCount, maxWordCount);\n        const repeat = node.repeat || findRepeater(ancestors);\n        node.name = node.attributes = void 0;\n        node.value = [paragraph(db, wordCount, !repeat || repeat.value === 0)];\n        if (node.repeat && ancestors.length > 1) {\n            resolveImplicitTag(node, ancestors, config);\n        }\n    }\n}\n/**\n * Returns random integer between <code>from</code> and <code>to</code> values\n */\nfunction rand(from, to) {\n    return Math.floor(Math.random() * (to - from) + from);\n}\nfunction sample(arr, count) {\n    const len = arr.length;\n    const iterations = Math.min(len, count);\n    const result = [];\n    while (result.length < iterations) {\n        const str = arr[rand(0, len)];\n        if (!result.includes(str)) {\n            result.push(str);\n        }\n    }\n    return result;\n}\nfunction choice(val) {\n    return val[rand(0, val.length - 1)];\n}\nfunction sentence(words, end) {\n    if (words.length) {\n        words = [capitalize(words[0])].concat(words.slice(1));\n    }\n    return words.join(' ') + (end || choice('?!...')); // more dots than question marks\n}\nfunction capitalize(word) {\n    return word[0].toUpperCase() + word.slice(1);\n}\n/**\n * Insert commas at randomly selected words. This function modifies values\n * inside `words` array\n */\nfunction insertCommas(words) {\n    if (words.length < 2) {\n        return words;\n    }\n    words = words.slice();\n    const len = words.length;\n    const hasComma = /,$/;\n    let totalCommas = 0;\n    if (len > 3 && len <= 6) {\n        totalCommas = rand(0, 1);\n    }\n    else if (len > 6 && len <= 12) {\n        totalCommas = rand(0, 2);\n    }\n    else {\n        totalCommas = rand(1, 4);\n    }\n    for (let i = 0, pos; i < totalCommas; i++) {\n        pos = rand(0, len - 2);\n        if (!hasComma.test(words[pos])) {\n            words[pos] += ',';\n        }\n    }\n    return words;\n}\n/**\n * Generate a paragraph of \"Lorem ipsum\" text\n * @param dict Words dictionary\n * @param wordCount Words count in paragraph\n * @param startWithCommon Should paragraph start with common \"lorem ipsum\" sentence.\n */\nfunction paragraph(dict, wordCount, startWithCommon) {\n    const result = [];\n    let totalWords = 0;\n    let words;\n    if (startWithCommon && dict.common) {\n        words = dict.common.slice(0, wordCount);\n        totalWords += words.length;\n        result.push(sentence(insertCommas(words), '.'));\n    }\n    while (totalWords < wordCount) {\n        words = sample(dict.words, Math.min(rand(2, 30), wordCount - totalWords));\n        totalWords += words.length;\n        result.push(sentence(insertCommas(words)));\n    }\n    return result.join(' ');\n}\nfunction findRepeater(ancestors) {\n    for (let i = ancestors.length - 1; i >= 0; i--) {\n        const element = ancestors[i];\n        if (element.type === 'AbbreviationNode' && element.repeat) {\n            return element.repeat;\n        }\n    }\n}\n\n/**\n * JSX transformer: replaces `class` and `for` attributes with `className` and\n * `htmlFor` attributes respectively\n */\nfunction jsx(node) {\n    if (node.attributes) {\n        node.attributes.forEach(rename);\n    }\n}\nfunction rename(attr) {\n    if (attr.name === 'class') {\n        attr.name = 'className';\n    }\n    else if (attr.name === 'for') {\n        attr.name = 'htmlFor';\n    }\n}\n\n/**\n * XSL transformer: removes `select` attributes from certain nodes that contain\n * children\n */\nfunction xsl(node) {\n    if (matchesName(node.name) && node.attributes && (node.children.length || node.value)) {\n        node.attributes = node.attributes.filter(isAllowed);\n    }\n}\nfunction isAllowed(attr) {\n    return attr.name !== 'select';\n}\nfunction matchesName(name) {\n    return name === 'xsl:variable' || name === 'xsl:with-param';\n}\n\nconst reElement = /^(-+)([a-z0-9]+[a-z0-9-]*)/i;\nconst reModifier = /^(_+)([a-z0-9]+[a-z0-9-_]*)/i;\nconst blockCandidates1 = (className) => /^[a-z]\\-/i.test(className);\nconst blockCandidates2 = (className) => /^[a-z]/i.test(className);\nfunction bem(node, ancestors, config) {\n    expandClassNames(node);\n    expandShortNotation(node, ancestors, config);\n}\n/**\n * Expands existing class names in BEM notation in given `node`.\n * For example, if node contains `b__el_mod` class name, this method ensures\n * that element contains `b__el` class as well\n */\nfunction expandClassNames(node) {\n    const data = getBEMData(node);\n    const classNames = [];\n    for (const cl of data.classNames) {\n        // remove all modifiers and element prefixes from class name to get a base element name\n        const ix = cl.indexOf('_');\n        if (ix > 0 && !cl.startsWith('-')) {\n            classNames.push(cl.slice(0, ix));\n            classNames.push(cl.slice(ix));\n        }\n        else {\n            classNames.push(cl);\n        }\n    }\n    if (classNames.length) {\n        data.classNames = classNames.filter(uniqueClass);\n        data.block = findBlockName(data.classNames);\n        updateClass(node, data.classNames.join(' '));\n    }\n}\n/**\n * Expands short BEM notation, e.g. `-element` and `_modifier`\n */\nfunction expandShortNotation(node, ancestors, config) {\n    const data = getBEMData(node);\n    const classNames = [];\n    const { options } = config;\n    const path = ancestors.slice(1).concat(node);\n    for (let cl of data.classNames) {\n        let prefix = '';\n        let m;\n        const originalClass = cl;\n        // parse element definition (could be only one)\n        if (m = cl.match(reElement)) {\n            prefix = getBlockName(path, m[1].length, config.context) + options['bem.element'] + m[2];\n            classNames.push(prefix);\n            cl = cl.slice(m[0].length);\n        }\n        // parse modifiers definitions\n        if (m = cl.match(reModifier)) {\n            if (!prefix) {\n                prefix = getBlockName(path, m[1].length);\n                classNames.push(prefix);\n            }\n            classNames.push(`${prefix}${options['bem.modifier']}${m[2]}`);\n            cl = cl.slice(m[0].length);\n        }\n        if (cl === originalClass) {\n            // class name wasn’t modified: it’s not a BEM-specific class,\n            // add it as-is into output\n            classNames.push(originalClass);\n        }\n    }\n    const arrClassNames = classNames.filter(uniqueClass);\n    if (arrClassNames.length) {\n        updateClass(node, arrClassNames.join(' '));\n    }\n}\n/**\n * Returns BEM data from given abbreviation node\n */\nfunction getBEMData(node) {\n    if (!node._bem) {\n        let classValue = '';\n        if (node.attributes) {\n            for (const attr of node.attributes) {\n                if (attr.name === 'class' && attr.value) {\n                    classValue = stringifyValue(attr.value);\n                    break;\n                }\n            }\n        }\n        node._bem = parseBEM(classValue);\n    }\n    return node._bem;\n}\nfunction getBEMDataFromContext(context) {\n    if (!context._bem) {\n        context._bem = parseBEM(context.attributes && context.attributes.class || '');\n    }\n    return context._bem;\n}\n/**\n * Parses BEM data from given class name\n */\nfunction parseBEM(classValue) {\n    const classNames = classValue ? classValue.split(/\\s+/) : [];\n    return {\n        classNames,\n        block: findBlockName(classNames)\n    };\n}\n/**\n * Returns block name for given `node` by `prefix`, which tells the depth of\n * of parent node lookup\n */\nfunction getBlockName(ancestors, depth = 0, context) {\n    const maxParentIx = 0;\n    let parentIx = Math.max(ancestors.length - depth, maxParentIx);\n    do {\n        const parent = ancestors[parentIx];\n        if (parent) {\n            const data = getBEMData(parent);\n            if (data.block) {\n                return data.block;\n            }\n        }\n    } while (maxParentIx < parentIx--);\n    if (context) {\n        const data = getBEMDataFromContext(context);\n        if (data.block) {\n            return data.block;\n        }\n    }\n    return '';\n}\nfunction findBlockName(classNames) {\n    return find(classNames, blockCandidates1)\n        || find(classNames, blockCandidates2)\n        || void 0;\n}\n/**\n * Finds class name from given list which may be used as block name\n */\nfunction find(classNames, filter) {\n    for (const cl of classNames) {\n        if (reElement.test(cl) || reModifier.test(cl)) {\n            break;\n        }\n        if (filter(cl)) {\n            return cl;\n        }\n    }\n}\nfunction updateClass(node, value) {\n    for (const attr of node.attributes) {\n        if (attr.name === 'class') {\n            attr.value = [value];\n            break;\n        }\n    }\n}\nfunction stringifyValue(value) {\n    let result = '';\n    for (const t of value) {\n        result += typeof t === 'string' ? t : t.name;\n    }\n    return result;\n}\nfunction uniqueClass(item, ix, arr) {\n    return !!item && arr.indexOf(item) === ix;\n}\n\nfunction walk$1(abbr, visitor, state) {\n    const callback = (ctx, index, items) => {\n        const { parent, current } = state;\n        state.parent = current;\n        state.current = ctx;\n        visitor(ctx, index, items, state, next);\n        state.current = current;\n        state.parent = parent;\n    };\n    const next = (node, index, items) => {\n        state.ancestors.push(state.current);\n        callback(node, index, items);\n        state.ancestors.pop();\n    };\n    abbr.children.forEach(callback);\n}\nfunction createWalkState(config) {\n    return {\n        // @ts-ignore: Will set value in iterator\n        current: null,\n        parent: void 0,\n        ancestors: [],\n        config,\n        field: 1,\n        out: createOutputStream(config.options)\n    };\n}\n\nconst caret = [{ type: 'Field', index: 0, name: '' }];\n/**\n * Check if given node is a snippet: a node without name and attributes\n */\nfunction isSnippet(node) {\n    return node ? !node.name && !node.attributes : false;\n}\n/**\n * Check if given node is inline-level element, e.g. element with explicitly\n * defined node name\n */\nfunction isInlineElement(node, config) {\n    return node ? isInline(node, config) : false;\n}\n/**\n * Check if given value token is a field\n */\nfunction isField(token) {\n    return typeof token === 'object' && token.type === 'Field';\n}\nfunction pushTokens(tokens, state) {\n    const { out } = state;\n    let largestIndex = -1;\n    for (const t of tokens) {\n        if (typeof t === 'string') {\n            pushString(out, t);\n        }\n        else {\n            pushField(out, state.field + t.index, t.name);\n            if (t.index > largestIndex) {\n                largestIndex = t.index;\n            }\n        }\n    }\n    if (largestIndex !== -1) {\n        state.field += largestIndex + 1;\n    }\n}\n/**\n * Splits given value token by lines: returns array where each entry is a token list\n * for a single line\n */\nfunction splitByLines$1(tokens) {\n    const result = [];\n    let line = [];\n    for (const t of tokens) {\n        if (typeof t === 'string') {\n            const lines = t.split(/\\r\\n?|\\n/g);\n            line.push(lines.shift() || '');\n            while (lines.length) {\n                result.push(line);\n                line = [lines.shift() || ''];\n            }\n        }\n        else {\n            line.push(t);\n        }\n    }\n    line.length && result.push(line);\n    return result;\n}\n/**\n * Check if given attribute should be outputted\n */\nfunction shouldOutputAttribute(attr) {\n    // In case if attribute is implied, check if it has a defined value:\n    // either non-empty value or quoted empty value\n    return !attr.implied || attr.valueType !== 'raw' || (!!attr.value && attr.value.length > 0);\n}\n\n/**\n * Splits given string into template tokens.\n * Template is a string which contains placeholders which are uppercase names\n * between `[` and `]`, for example: `[PLACEHOLDER]`.\n * Unlike other templates, a placeholder may contain extra characters before and\n * after name: `[%PLACEHOLDER.]`. If data for `PLACEHOLDER` is defined, it will\n * be outputted with with these extra character, otherwise will be completely omitted.\n */\nfunction template(text) {\n    const tokens = [];\n    const scanner = { pos: 0, text };\n    let placeholder;\n    let offset = scanner.pos;\n    let pos = scanner.pos;\n    while (scanner.pos < scanner.text.length) {\n        pos = scanner.pos;\n        if (placeholder = consumePlaceholder(scanner)) {\n            if (offset !== scanner.pos) {\n                tokens.push(text.slice(offset, pos));\n            }\n            tokens.push(placeholder);\n            offset = scanner.pos;\n        }\n        else {\n            scanner.pos++;\n        }\n    }\n    if (offset !== scanner.pos) {\n        tokens.push(text.slice(offset));\n    }\n    return tokens;\n}\n/**\n * Consumes placeholder like `[#ID]` from given scanner\n */\nfunction consumePlaceholder(scanner) {\n    if (peek(scanner) === 91 /* Start */) {\n        const start = ++scanner.pos;\n        let namePos = start;\n        let afterPos = start;\n        let stack = 1;\n        while (scanner.pos < scanner.text.length) {\n            const code = peek(scanner);\n            if (isTokenStart(code)) {\n                namePos = scanner.pos;\n                while (isToken(peek(scanner))) {\n                    scanner.pos++;\n                }\n                afterPos = scanner.pos;\n            }\n            else {\n                if (code === 91 /* Start */) {\n                    stack++;\n                }\n                else if (code === 93 /* End */) {\n                    if (--stack === 0) {\n                        return {\n                            before: scanner.text.slice(start, namePos),\n                            after: scanner.text.slice(afterPos, scanner.pos++),\n                            name: scanner.text.slice(namePos, afterPos)\n                        };\n                    }\n                }\n                scanner.pos++;\n            }\n        }\n    }\n}\nfunction peek(scanner, pos = scanner.pos) {\n    return scanner.text.charCodeAt(pos);\n}\nfunction isTokenStart(code) {\n    return code >= 65 && code <= 90; // A-Z\n}\nfunction isToken(code) {\n    return isTokenStart(code)\n        || (code > 47 && code < 58) /* 0-9 */\n        || code === 95 /* Underscore */\n        || code === 45 /* Dash */;\n}\n\nfunction createCommentState(config) {\n    const { options } = config;\n    return {\n        enabled: options['comment.enabled'],\n        trigger: options['comment.trigger'],\n        before: options['comment.before'] ? template(options['comment.before']) : void 0,\n        after: options['comment.after'] ? template(options['comment.after']) : void 0\n    };\n}\n/**\n * Adds comment prefix for given node, if required\n */\nfunction commentNodeBefore(node, state) {\n    if (shouldComment(node, state) && state.comment.before) {\n        output(node, state.comment.before, state);\n    }\n}\n/**\n * Adds comment suffix for given node, if required\n */\nfunction commentNodeAfter(node, state) {\n    if (shouldComment(node, state) && state.comment.after) {\n        output(node, state.comment.after, state);\n    }\n}\n/**\n * Check if given node should be commented\n */\nfunction shouldComment(node, state) {\n    const { comment } = state;\n    if (!comment.enabled || !comment.trigger || !node.name || !node.attributes) {\n        return false;\n    }\n    for (const attr of node.attributes) {\n        if (attr.name && comment.trigger.includes(attr.name)) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Pushes given template tokens into output stream\n */\nfunction output(node, tokens, state) {\n    const attrs = {};\n    const { out } = state;\n    // Collect attributes payload\n    for (const attr of node.attributes) {\n        if (attr.name && attr.value) {\n            attrs[attr.name.toUpperCase()] = attr.value;\n        }\n    }\n    // Output parsed tokens\n    for (const token of tokens) {\n        if (typeof token === 'string') {\n            pushString(out, token);\n        }\n        else if (attrs[token.name]) {\n            pushString(out, token.before);\n            pushTokens(attrs[token.name], state);\n            pushString(out, token.after);\n        }\n    }\n}\n\nconst htmlTagRegex = /^<([\\w\\-:]+)[\\s>]/;\nfunction html(abbr, config) {\n    const state = createWalkState(config);\n    state.comment = createCommentState(config);\n    walk$1(abbr, element, state);\n    return state.out.value;\n}\n/**\n * Outputs `node` content to output stream of `state`\n * @param node Context node\n * @param index Index of `node` in `items`\n * @param items List of `node`’s siblings\n * @param state Current walk state\n */\nfunction element(node, index, items, state, next) {\n    const { out, config } = state;\n    const format = shouldFormat(node, index, items, state);\n    // Pick offset level for current node\n    const level = getIndent(state);\n    out.level += level;\n    format && pushNewline(out, true);\n    if (node.name) {\n        const name = tagName(node.name, config);\n        commentNodeBefore(node, state);\n        pushString(out, `<${name}`);\n        if (node.attributes) {\n            for (const attr of node.attributes) {\n                if (shouldOutputAttribute(attr)) {\n                    pushAttribute(attr, state);\n                }\n            }\n        }\n        if (node.selfClosing && !node.children.length && !node.value) {\n            pushString(out, `${selfClose(config)}>`);\n        }\n        else {\n            pushString(out, '>');\n            if (!pushSnippet(node, state, next)) {\n                if (node.value) {\n                    const innerFormat = node.value.some(hasNewline) || startsWithBlockTag(node.value, config);\n                    innerFormat && pushNewline(state.out, ++out.level);\n                    pushTokens(node.value, state);\n                    innerFormat && pushNewline(state.out, --out.level);\n                }\n                node.children.forEach(next);\n                if (!node.value && !node.children.length) {\n                    const innerFormat = config.options['output.formatLeafNode']\n                        || config.options['output.formatForce'].includes(node.name);\n                    innerFormat && pushNewline(state.out, ++out.level);\n                    pushTokens(caret, state);\n                    innerFormat && pushNewline(state.out, --out.level);\n                }\n            }\n            pushString(out, `</${name}>`);\n            commentNodeAfter(node, state);\n        }\n    }\n    else if (!pushSnippet(node, state, next) && node.value) {\n        // A text-only node (snippet)\n        pushTokens(node.value, state);\n        node.children.forEach(next);\n    }\n    if (format && index === items.length - 1 && state.parent) {\n        const offset = isSnippet(state.parent) ? 0 : 1;\n        pushNewline(out, out.level - offset);\n    }\n    out.level -= level;\n}\n/**\n * Outputs given attribute’s content into output stream\n */\nfunction pushAttribute(attr, state) {\n    const { out, config } = state;\n    if (attr.name) {\n        const name = attrName(attr.name, config);\n        const lQuote = attrQuote(attr, config, true);\n        const rQuote = attrQuote(attr, config);\n        let value = attr.value;\n        if (isBooleanAttribute(attr, config) && !value) {\n            // If attribute value is omitted and it’s a boolean value, check for\n            // `compactBoolean` option: if it’s disabled, set value to attribute name\n            // (XML style)\n            if (!config.options['output.compactBoolean']) {\n                value = [name];\n            }\n        }\n        else if (!value) {\n            value = caret;\n        }\n        pushString(out, ' ' + name);\n        if (value) {\n            pushString(out, '=' + lQuote);\n            pushTokens(value, state);\n            pushString(out, rQuote);\n        }\n        else if (config.options['output.selfClosingStyle'] !== 'html') {\n            pushString(out, '=' + lQuote + rQuote);\n        }\n    }\n}\nfunction pushSnippet(node, state, next) {\n    if (node.value && node.children.length) {\n        // We have a value and child nodes. In case if value contains fields,\n        // we should output children as a content of first field\n        const fieldIx = node.value.findIndex(isField);\n        if (fieldIx !== -1) {\n            pushTokens(node.value.slice(0, fieldIx), state);\n            const line = state.out.line;\n            let pos = fieldIx + 1;\n            node.children.forEach(next);\n            // If there was a line change, trim leading whitespace for better result\n            if (state.out.line !== line && typeof node.value[pos] === 'string') {\n                pushString(state.out, node.value[pos++].trimLeft());\n            }\n            pushTokens(node.value.slice(pos), state);\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Check if given node should be formatted in its parent context\n */\nfunction shouldFormat(node, index, items, state) {\n    const { config, parent } = state;\n    if (!config.options['output.format']) {\n        return false;\n    }\n    if (index === 0 && !parent) {\n        // Do not format very first node\n        return false;\n    }\n    // Do not format single child of snippet\n    if (parent && isSnippet(parent) && items.length === 1) {\n        return false;\n    }\n    /**\n     * Adjacent text-only/snippet nodes\n     */\n    if (isSnippet(node)) {\n        // Adjacent text-only/snippet nodes\n        const format = isSnippet(items[index - 1]) || isSnippet(items[index + 1])\n            // Has newlines: looks like wrapping code fragment\n            || node.value.some(hasNewline)\n            // Format as wrapper: contains children which will be outputted as field content\n            || (node.value.some(isField) && node.children.length);\n        if (format) {\n            return true;\n        }\n    }\n    if (isInline(node, config)) {\n        // Check if inline node is the next sibling of block-level node\n        if (index === 0) {\n            // First node in parent: format if it’s followed by a block-level element\n            for (let i = 0; i < items.length; i++) {\n                if (!isInline(items[i], config)) {\n                    return true;\n                }\n            }\n        }\n        else if (!isInline(items[index - 1], config)) {\n            // Node is right after block-level element\n            return true;\n        }\n        if (config.options['output.inlineBreak']) {\n            // check for adjacent inline elements before and after current element\n            let adjacentInline = 1;\n            let before = index;\n            let after = index;\n            while (isInlineElement(items[--before], config)) {\n                adjacentInline++;\n            }\n            while (isInlineElement(items[++after], config)) {\n                adjacentInline++;\n            }\n            if (adjacentInline >= config.options['output.inlineBreak']) {\n                return true;\n            }\n        }\n        // Edge case: inline node contains node that should receive formatting\n        for (let i = 0, il = node.children.length; i < il; i++) {\n            if (shouldFormat(node.children[i], i, node.children, state)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return true;\n}\n/**\n * Returns indentation offset for given node\n */\nfunction getIndent(state) {\n    const { config, parent } = state;\n    if (!parent || isSnippet(parent) || (parent.name && config.options['output.formatSkip'].includes(parent.name))) {\n        return 0;\n    }\n    return 1;\n}\n/**\n * Check if given node value contains newlines\n */\nfunction hasNewline(value) {\n    return typeof value === 'string' && /\\r|\\n/.test(value);\n}\n/**\n * Check if given node value starts with block-level tag\n */\nfunction startsWithBlockTag(value, config) {\n    if (value.length && typeof value[0] === 'string') {\n        const matches = htmlTagRegex.exec(value[0]);\n        if ((matches === null || matches === void 0 ? void 0 : matches.length) && !config.options['inlineElements'].includes(matches[1].toLowerCase())) {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction indentFormat(abbr, config, options) {\n    const state = createWalkState(config);\n    state.options = options || {};\n    walk$1(abbr, element$1, state);\n    return state.out.value;\n}\n/**\n * Outputs `node` content to output stream of `state`\n * @param node Context node\n * @param index Index of `node` in `items`\n * @param items List of `node`’s siblings\n * @param state Current walk state\n */\nfunction element$1(node, index, items, state, next) {\n    const { out, options } = state;\n    const { primary, secondary } = collectAttributes(node);\n    // Pick offset level for current node\n    const level = state.parent ? 1 : 0;\n    out.level += level;\n    // Do not indent top-level elements\n    if (shouldFormat$1(node, index, items, state)) {\n        pushNewline(out, true);\n    }\n    if (node.name && (node.name !== 'div' || !primary.length)) {\n        pushString(out, (options.beforeName || '') + node.name + (options.afterName || ''));\n    }\n    pushPrimaryAttributes(primary, state);\n    pushSecondaryAttributes(secondary.filter(shouldOutputAttribute), state);\n    if (node.selfClosing && !node.value && !node.children.length) {\n        if (state.options.selfClose) {\n            pushString(out, state.options.selfClose);\n        }\n    }\n    else {\n        pushValue(node, state);\n        node.children.forEach(next);\n    }\n    out.level -= level;\n}\n/**\n * From given node, collects all attributes as `primary` (id, class) and\n * `secondary` (all the rest) lists. In most indent-based syntaxes, primary attribute\n * has special syntax\n */\nfunction collectAttributes(node) {\n    const primary = [];\n    const secondary = [];\n    if (node.attributes) {\n        for (const attr of node.attributes) {\n            if (isPrimaryAttribute(attr)) {\n                primary.push(attr);\n            }\n            else {\n                secondary.push(attr);\n            }\n        }\n    }\n    return { primary, secondary };\n}\n/**\n * Outputs given attributes as primary into output stream\n */\nfunction pushPrimaryAttributes(attrs, state) {\n    for (const attr of attrs) {\n        if (attr.value) {\n            if (attr.name === 'class') {\n                pushString(state.out, '.');\n                // All whitespace characters must be replaced with dots in class names\n                const tokens = attr.value.map(t => typeof t === 'string' ? t.replace(/\\s+/g, '.') : t);\n                pushTokens(tokens, state);\n            }\n            else {\n                // ID attribute\n                pushString(state.out, '#');\n                pushTokens(attr.value, state);\n            }\n        }\n    }\n}\n/**\n * Outputs given attributes as secondary into output stream\n */\nfunction pushSecondaryAttributes(attrs, state) {\n    if (attrs.length) {\n        const { out, config, options } = state;\n        options.beforeAttribute && pushString(out, options.beforeAttribute);\n        for (let i = 0; i < attrs.length; i++) {\n            const attr = attrs[i];\n            pushString(out, attrName(attr.name || '', config));\n            if (isBooleanAttribute(attr, config) && !attr.value) {\n                if (!config.options['output.compactBoolean'] && options.booleanValue) {\n                    pushString(out, '=' + options.booleanValue);\n                }\n            }\n            else {\n                pushString(out, '=' + attrQuote(attr, config, true));\n                pushTokens(attr.value || caret, state);\n                pushString(out, attrQuote(attr, config));\n            }\n            if (i !== attrs.length - 1 && options.glueAttribute) {\n                pushString(out, options.glueAttribute);\n            }\n        }\n        options.afterAttribute && pushString(out, options.afterAttribute);\n    }\n}\n/**\n * Outputs given node value into state output stream\n */\nfunction pushValue(node, state) {\n    // We should either output value or add caret but for leaf nodes only (no children)\n    if (!node.value && node.children.length) {\n        return;\n    }\n    const value = node.value || caret;\n    const lines = splitByLines$1(value);\n    const { out, options } = state;\n    if (lines.length === 1) {\n        if (node.name || node.attributes) {\n            push(out, ' ');\n        }\n        pushTokens(value, state);\n    }\n    else {\n        // We should format multi-line value with terminating `|` character\n        // and same line length\n        const lineLengths = [];\n        let maxLength = 0;\n        // Calculate lengths of all lines and max line length\n        for (const line of lines) {\n            const len = valueLength(line);\n            lineLengths.push(len);\n            if (len > maxLength) {\n                maxLength = len;\n            }\n        }\n        // Output each line, padded to max length\n        out.level++;\n        for (let i = 0; i < lines.length; i++) {\n            pushNewline(out, true);\n            options.beforeTextLine && push(out, options.beforeTextLine);\n            pushTokens(lines[i], state);\n            if (options.afterTextLine) {\n                push(out, ' '.repeat(maxLength - lineLengths[i]));\n                push(out, options.afterTextLine);\n            }\n        }\n        out.level--;\n    }\n}\nfunction isPrimaryAttribute(attr) {\n    return attr.name === 'class' || attr.name === 'id';\n}\n/**\n * Calculates string length from given tokens\n */\nfunction valueLength(tokens) {\n    let len = 0;\n    for (const token of tokens) {\n        len += typeof token === 'string' ? token.length : token.name.length;\n    }\n    return len;\n}\nfunction shouldFormat$1(node, index, items, state) {\n    // Do not format first top-level element or snippets\n    if (!state.parent && index === 0) {\n        return false;\n    }\n    return !isSnippet(node);\n}\n\nfunction haml(abbr, config) {\n    return indentFormat(abbr, config, {\n        beforeName: '%',\n        beforeAttribute: '(',\n        afterAttribute: ')',\n        glueAttribute: ' ',\n        afterTextLine: ' |',\n        booleanValue: 'true',\n        selfClose: '/'\n    });\n}\n\nfunction slim(abbr, config) {\n    return indentFormat(abbr, config, {\n        beforeAttribute: ' ',\n        glueAttribute: ' ',\n        beforeTextLine: '| ',\n        selfClose: '/'\n    });\n}\n\nfunction pug(abbr, config) {\n    return indentFormat(abbr, config, {\n        beforeAttribute: '(',\n        afterAttribute: ')',\n        glueAttribute: ', ',\n        beforeTextLine: '| ',\n        selfClose: config.options['output.selfClosingStyle'] === 'xml' ? '/' : ''\n    });\n}\n\nconst formatters = { html, haml, slim, pug };\n/**\n * Parses given Emmet abbreviation into a final abbreviation tree with all\n * required transformations applied\n */\nfunction parse(abbr, config) {\n    let oldTextValue;\n    if (typeof abbr === 'string') {\n        let parseOpt = config;\n        if (config.options['jsx.enabled']) {\n            parseOpt = Object.assign(Object.assign({}, parseOpt), { jsx: true });\n        }\n        if (config.options['markup.href']) {\n            parseOpt = Object.assign(Object.assign({}, parseOpt), { href: true });\n        }\n        abbr = parse$2(abbr, parseOpt);\n        // remove text field before snippets(abbr, config) call\n        // as abbreviation(abbr, parseOpt) already handled it\n        oldTextValue = config.text;\n        config.text = undefined;\n    }\n    // Run abbreviation resolve in two passes:\n    // 1. Map each node to snippets, which are abbreviations as well. A single snippet\n    // may produce multiple nodes\n    // 2. Transform every resolved node\n    abbr = resolveSnippets(abbr, config);\n    walk(abbr, transform, config);\n    config.text = oldTextValue !== null && oldTextValue !== void 0 ? oldTextValue : config.text;\n    return abbr;\n}\n/**\n * Converts given abbreviation to string according to provided `config`\n */\nfunction stringify(abbr, config) {\n    const formatter = formatters[config.syntax] || html;\n    return formatter(abbr, config);\n}\n/**\n * Modifies given node and prepares it for output\n */\nfunction transform(node, ancestors, config) {\n    implicitTag(node, ancestors, config);\n    mergeAttributes(node, config);\n    lorem(node, ancestors, config);\n    if (config.syntax === 'xsl') {\n        xsl(node);\n    }\n    if (config.options['jsx.enabled']) {\n        jsx(node);\n    }\n    if (config.options['bem.enabled']) {\n        bem(node, ancestors, config);\n    }\n}\n\nconst reProperty = /^([a-z-]+)(?:\\s*:\\s*([^\\n\\r;]+?);*)?$/;\nconst opt = { value: true };\n/**\n * Creates structure for holding resolved CSS snippet\n */\nfunction createSnippet(key, value) {\n    // A snippet could be a raw text snippet (e.g. arbitrary text string) or a\n    // CSS property with possible values separated by `|`.\n    // In latter case, we have to parse snippet as CSS abbreviation\n    const m = value.match(reProperty);\n    if (m) {\n        const keywords = {};\n        const parsed = m[2] ? m[2].split('|').map(parseValue) : [];\n        for (const item of parsed) {\n            for (const cssVal of item) {\n                collectKeywords(cssVal, keywords);\n            }\n        }\n        return {\n            type: \"Property\" /* Property */,\n            key,\n            property: m[1],\n            value: parsed,\n            keywords,\n            dependencies: []\n        };\n    }\n    return { type: \"Raw\" /* Raw */, key, value };\n}\n/**\n * Nests more specific CSS properties into shorthand ones, e.g.\n * `background-position-x` -> `background-position` -> `background`\n */\nfunction nest(snippets) {\n    snippets = snippets.slice().sort(snippetsSort);\n    const stack = [];\n    let prev;\n    // For sorted list of CSS properties, create dependency graph where each\n    // shorthand property contains its more specific one, e.g.\n    // background -> background-position -> background-position-x\n    for (const cur of snippets.filter(isProperty)) {\n        // Check if current property belongs to one from parent stack.\n        // Since `snippets` array is sorted, items are perfectly aligned\n        // from shorthands to more specific variants\n        while (stack.length) {\n            prev = stack[stack.length - 1];\n            if (cur.property.startsWith(prev.property)\n                && cur.property.charCodeAt(prev.property.length) === 45 /* - */) {\n                prev.dependencies.push(cur);\n                stack.push(cur);\n                break;\n            }\n            stack.pop();\n        }\n        if (!stack.length) {\n            stack.push(cur);\n        }\n    }\n    return snippets;\n}\n/**\n * A sorting function for array of snippets\n */\nfunction snippetsSort(a, b) {\n    if (a.key === b.key) {\n        return 0;\n    }\n    return a.key < b.key ? -1 : 1;\n}\nfunction parseValue(value) {\n    return parse$3(value.trim(), opt)[0].value;\n}\nfunction isProperty(snippet) {\n    return snippet.type === \"Property\" /* Property */;\n}\nfunction collectKeywords(cssVal, dest) {\n    for (const v of cssVal.value) {\n        if (v.type === 'Literal') {\n            dest[v.value] = v;\n        }\n        else if (v.type === 'FunctionCall') {\n            dest[v.name] = v;\n        }\n        else if (v.type === 'Field') {\n            // Create literal from field, if available\n            const value = v.name.trim();\n            if (value) {\n                dest[value] = { type: 'Literal', value };\n            }\n        }\n    }\n}\n\n/**\n * Calculates how close `str1` matches `str2` using fuzzy match.\n * How matching works:\n * – first characters of both `str1` and `str2` *must* match\n * – `str1` length larger than `str2` length is allowed only when `unmatched` is true\n * – ideal match is when `str1` equals to `str2` (score: 1)\n * – next best match is `str2` starts with `str1` (score: 1 × percent of matched characters)\n * – other scores depend on how close characters of `str1` to the beginning of `str2`\n * @param partialMatch Allow length `str1` to be greater than `str2` length\n */\nfunction scoreMatch(str1, str2, partialMatch = false) {\n    str1 = str1.toLowerCase();\n    str2 = str2.toLowerCase();\n    if (str1 === str2) {\n        return 1;\n    }\n    // Both strings MUST start with the same character\n    if (!str1 || !str2 || str1.charCodeAt(0) !== str2.charCodeAt(0)) {\n        return 0;\n    }\n    const str1Len = str1.length;\n    const str2Len = str2.length;\n    if (!partialMatch && str1Len > str2Len) {\n        return 0;\n    }\n    // Characters from `str1` which are closer to the beginning of a `str2` should\n    // have higher score.\n    // For example, if `str2` is `abcde`, it’s max score is:\n    // 5 + 4 + 3 + 2 + 1 = 15 (sum of character positions in reverse order)\n    // Matching `abd` against `abcde` should produce:\n    // 5 + 4 + 2 = 11\n    // Acronym bonus for match right after `-`. Matching `abd` against `abc-de`\n    // should produce:\n    // 6 + 5 + 4 (use `d` position in `abd`, not in abc-de`)\n    const minLength = Math.min(str1Len, str2Len);\n    const maxLength = Math.max(str1Len, str2Len);\n    let i = 1;\n    let j = 1;\n    let score = maxLength;\n    let ch1 = 0;\n    let ch2 = 0;\n    let found = false;\n    let acronym = false;\n    while (i < str1Len) {\n        ch1 = str1.charCodeAt(i);\n        found = false;\n        acronym = false;\n        while (j < str2Len) {\n            ch2 = str2.charCodeAt(j);\n            if (ch1 === ch2) {\n                found = true;\n                score += maxLength - (acronym ? i : j);\n                break;\n            }\n            // add acronym bonus for exactly next match after unmatched `-`\n            acronym = ch2 === 45 /* - */;\n            j++;\n        }\n        if (!found) {\n            if (!partialMatch) {\n                return 0;\n            }\n            break;\n        }\n        i++;\n    }\n    const matchRatio = i / maxLength;\n    const delta = maxLength - minLength;\n    const maxScore = sum(maxLength) - sum(delta);\n    return (score * matchRatio) / maxScore;\n}\n/**\n * Calculates sum of first `n` numbers, e.g. 1+2+3+...n\n */\nfunction sum(n) {\n    return n * (n + 1) / 2;\n}\n\nfunction color(token, shortHex) {\n    if (!token.r && !token.g && !token.b && !token.a) {\n        return 'transparent';\n    }\n    else if (token.a === 1) {\n        return asHex(token, shortHex);\n    }\n    return asRGB(token);\n}\n/**\n * Output given color as hex value\n * @param short Produce short value (e.g. #fff instead of #ffffff), if possible\n */\nfunction asHex(token, short) {\n    const fn = (short && isShortHex(token.r) && isShortHex(token.g) && isShortHex(token.b))\n        ? toShortHex : toHex;\n    return '#' + fn(token.r) + fn(token.g) + fn(token.b);\n}\n/**\n * Output current color as `rgba?(...)` CSS color\n */\nfunction asRGB(token) {\n    const values = [token.r, token.g, token.b];\n    if (token.a !== 1) {\n        values.push(frac(token.a, 8));\n    }\n    return `${values.length === 3 ? 'rgb' : 'rgba'}(${values.join(', ')})`;\n}\nfunction frac(num, digits = 4) {\n    return num.toFixed(digits).replace(/\\.?0+$/, '');\n}\nfunction isShortHex(hex) {\n    return !(hex % 17);\n}\nfunction toShortHex(num) {\n    return (num >> 4).toString(16);\n}\nfunction toHex(num) {\n    return pad(num.toString(16), 2);\n}\nfunction pad(value, len) {\n    while (value.length < len) {\n        value = '0' + value;\n    }\n    return value;\n}\n\nfunction css(abbr, config) {\n    var _a;\n    const out = createOutputStream(config.options);\n    const format = config.options['output.format'];\n    if (((_a = config.context) === null || _a === void 0 ? void 0 : _a.name) === \"@@section\" /* Section */) {\n        // For section context, filter out unmatched snippets\n        abbr = abbr.filter(node => node.snippet);\n    }\n    for (let i = 0; i < abbr.length; i++) {\n        if (format && i !== 0) {\n            pushNewline(out, true);\n        }\n        property(abbr[i], out, config);\n    }\n    return out.value;\n}\n/**\n * Outputs given abbreviation node into output stream\n */\nfunction property(node, out, config) {\n    const isJSON = config.options['stylesheet.json'];\n    if (node.name) {\n        // It’s a CSS property\n        const name = isJSON ? toCamelCase(node.name) : node.name;\n        pushString(out, name + config.options['stylesheet.between']);\n        if (node.value.length) {\n            propertyValue(node, out, config);\n        }\n        else {\n            pushField(out, 0, '');\n        }\n        if (isJSON) {\n            // For CSS-in-JS, always finalize property with comma\n            // NB: seems like `important` is not available in CSS-in-JS syntaxes\n            push(out, ',');\n        }\n        else {\n            outputImportant(node, out, true);\n            push(out, config.options['stylesheet.after']);\n        }\n    }\n    else {\n        // It’s a regular snippet, output plain tokens without any additional formatting\n        for (const cssVal of node.value) {\n            for (const v of cssVal.value) {\n                outputToken(v, out, config);\n            }\n        }\n        outputImportant(node, out, node.value.length > 0);\n    }\n}\nfunction propertyValue(node, out, config) {\n    const isJSON = config.options['stylesheet.json'];\n    const num = isJSON ? getSingleNumeric(node) : null;\n    if (num && (!num.unit || num.unit === 'px')) {\n        // For CSS-in-JS, if property contains single numeric value, output it\n        // as JS number\n        push(out, String(num.value));\n    }\n    else {\n        const quote = getQuote(config);\n        isJSON && push(out, quote);\n        for (let i = 0; i < node.value.length; i++) {\n            if (i !== 0) {\n                push(out, ', ');\n            }\n            outputValue(node.value[i], out, config);\n        }\n        isJSON && push(out, quote);\n    }\n}\nfunction outputImportant(node, out, separator) {\n    if (node.important) {\n        if (separator) {\n            push(out, ' ');\n        }\n        push(out, '!important');\n    }\n}\nfunction outputValue(value, out, config) {\n    for (let i = 0, prevEnd = -1; i < value.value.length; i++) {\n        const token = value.value[i];\n        // Handle edge case: a field is written close to previous token like this: `foo${bar}`.\n        // We should not add delimiter here\n        if (i !== 0 && (token.type !== 'Field' || token.start !== prevEnd)) {\n            push(out, ' ');\n        }\n        outputToken(token, out, config);\n        prevEnd = token['end'];\n    }\n}\nfunction outputToken(token, out, config) {\n    if (token.type === 'ColorValue') {\n        push(out, color(token, config.options['stylesheet.shortHex']));\n    }\n    else if (token.type === 'Literal') {\n        pushString(out, token.value);\n    }\n    else if (token.type === 'NumberValue') {\n        pushString(out, frac(token.value, 4) + token.unit);\n    }\n    else if (token.type === 'StringValue') {\n        const quote = token.quote === 'double' ? '\"' : '\\'';\n        pushString(out, quote + token.value + quote);\n    }\n    else if (token.type === 'Field') {\n        pushField(out, token.index, token.name);\n    }\n    else if (token.type === 'FunctionCall') {\n        push(out, token.name + '(');\n        for (let i = 0; i < token.arguments.length; i++) {\n            if (i) {\n                push(out, ', ');\n            }\n            outputValue(token.arguments[i], out, config);\n        }\n        push(out, ')');\n    }\n}\n/**\n * If value of given property is a single numeric value, returns this token\n */\nfunction getSingleNumeric(node) {\n    if (node.value.length === 1) {\n        const cssVal = node.value[0];\n        if (cssVal.value.length === 1 && cssVal.value[0].type === 'NumberValue') {\n            return cssVal.value[0];\n        }\n    }\n}\n/**\n * Converts kebab-case string to camelCase\n */\nfunction toCamelCase(str) {\n    return str.replace(/\\-(\\w)/g, (_, letter) => letter.toUpperCase());\n}\nfunction getQuote(config) {\n    return config.options['stylesheet.jsonDoubleQuotes'] ? '\"' : '\\'';\n}\n\nconst gradientName = 'lg';\n/**\n * Parses given Emmet abbreviation into a final abbreviation tree with all\n * required transformations applied\n */\nfunction parse$1(abbr, config) {\n    var _a;\n    const snippets = ((_a = config.cache) === null || _a === void 0 ? void 0 : _a.stylesheetSnippets) || convertSnippets(config.snippets);\n    if (config.cache) {\n        config.cache.stylesheetSnippets = snippets;\n    }\n    if (typeof abbr === 'string') {\n        abbr = parse$3(abbr, { value: isValueScope(config) });\n    }\n    const filteredSnippets = getSnippetsForScope(snippets, config);\n    for (const node of abbr) {\n        resolveNode(node, filteredSnippets, config);\n    }\n    return abbr;\n}\n/**\n * Converts given raw snippets into internal snippets representation\n */\nfunction convertSnippets(snippets) {\n    const result = [];\n    for (const key of Object.keys(snippets)) {\n        result.push(createSnippet(key, snippets[key]));\n    }\n    return nest(result);\n}\n/**\n * Resolves given node: finds matched CSS snippets using fuzzy match and resolves\n * keyword aliases from node value\n */\nfunction resolveNode(node, snippets, config) {\n    if (!resolveGradient(node, config)) {\n        const score = config.options['stylesheet.fuzzySearchMinScore'];\n        if (isValueScope(config)) {\n            // Resolve as value of given CSS property\n            const propName = config.context.name;\n            const snippet = snippets.find(s => s.type === \"Property\" /* Property */ && s.property === propName);\n            resolveValueKeywords(node, config, snippet, score);\n            node.snippet = snippet;\n        }\n        else if (node.name) {\n            const snippet = findBestMatch(node.name, snippets, score, true);\n            node.snippet = snippet;\n            if (snippet) {\n                if (snippet.type === \"Property\" /* Property */) {\n                    resolveAsProperty(node, snippet, config);\n                }\n                else {\n                    resolveAsSnippet(node, snippet);\n                }\n            }\n        }\n    }\n    if (node.name || config.context) {\n        // Resolve numeric values for CSS properties only\n        resolveNumericValue(node, config);\n    }\n    return node;\n}\n/**\n * Resolves CSS gradient shortcut from given property, if possible\n */\nfunction resolveGradient(node, config) {\n    let gradientFn = null;\n    const cssVal = node.value.length === 1 ? node.value[0] : null;\n    if (cssVal && cssVal.value.length === 1) {\n        const v = cssVal.value[0];\n        if (v.type === 'FunctionCall' && v.name === gradientName) {\n            gradientFn = v;\n        }\n    }\n    if (gradientFn || node.name === gradientName) {\n        if (!gradientFn) {\n            gradientFn = {\n                type: 'FunctionCall',\n                name: 'linear-gradient',\n                arguments: [cssValue(field(0, ''))]\n            };\n        }\n        else {\n            gradientFn = Object.assign(Object.assign({}, gradientFn), { name: 'linear-gradient' });\n        }\n        if (!config.context) {\n            node.name = 'background-image';\n        }\n        node.value = [cssValue(gradientFn)];\n        return true;\n    }\n    return false;\n}\n/**\n * Resolves given parsed abbreviation node as CSS property\n */\nfunction resolveAsProperty(node, snippet, config) {\n    const abbr = node.name;\n    // Check for unmatched part of abbreviation\n    // For example, in `dib` abbreviation the matched part is `d` and `ib` should\n    // be considered as inline value. If unmatched fragment exists, we should check\n    // if it matches actual value of snippet. If either explicit value is specified\n    // or unmatched fragment did not resolve to to a keyword, we should consider\n    // matched snippet as invalid\n    const inlineValue = getUnmatchedPart(abbr, snippet.key);\n    if (inlineValue) {\n        if (node.value.length) {\n            // Already have value: unmatched part indicates matched snippet is invalid\n            return node;\n        }\n        const kw = resolveKeyword(inlineValue, config, snippet);\n        if (!kw) {\n            return node;\n        }\n        node.value.push(cssValue(kw));\n    }\n    node.name = snippet.property;\n    if (node.value.length) {\n        // Replace keyword alias from current abbreviation node with matched keyword\n        resolveValueKeywords(node, config, snippet);\n    }\n    else if (snippet.value.length) {\n        const defaultValue = snippet.value[0];\n        // https://github.com/emmetio/emmet/issues/558\n        // We should auto-select inserted value only if there’s multiple value\n        // choice\n        node.value = snippet.value.length === 1 || defaultValue.some(hasField)\n            ? defaultValue\n            : defaultValue.map(n => wrapWithField(n, config));\n    }\n    return node;\n}\nfunction resolveValueKeywords(node, config, snippet, minScore) {\n    for (const cssVal of node.value) {\n        const value = [];\n        for (const token of cssVal.value) {\n            if (token.type === 'Literal') {\n                value.push(resolveKeyword(token.value, config, snippet, minScore) || token);\n            }\n            else if (token.type === 'FunctionCall') {\n                // For function calls, we should find matching function call\n                // and merge arguments\n                const match = resolveKeyword(token.name, config, snippet, minScore);\n                if (match && match.type === 'FunctionCall') {\n                    value.push(Object.assign(Object.assign({}, match), { arguments: token.arguments.concat(match.arguments.slice(token.arguments.length)) }));\n                }\n                else {\n                    value.push(token);\n                }\n            }\n            else {\n                value.push(token);\n            }\n        }\n        cssVal.value = value;\n    }\n}\n/**\n * Resolves given parsed abbreviation node as a snippet: a plain code chunk\n */\nfunction resolveAsSnippet(node, snippet) {\n    // When resolving snippets, we have to do the following:\n    // 1. Replace field placeholders with actual field tokens.\n    // 2. If input values given, put them instead of fields\n    let offset = 0;\n    let m;\n    const reField = /\\$\\{(\\d+)(:[^}]+)?\\}/g;\n    const inputValue = node.value[0];\n    const outputValue = [];\n    while (m = reField.exec(snippet.value)) {\n        if (offset !== m.index) {\n            outputValue.push(literal(snippet.value.slice(offset, m.index)));\n        }\n        offset = m.index + m[0].length;\n        if (inputValue && inputValue.value.length) {\n            outputValue.push(inputValue.value.shift());\n        }\n        else {\n            outputValue.push(field(Number(m[1]), m[2] ? m[2].slice(1) : ''));\n        }\n    }\n    const tail = snippet.value.slice(offset);\n    if (tail) {\n        outputValue.push(literal(tail));\n    }\n    node.name = void 0;\n    node.value = [cssValue(...outputValue)];\n    return node;\n}\n/**\n * Finds best matching item from `items` array\n * @param abbr  Abbreviation to match\n * @param items List of items for match\n * @param minScore The minimum score the best matched item should have to be a valid match.\n */\nfunction findBestMatch(abbr, items, minScore = 0, partialMatch = false) {\n    let matchedItem = null;\n    let maxScore = 0;\n    for (const item of items) {\n        const score = scoreMatch(abbr, getScoringPart(item), partialMatch);\n        if (score === 1) {\n            // direct hit, no need to look further\n            return item;\n        }\n        if (score && score >= maxScore) {\n            maxScore = score;\n            matchedItem = item;\n        }\n    }\n    return maxScore >= minScore ? matchedItem : null;\n}\nfunction getScoringPart(item) {\n    return typeof item === 'string' ? item : item.key;\n}\n/**\n * Returns a part of `abbr` that wasn’t directly matched against `str`.\n * For example, if abbreviation `poas` is matched against `position`,\n * the unmatched part will be `as` since `a` wasn’t found in string stream\n */\nfunction getUnmatchedPart(abbr, str) {\n    for (let i = 0, lastPos = 0; i < abbr.length; i++) {\n        lastPos = str.indexOf(abbr[i], lastPos);\n        if (lastPos === -1) {\n            return abbr.slice(i);\n        }\n        lastPos++;\n    }\n    return '';\n}\n/**\n * Resolves given keyword shorthand into matched snippet keyword or global keyword,\n * if possible\n */\nfunction resolveKeyword(kw, config, snippet, minScore) {\n    let ref;\n    if (snippet) {\n        if (ref = findBestMatch(kw, Object.keys(snippet.keywords), minScore)) {\n            return snippet.keywords[ref];\n        }\n        for (const dep of snippet.dependencies) {\n            if (ref = findBestMatch(kw, Object.keys(dep.keywords), minScore)) {\n                return dep.keywords[ref];\n            }\n        }\n    }\n    if (ref = findBestMatch(kw, config.options['stylesheet.keywords'], minScore)) {\n        return literal(ref);\n    }\n    return null;\n}\n/**\n * Resolves numeric values in given abbreviation node\n */\nfunction resolveNumericValue(node, config) {\n    const aliases = config.options['stylesheet.unitAliases'];\n    const unitless = config.options['stylesheet.unitless'];\n    for (const v of node.value) {\n        for (const t of v.value) {\n            if (t.type === 'NumberValue') {\n                if (t.unit) {\n                    t.unit = aliases[t.unit] || t.unit;\n                }\n                else if (t.value !== 0 && !unitless.includes(node.name)) {\n                    t.unit = t.rawValue.includes('.')\n                        ? config.options['stylesheet.floatUnit']\n                        : config.options['stylesheet.intUnit'];\n                }\n            }\n        }\n    }\n}\n/**\n * Constructs CSS value token\n */\nfunction cssValue(...args) {\n    return {\n        type: 'CSSValue',\n        value: args\n    };\n}\n/**\n * Constructs literal token\n */\nfunction literal(value) {\n    return { type: 'Literal', value };\n}\n/**\n * Constructs field token\n */\nfunction field(index, name) {\n    return { type: 'Field', index, name };\n}\n/**\n * Check if given value contains fields\n */\nfunction hasField(value) {\n    for (const v of value.value) {\n        if (v.type === 'Field' || (v.type === 'FunctionCall' && v.arguments.some(hasField))) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Wraps tokens of given abbreviation with fields\n */\nfunction wrapWithField(node, config, state = { index: 1 }) {\n    let value = [];\n    for (const v of node.value) {\n        switch (v.type) {\n            case 'ColorValue':\n                value.push(field(state.index++, color(v, config.options['stylesheet.shortHex'])));\n                break;\n            case 'Literal':\n                value.push(field(state.index++, v.value));\n                break;\n            case 'NumberValue':\n                value.push(field(state.index++, `${v.value}${v.unit}`));\n                break;\n            case 'StringValue':\n                const q = v.quote === 'single' ? '\\'' : '\"';\n                value.push(field(state.index++, q + v.value + q));\n                break;\n            case 'FunctionCall':\n                value.push(field(state.index++, v.name), literal('('));\n                for (let i = 0, il = v.arguments.length; i < il; i++) {\n                    value = value.concat(wrapWithField(v.arguments[i], config, state).value);\n                    if (i !== il - 1) {\n                        value.push(literal(', '));\n                    }\n                }\n                value.push(literal(')'));\n                break;\n            default:\n                value.push(v);\n        }\n    }\n    return Object.assign(Object.assign({}, node), { value });\n}\n/**\n * Check if abbreviation should be expanded in CSS value context\n */\nfunction isValueScope(config) {\n    if (config.context) {\n        return config.context.name === \"@@value\" /* Value */ || !config.context.name.startsWith('@@');\n    }\n    return false;\n}\n/**\n * Returns snippets for given scope\n */\nfunction getSnippetsForScope(snippets, config) {\n    if (config.context) {\n        if (config.context.name === \"@@section\" /* Section */) {\n            return snippets.filter(s => s.type === \"Raw\" /* Raw */);\n        }\n        if (config.context.name === \"@@property\" /* Property */) {\n            return snippets.filter(s => s.type === \"Property\" /* Property */);\n        }\n    }\n    return snippets;\n}\n\nvar markupSnippets = {\n\t\"a\": \"a[href]\",\n\t\"a:blank\": \"a[href='http://${0}' target='_blank' rel='noopener noreferrer']\",\n\t\"a:link\": \"a[href='http://${0}']\",\n\t\"a:mail\": \"a[href='mailto:${0}']\",\n\t\"a:tel\": \"a[href='tel:+${0}']\",\n\t\"abbr\": \"abbr[title]\",\n\t\"acr|acronym\": \"acronym[title]\",\n\t\"base\": \"base[href]/\",\n\t\"basefont\": \"basefont/\",\n\t\"br\": \"br/\",\n\t\"frame\": \"frame/\",\n\t\"hr\": \"hr/\",\n\t\"bdo\": \"bdo[dir]\",\n\t\"bdo:r\": \"bdo[dir=rtl]\",\n\t\"bdo:l\": \"bdo[dir=ltr]\",\n\t\"col\": \"col/\",\n\t\"link\": \"link[rel=stylesheet href]/\",\n\t\"link:css\": \"link[href='${1:style}.css']\",\n\t\"link:print\": \"link[href='${1:print}.css' media=print]\",\n\t\"link:favicon\": \"link[rel='shortcut icon' type=image/x-icon href='${1:favicon.ico}']\",\n\t\"link:mf|link:manifest\": \"link[rel='manifest' href='${1:manifest.json}']\",\n\t\"link:touch\": \"link[rel=apple-touch-icon href='${1:favicon.png}']\",\n\t\"link:rss\": \"link[rel=alternate type=application/rss+xml title=RSS href='${1:rss.xml}']\",\n\t\"link:atom\": \"link[rel=alternate type=application/atom+xml title=Atom href='${1:atom.xml}']\",\n\t\"link:im|link:import\": \"link[rel=import href='${1:component}.html']\",\n\t\"meta\": \"meta/\",\n\t\"meta:utf\": \"meta[http-equiv=Content-Type content='text/html;charset=UTF-8']\",\n\t\"meta:vp\": \"meta[name=viewport content='width=${1:device-width}, initial-scale=${2:1.0}']\",\n\t\"meta:compat\": \"meta[http-equiv=X-UA-Compatible content='${1:IE=7}']\",\n\t\"meta:edge\": \"meta:compat[content='${1:ie=edge}']\",\n\t\"meta:redirect\": \"meta[http-equiv=refresh content='0; url=${1:http://example.com}']\",\n\t\"meta:kw\": \"meta[name=keywords content]\",\n\t\"meta:desc\": \"meta[name=description content]\",\n\t\"style\": \"style\",\n\t\"script\": \"script\",\n\t\"script:src\": \"script[src]\",\n\t\"img\": \"img[src alt]/\",\n\t\"img:s|img:srcset\": \"img[srcset src alt]\",\n\t\"img:z|img:sizes\": \"img[sizes srcset src alt]\",\n\t\"picture\": \"picture\",\n\t\"src|source\": \"source/\",\n\t\"src:sc|source:src\": \"source[src type]\",\n\t\"src:s|source:srcset\": \"source[srcset]\",\n\t\"src:t|source:type\": \"source[srcset type='${1:image/}']\",\n\t\"src:z|source:sizes\": \"source[sizes srcset]\",\n\t\"src:m|source:media\": \"source[media='(${1:min-width: })' srcset]\",\n\t\"src:mt|source:media:type\": \"source:media[type='${2:image/}']\",\n\t\"src:mz|source:media:sizes\": \"source:media[sizes srcset]\",\n\t\"src:zt|source:sizes:type\": \"source[sizes srcset type='${1:image/}']\",\n\t\"iframe\": \"iframe[src frameborder=0]\",\n\t\"embed\": \"embed[src type]/\",\n\t\"object\": \"object[data type]\",\n\t\"param\": \"param[name value]/\",\n\t\"map\": \"map[name]\",\n\t\"area\": \"area[shape coords href alt]/\",\n\t\"area:d\": \"area[shape=default]\",\n\t\"area:c\": \"area[shape=circle]\",\n\t\"area:r\": \"area[shape=rect]\",\n\t\"area:p\": \"area[shape=poly]\",\n\t\"form\": \"form[action]\",\n\t\"form:get\": \"form[method=get]\",\n\t\"form:post\": \"form[method=post]\",\n\t\"label\": \"label[for]\",\n\t\"input\": \"input[type=${1:text}]/\",\n\t\"inp\": \"input[name=${1} id=${1}]\",\n\t\"input:h|input:hidden\": \"input[type=hidden name]\",\n\t\"input:t|input:text\": \"inp[type=text]\",\n\t\"input:search\": \"inp[type=search]\",\n\t\"input:email\": \"inp[type=email]\",\n\t\"input:url\": \"inp[type=url]\",\n\t\"input:p|input:password\": \"inp[type=password]\",\n\t\"input:datetime\": \"inp[type=datetime]\",\n\t\"input:date\": \"inp[type=date]\",\n\t\"input:datetime-local\": \"inp[type=datetime-local]\",\n\t\"input:month\": \"inp[type=month]\",\n\t\"input:week\": \"inp[type=week]\",\n\t\"input:time\": \"inp[type=time]\",\n\t\"input:tel\": \"inp[type=tel]\",\n\t\"input:number\": \"inp[type=number]\",\n\t\"input:color\": \"inp[type=color]\",\n\t\"input:c|input:checkbox\": \"inp[type=checkbox]\",\n\t\"input:r|input:radio\": \"inp[type=radio]\",\n\t\"input:range\": \"inp[type=range]\",\n\t\"input:f|input:file\": \"inp[type=file]\",\n\t\"input:s|input:submit\": \"input[type=submit value]\",\n\t\"input:i|input:image\": \"input[type=image src alt]\",\n\t\"input:b|input:btn|input:button\": \"input[type=button value]\",\n\t\"input:reset\": \"input:button[type=reset]\",\n\t\"isindex\": \"isindex/\",\n\t\"select\": \"select[name=${1} id=${1}]\",\n\t\"select:d|select:disabled\": \"select[disabled.]\",\n\t\"opt|option\": \"option[value]\",\n\t\"textarea\": \"textarea[name=${1} id=${1} cols=${2:30} rows=${3:10}]\",\n\t\"marquee\": \"marquee[behavior direction]\",\n\t\"menu:c|menu:context\": \"menu[type=context]\",\n\t\"menu:t|menu:toolbar\": \"menu[type=toolbar]\",\n\t\"video\": \"video[src]\",\n\t\"audio\": \"audio[src]\",\n\t\"html:xml\": \"html[xmlns=http://www.w3.org/1999/xhtml]\",\n\t\"keygen\": \"keygen/\",\n\t\"command\": \"command/\",\n\t\"btn:s|button:s|button:submit\" : \"button[type=submit]\",\n\t\"btn:r|button:r|button:reset\" : \"button[type=reset]\",\n\t\"btn:d|button:d|button:disabled\" : \"button[disabled.]\",\n\t\"fst:d|fset:d|fieldset:d|fieldset:disabled\" : \"fieldset[disabled.]\",\n\n\t\"bq\": \"blockquote\",\n\t\"fig\": \"figure\",\n\t\"figc\": \"figcaption\",\n\t\"pic\": \"picture\",\n\t\"ifr\": \"iframe\",\n\t\"emb\": \"embed\",\n\t\"obj\": \"object\",\n\t\"cap\": \"caption\",\n\t\"colg\": \"colgroup\",\n\t\"fst\": \"fieldset\",\n\t\"btn\": \"button\",\n\t\"optg\": \"optgroup\",\n\t\"tarea\": \"textarea\",\n\t\"leg\": \"legend\",\n\t\"sect\": \"section\",\n\t\"art\": \"article\",\n\t\"hdr\": \"header\",\n\t\"ftr\": \"footer\",\n\t\"adr\": \"address\",\n\t\"dlg\": \"dialog\",\n\t\"str\": \"strong\",\n\t\"prog\": \"progress\",\n\t\"mn\": \"main\",\n\t\"tem\": \"template\",\n\t\"fset\": \"fieldset\",\n\t\"datag\": \"datagrid\",\n\t\"datal\": \"datalist\",\n\t\"kg\": \"keygen\",\n\t\"out\": \"output\",\n\t\"det\": \"details\",\n\t\"sum\": \"summary\",\n\t\"cmd\": \"command\",\n\n\t\"ri:d|ri:dpr\": \"img:s\",\n\t\"ri:v|ri:viewport\": \"img:z\",\n\t\"ri:a|ri:art\": \"pic>src:m+img\",\n\t\"ri:t|ri:type\": \"pic>src:t+img\",\n\n\t\"!!!\": \"{<!DOCTYPE html>}\",\n\t\"doc\": \"html[lang=${lang}]>(head>meta[charset=${charset}]+meta[http-equiv='X-UA-Compatible'][content='IE=edge']+meta:vp+title{${1:Document}})+body\",\n\t\"!|html:5\": \"!!!+doc\",\n\n\t\"c\": \"{<!-- ${0} -->}\",\n\t\"cc:ie\": \"{<!--[if IE]>${0}<![endif]-->}\",\n\t\"cc:noie\": \"{<!--[if !IE]><!-->${0}<!--<![endif]-->}\"\n};\n\nvar stylesheetSnippets = {\n\t\"@f\": \"@font-face {\\n\\tfont-family: ${1};\\n\\tsrc: url(${2});\\n}\",\n\t\"@ff\": \"@font-face {\\n\\tfont-family: '${1:FontName}';\\n\\tsrc: url('${2:FileName}.eot');\\n\\tsrc: url('${2:FileName}.eot?#iefix') format('embedded-opentype'),\\n\\t\\t url('${2:FileName}.woff') format('woff'),\\n\\t\\t url('${2:FileName}.ttf') format('truetype'),\\n\\t\\t url('${2:FileName}.svg#${1:FontName}') format('svg');\\n\\tfont-style: ${3:normal};\\n\\tfont-weight: ${4:normal};\\n}\",\n\t\"@i|@import\": \"@import url(${0});\",\n\t\"@kf\": \"@keyframes ${1:identifier} {\\n\\t${2}\\n}\",\n\t\"@m|@media\": \"@media ${1:screen} {\\n\\t${0}\\n}\",\n\t\"ac\": \"align-content:start|end|flex-start|flex-end|center|space-between|space-around|stretch|space-evenly\",\n\t\"ai\": \"align-items:start|end|flex-start|flex-end|center|baseline|stretch\",\n\t\"anim\": \"animation:${1:name} ${2:duration} ${3:timing-function} ${4:delay} ${5:iteration-count} ${6:direction} ${7:fill-mode}\",\n\t\"animdel\": \"animation-delay:time\",\n\t\"animdir\": \"animation-direction:normal|reverse|alternate|alternate-reverse\",\n\t\"animdur\": \"animation-duration:${1:0}s\",\n\t\"animfm\": \"animation-fill-mode:both|forwards|backwards\",\n\t\"animic\": \"animation-iteration-count:1|infinite\",\n\t\"animn\": \"animation-name\",\n\t\"animps\": \"animation-play-state:running|paused\",\n\t\"animtf\": \"animation-timing-function:linear|ease|ease-in|ease-out|ease-in-out|cubic-bezier(${1:0.1}, ${2:0.7}, ${3:1.0}, ${3:0.1})\",\n\t\"ap\": \"appearance:none\",\n\t\"as\": \"align-self:start|end|auto|flex-start|flex-end|center|baseline|stretch\",\n\t\"b\": \"bottom\",\n\t\"bd\": \"border:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdb\": \"border-bottom:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdbc\": \"border-bottom-color:${1:#000}\",\n\t\"bdbi\": \"border-bottom-image:url(${0})\",\n\t\"bdbk\": \"border-break:close\",\n\t\"bdbli\": \"border-bottom-left-image:url(${0})|continue\",\n\t\"bdblrs\": \"border-bottom-left-radius\",\n\t\"bdbri\": \"border-bottom-right-image:url(${0})|continue\",\n\t\"bdbrrs\": \"border-bottom-right-radius\",\n\t\"bdbs\": \"border-bottom-style\",\n\t\"bdbw\": \"border-bottom-width\",\n\t\"bdc\": \"border-color:${1:#000}\",\n\t\"bdci\": \"border-corner-image:url(${0})|continue\",\n\t\"bdcl\": \"border-collapse:collapse|separate\",\n\t\"bdf\": \"border-fit:repeat|clip|scale|stretch|overwrite|overflow|space\",\n\t\"bdi\": \"border-image:url(${0})\",\n\t\"bdl\": \"border-left:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdlc\": \"border-left-color:${1:#000}\",\n\t\"bdlen\": \"border-length\",\n\t\"bdli\": \"border-left-image:url(${0})\",\n\t\"bdls\": \"border-left-style\",\n\t\"bdlw\": \"border-left-width\",\n\t\"bdr\": \"border-right:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdrc\": \"border-right-color:${1:#000}\",\n\t\"bdri\": \"border-right-image:url(${0})\",\n\t\"bdrs\": \"border-radius\",\n\t\"bdrst\": \"border-right-style\",\n\t\"bdrw\": \"border-right-width\",\n\t\"bds\": \"border-style:none|hidden|dotted|dashed|solid|double|dot-dash|dot-dot-dash|wave|groove|ridge|inset|outset\",\n\t\"bdsp\": \"border-spacing\",\n\t\"bdt\": \"border-top:${1:1px} ${2:solid} ${3:#000}\",\n\t\"bdtc\": \"border-top-color:${1:#000}\",\n\t\"bdti\": \"border-top-image:url(${0})\",\n\t\"bdtli\": \"border-top-left-image:url(${0})|continue\",\n\t\"bdtlrs\": \"border-top-left-radius\",\n\t\"bdtri\": \"border-top-right-image:url(${0})|continue\",\n\t\"bdtrrs\": \"border-top-right-radius\",\n\t\"bdts\": \"border-top-style\",\n\t\"bdtw\": \"border-top-width\",\n\t\"bdw\": \"border-width\",\n\t\"bfv\": \"backface-visibility:hidden|visible\",\n\t\"bg\": \"background:${1:#000}\",\n\t\"bga\": \"background-attachment:fixed|scroll\",\n\t\"bgbk\": \"background-break:bounding-box|each-box|continuous\",\n\t\"bgc\": \"background-color:#${1:fff}\",\n\t\"bgcp\": \"background-clip:padding-box|border-box|content-box|no-clip\",\n\t\"bgi\": \"background-image:url(${0})\",\n\t\"bgo\": \"background-origin:padding-box|border-box|content-box\",\n\t\"bgp\": \"background-position:${1:0} ${2:0}\",\n\t\"bgpx\": \"background-position-x\",\n\t\"bgpy\": \"background-position-y\",\n\t\"bgr\": \"background-repeat:no-repeat|repeat-x|repeat-y|space|round\",\n\t\"bgsz\": \"background-size:contain|cover\",\n\t\"bxsh\": \"box-shadow:${1:inset }${2:hoff} ${3:voff} ${4:blur} ${5:#000}|none\",\n\t\"bxsz\": \"box-sizing:border-box|content-box|border-box\",\n\t\"c\": \"color:${1:#000}\",\n\t\"cr\": \"color:rgb(${1:0}, ${2:0}, ${3:0})\",\n\t\"cra\": \"color:rgba(${1:0}, ${2:0}, ${3:0}, ${4:.5})\",\n\t\"cl\": \"clear:both|left|right|none\",\n\t\"cm\": \"/* ${0} */\",\n\t\"cnt\": \"content:'${0}'|normal|open-quote|no-open-quote|close-quote|no-close-quote|attr(${0})|counter(${0})|counters(${0})\",\n\t\"coi\": \"counter-increment\",\n\t\"colm\": \"columns\",\n\t\"colmc\": \"column-count\",\n\t\"colmf\": \"column-fill\",\n\t\"colmg\": \"column-gap\",\n\t\"colmr\": \"column-rule\",\n\t\"colmrc\": \"column-rule-color\",\n\t\"colmrs\": \"column-rule-style\",\n\t\"colmrw\": \"column-rule-width\",\n\t\"colms\": \"column-span\",\n\t\"colmw\": \"column-width\",\n\t\"cor\": \"counter-reset\",\n\t\"cp\": \"clip:auto|rect(${1:top} ${2:right} ${3:bottom} ${4:left})\",\n\t\"cps\": \"caption-side:top|bottom\",\n\t\"cur\": \"cursor:pointer|auto|default|crosshair|hand|help|move|pointer|text\",\n\t\"d\": \"display:block|none|flex|inline-flex|inline|inline-block|grid|inline-grid|subgrid|list-item|run-in|compact|table|inline-table|table-caption|table-column|table-column-group|table-header-group|table-footer-group|table-row|table-row-group|table-cell|ruby|ruby-base|ruby-base-group|ruby-text|ruby-text-group\",\n\t\"ec\": \"empty-cells:show|hide\",\n\t\"f\": \"font:${1:1em} ${2:sans-serif}\",\n\t\"fd\": \"font-display:auto|block|swap|fallback|optional\",\n\t\"fef\": \"font-effect:none|engrave|emboss|outline\",\n\t\"fem\": \"font-emphasize\",\n\t\"femp\": \"font-emphasize-position:before|after\",\n\t\"fems\": \"font-emphasize-style:none|accent|dot|circle|disc\",\n\t\"ff\": \"font-family:serif|sans-serif|cursive|fantasy|monospace\",\n\t\"fft\": \"font-family:\\\"Times New Roman\\\", Times, Baskerville, Georgia, serif\",\n\t\"ffa\": \"font-family:Arial, \\\"Helvetica Neue\\\", Helvetica, sans-serif\",\n\t\"ffv\": \"font-family:Verdana, Geneva, sans-serif\",\n\t\"fl\": \"float:left|right|none\",\n\t\"fs\": \"font-style:italic|normal|oblique\",\n\t\"fsm\": \"font-smoothing:antialiased|subpixel-antialiased|none\",\n\t\"fst\": \"font-stretch:normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded\",\n\t\"fv\": \"font-variant:normal|small-caps\",\n\t\"fvs\": \"font-variation-settings:normal|inherit|initial|unset\",\n\t\"fw\": \"font-weight:normal|bold|bolder|lighter\",\n\t\"fx\": \"flex\",\n\t\"fxb\": \"flex-basis:fill|max-content|min-content|fit-content|content\",\n\t\"fxd\": \"flex-direction:row|row-reverse|column|column-reverse\",\n\t\"fxf\": \"flex-flow\",\n\t\"fxg\": \"flex-grow\",\n\t\"fxsh\": \"flex-shrink\",\n\t\"fxw\": \"flex-wrap:nowrap|wrap|wrap-reverse\",\n\t\"fsz\": \"font-size\",\n\t\"fsza\": \"font-size-adjust\",\n\t\"gtc\": \"grid-template-columns:repeat(${0})|minmax()\",\n\t\"gtr\": \"grid-template-rows:repeat(${0})|minmax()\",\n\t\"gta\": \"grid-template-areas\",\n\t\"gt\": \"grid-template\",\n\t\"gg\": \"grid-gap\",\n\t\"gcg\": \"grid-column-gap\",\n\t\"grg\": \"grid-row-gap\",\n\t\"gac\": \"grid-auto-columns:auto|minmax()\",\n\t\"gar\": \"grid-auto-rows:auto|minmax()\",\n\t\"gaf\": \"grid-auto-flow:row|column|dense|inherit|initial|unset\",\n\t\"gd\": \"grid\",\n\t\"gc\": \"grid-column\",\n\t\"gcs\": \"grid-column-start\",\n\t\"gce\": \"grid-column-end\",\n\t\"gr\": \"grid-row\",\n\t\"grs\": \"grid-row-start\",\n\t\"gre\": \"grid-row-end\",\n\t\"ga\": \"grid-area\",\n\t\"h\": \"height\",\n\t\"jc\": \"justify-content:start|end|stretch|flex-start|flex-end|center|space-between|space-around|space-evenly\",\n\t\"ji\": \"justify-items:start|end|center|stretch\",\n\t\"js\": \"justify-self:start|end|center|stretch\",\n\t\"l\": \"left\",\n\t\"lg\": \"background-image:linear-gradient(${1})\",\n\t\"lh\": \"line-height\",\n\t\"lis\": \"list-style\",\n\t\"lisi\": \"list-style-image\",\n\t\"lisp\": \"list-style-position:inside|outside\",\n\t\"list\": \"list-style-type:disc|circle|square|decimal|decimal-leading-zero|lower-roman|upper-roman\",\n\t\"lts\": \"letter-spacing:normal\",\n\t\"m\": \"margin\",\n\t\"mah\": \"max-height\",\n\t\"mar\": \"max-resolution\",\n\t\"maw\": \"max-width\",\n\t\"mb\": \"margin-bottom\",\n\t\"mih\": \"min-height\",\n\t\"mir\": \"min-resolution\",\n\t\"miw\": \"min-width\",\n\t\"ml\": \"margin-left\",\n\t\"mr\": \"margin-right\",\n\t\"mt\": \"margin-top\",\n\t\"ol\": \"outline\",\n\t\"olc\": \"outline-color:${1:#000}|invert\",\n\t\"olo\": \"outline-offset\",\n\t\"ols\": \"outline-style:none|dotted|dashed|solid|double|groove|ridge|inset|outset\",\n\t\"olw\": \"outline-width|thin|medium|thick\",\n\t\"op|opa\": \"opacity\",\n\t\"ord\": \"order\",\n\t\"ori\": \"orientation:landscape|portrait\",\n\t\"orp\": \"orphans\",\n\t\"ov\": \"overflow:hidden|visible|hidden|scroll|auto\",\n\t\"ovs\": \"overflow-style:scrollbar|auto|scrollbar|panner|move|marquee\",\n\t\"ovx\": \"overflow-x:hidden|visible|hidden|scroll|auto\",\n\t\"ovy\": \"overflow-y:hidden|visible|hidden|scroll|auto\",\n\t\"p\": \"padding\",\n\t\"pb\": \"padding-bottom\",\n\t\"pgba\": \"page-break-after:auto|always|left|right\",\n\t\"pgbb\": \"page-break-before:auto|always|left|right\",\n\t\"pgbi\": \"page-break-inside:auto|avoid\",\n\t\"pl\": \"padding-left\",\n\t\"pos\": \"position:relative|absolute|relative|fixed|static\",\n\t\"pr\": \"padding-right\",\n\t\"pt\": \"padding-top\",\n\t\"q\": \"quotes\",\n\t\"qen\": \"quotes:'\\\\201C' '\\\\201D' '\\\\2018' '\\\\2019'\",\n\t\"qru\": \"quotes:'\\\\00AB' '\\\\00BB' '\\\\201E' '\\\\201C'\",\n\t\"r\": \"right\",\n\t\"rsz\": \"resize:none|both|horizontal|vertical\",\n\t\"t\": \"top\",\n\t\"ta\": \"text-align:left|center|right|justify\",\n\t\"tal\": \"text-align-last:left|center|right\",\n\t\"tbl\": \"table-layout:fixed\",\n\t\"td\": \"text-decoration:none|underline|overline|line-through\",\n\t\"te\": \"text-emphasis:none|accent|dot|circle|disc|before|after\",\n\t\"th\": \"text-height:auto|font-size|text-size|max-size\",\n\t\"ti\": \"text-indent\",\n\t\"tj\": \"text-justify:auto|inter-word|inter-ideograph|inter-cluster|distribute|kashida|tibetan\",\n\t\"to\": \"text-outline:${1:0} ${2:0} ${3:#000}\",\n\t\"tov\": \"text-overflow:ellipsis|clip\",\n\t\"tr\": \"text-replace\",\n\t\"trf\": \"transform:${1}|skewX(${1:angle})|skewY(${1:angle})|scale(${1:x}, ${2:y})|scaleX(${1:x})|scaleY(${1:y})|scaleZ(${1:z})|scale3d(${1:x}, ${2:y}, ${3:z})|rotate(${1:angle})|rotateX(${1:angle})|rotateY(${1:angle})|rotateZ(${1:angle})|translate(${1:x}, ${2:y})|translateX(${1:x})|translateY(${1:y})|translateZ(${1:z})|translate3d(${1:tx}, ${2:ty}, ${3:tz})\",\n\t\"trfo\": \"transform-origin\",\n\t\"trfs\": \"transform-style:preserve-3d\",\n\t\"trs\": \"transition:${1:prop} ${2:time}\",\n\t\"trsde\": \"transition-delay:${1:time}\",\n\t\"trsdu\": \"transition-duration:${1:time}\",\n\t\"trsp\": \"transition-property:${1:prop}\",\n\t\"trstf\": \"transition-timing-function:${1:fn}\",\n\t\"tsh\": \"text-shadow:${1:hoff} ${2:voff} ${3:blur} ${4:#000}\",\n\t\"tt\": \"text-transform:uppercase|lowercase|capitalize|none\",\n\t\"tw\": \"text-wrap:none|normal|unrestricted|suppress\",\n\t\"us\": \"user-select:none\",\n\t\"v\": \"visibility:hidden|visible|collapse\",\n\t\"va\": \"vertical-align:top|super|text-top|middle|baseline|bottom|text-bottom|sub\",\n\t\"w\": \"width\",\n\t\"whs\": \"white-space:nowrap|pre|pre-wrap|pre-line|normal\",\n\t\"whsc\": \"white-space-collapse:normal|keep-all|loose|break-strict|break-all\",\n\t\"wid\": \"widows\",\n\t\"wm\": \"writing-mode:lr-tb|lr-tb|lr-bt|rl-tb|rl-bt|tb-rl|tb-lr|bt-lr|bt-rl\",\n\t\"wob\": \"word-break:normal|keep-all|break-all\",\n\t\"wos\": \"word-spacing\",\n\t\"wow\": \"word-wrap:none|unrestricted|suppress|break-word|normal\",\n\t\"z\": \"z-index\",\n\t\"zom\": \"zoom:1\"\n};\n\nvar xslSnippets = {\n    \"tm|tmatch\": \"xsl:template[match mode]\",\n    \"tn|tname\": \"xsl:template[name]\",\n    \"call\": \"xsl:call-template[name]\",\n    \"ap\": \"xsl:apply-templates[select mode]\",\n    \"api\": \"xsl:apply-imports\",\n    \"imp\": \"xsl:import[href]\",\n    \"inc\": \"xsl:include[href]\",\n    \"ch\": \"xsl:choose\",\n    \"wh|xsl:when\": \"xsl:when[test]\",\n    \"ot\": \"xsl:otherwise\",\n    \"if\": \"xsl:if[test]\",\n    \"par\": \"xsl:param[name]\",\n    \"pare\": \"xsl:param[name select]\",\n    \"var\": \"xsl:variable[name]\",\n    \"vare\": \"xsl:variable[name select]\",\n    \"wp\": \"xsl:with-param[name select]\",\n    \"key\": \"xsl:key[name match use]\",\n    \"elem\": \"xsl:element[name]\",\n    \"attr\": \"xsl:attribute[name]\",\n    \"attrs\": \"xsl:attribute-set[name]\",\n    \"cp\": \"xsl:copy[select]\",\n    \"co\": \"xsl:copy-of[select]\",\n    \"val\": \"xsl:value-of[select]\",\n    \"for|each\": \"xsl:for-each[select]\",\n    \"tex\": \"xsl:text\",\n    \"com\": \"xsl:comment\",\n    \"msg\": \"xsl:message[terminate=no]\",\n    \"fall\": \"xsl:fallback\",\n    \"num\": \"xsl:number[value]\",\n    \"nam\": \"namespace-alias[stylesheet-prefix result-prefix]\",\n    \"pres\": \"xsl:preserve-space[elements]\",\n    \"strip\": \"xsl:strip-space[elements]\",\n    \"proc\": \"xsl:processing-instruction[name]\",\n    \"sort\": \"xsl:sort[select order]\",\n    \"choose\": \"xsl:choose>xsl:when+xsl:otherwise\",\n    \"xsl\": \"!!!+xsl:stylesheet[version=1.0 xmlns:xsl=http://www.w3.org/1999/XSL/Transform]>{\\n|}\",\n    \"!!!\": \"{<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>}\"\n};\n\nvar pugSnippets = {\n\t\"!!!\": \"{doctype html}\"\n};\n\nvar variables = {\n\t\"lang\": \"en\",\n\t\"locale\": \"en-US\",\n\t\"charset\": \"UTF-8\",\n\t\"indentation\": \"\\t\",\n\t\"newline\": \"\\n\"\n};\n\n/**\n * Default syntaxes for abbreviation types\n */\nconst defaultSyntaxes = {\n    markup: 'html',\n    stylesheet: 'css'\n};\nconst defaultOptions = {\n    'inlineElements': [\n        'a', 'abbr', 'acronym', 'applet', 'b', 'basefont', 'bdo',\n        'big', 'br', 'button', 'cite', 'code', 'del', 'dfn', 'em', 'font', 'i',\n        'iframe', 'img', 'input', 'ins', 'kbd', 'label', 'map', 'object', 'q',\n        's', 'samp', 'select', 'small', 'span', 'strike', 'strong', 'sub', 'sup',\n        'textarea', 'tt', 'u', 'var'\n    ],\n    'output.indent': '\\t',\n    'output.baseIndent': '',\n    'output.newline': '\\n',\n    'output.tagCase': '',\n    'output.attributeCase': '',\n    'output.attributeQuotes': 'double',\n    'output.format': true,\n    'output.formatLeafNode': false,\n    'output.formatSkip': ['html'],\n    'output.formatForce': ['body'],\n    'output.inlineBreak': 3,\n    'output.compactBoolean': false,\n    'output.booleanAttributes': [\n        'contenteditable', 'seamless', 'async', 'autofocus',\n        'autoplay', 'checked', 'controls', 'defer', 'disabled', 'formnovalidate',\n        'hidden', 'ismap', 'loop', 'multiple', 'muted', 'novalidate', 'readonly',\n        'required', 'reversed', 'selected', 'typemustmatch'\n    ],\n    'output.reverseAttributes': false,\n    'output.selfClosingStyle': 'html',\n    'output.field': (index, placeholder) => placeholder,\n    'output.text': text => text,\n    'markup.href': true,\n    'comment.enabled': false,\n    'comment.trigger': ['id', 'class'],\n    'comment.before': '',\n    'comment.after': '\\n<!-- /[#ID][.CLASS] -->',\n    'bem.enabled': false,\n    'bem.element': '__',\n    'bem.modifier': '_',\n    'jsx.enabled': false,\n    'stylesheet.keywords': ['auto', 'inherit', 'unset', 'none'],\n    'stylesheet.unitless': ['z-index', 'line-height', 'opacity', 'font-weight', 'zoom', 'flex', 'flex-grow', 'flex-shrink'],\n    'stylesheet.shortHex': true,\n    'stylesheet.between': ': ',\n    'stylesheet.after': ';',\n    'stylesheet.intUnit': 'px',\n    'stylesheet.floatUnit': 'em',\n    'stylesheet.unitAliases': { e: 'em', p: '%', x: 'ex', r: 'rem' },\n    'stylesheet.json': false,\n    'stylesheet.jsonDoubleQuotes': false,\n    'stylesheet.fuzzySearchMinScore': 0\n};\nconst defaultConfig = {\n    type: 'markup',\n    syntax: 'html',\n    variables,\n    snippets: {},\n    options: defaultOptions\n};\n/**\n * Default per-syntax config\n */\nconst syntaxConfig = {\n    markup: {\n        snippets: parseSnippets(markupSnippets),\n    },\n    xhtml: {\n        options: {\n            'output.selfClosingStyle': 'xhtml'\n        }\n    },\n    xml: {\n        options: {\n            'output.selfClosingStyle': 'xml'\n        }\n    },\n    xsl: {\n        snippets: parseSnippets(xslSnippets),\n        options: {\n            'output.selfClosingStyle': 'xml'\n        }\n    },\n    jsx: {\n        options: {\n            'jsx.enabled': true\n        }\n    },\n    pug: {\n        snippets: parseSnippets(pugSnippets)\n    },\n    stylesheet: {\n        snippets: parseSnippets(stylesheetSnippets)\n    },\n    sass: {\n        options: {\n            'stylesheet.after': ''\n        }\n    },\n    stylus: {\n        options: {\n            'stylesheet.between': ' ',\n            'stylesheet.after': '',\n        }\n    }\n};\n/**\n * Parses raw snippets definitions with possibly multiple keys into a plan\n * snippet map\n */\nfunction parseSnippets(snippets) {\n    const result = {};\n    Object.keys(snippets).forEach(k => {\n        for (const name of k.split('|')) {\n            result[name] = snippets[k];\n        }\n    });\n    return result;\n}\nfunction resolveConfig(config = {}, globals = {}) {\n    const type = config.type || 'markup';\n    const syntax = config.syntax || defaultSyntaxes[type];\n    return Object.assign(Object.assign(Object.assign({}, defaultConfig), config), { type,\n        syntax, variables: mergedData(type, syntax, 'variables', config, globals), snippets: mergedData(type, syntax, 'snippets', config, globals), options: mergedData(type, syntax, 'options', config, globals) });\n}\nfunction mergedData(type, syntax, key, config, globals = {}) {\n    const typeDefaults = syntaxConfig[type];\n    const typeOverride = globals[type];\n    const syntaxDefaults = syntaxConfig[syntax];\n    const syntaxOverride = globals[syntax];\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, defaultConfig[key]), (typeDefaults && typeDefaults[key])), (syntaxDefaults && syntaxDefaults[key])), (typeOverride && typeOverride[key])), (syntaxOverride && syntaxOverride[key])), config[key]);\n}\n\n/**\n * Creates structure for scanning given string in backward direction\n */\nfunction backwardScanner(text, start = 0) {\n    return { text, start, pos: text.length };\n}\n/**\n * Check if given scanner position is at start of scanned text\n */\nfunction sol(scanner) {\n    return scanner.pos === scanner.start;\n}\n/**\n * “Peeks” character code an current scanner location without advancing it\n */\nfunction peek$1(scanner, offset = 0) {\n    return scanner.text.charCodeAt(scanner.pos - 1 + offset);\n}\n/**\n * Returns current character code and moves character location one symbol back\n */\nfunction previous(scanner) {\n    if (!sol(scanner)) {\n        return scanner.text.charCodeAt(--scanner.pos);\n    }\n}\n/**\n * Consumes current character code if it matches given `match` code or function\n */\nfunction consume(scanner, match) {\n    if (sol(scanner)) {\n        return false;\n    }\n    const ok = typeof match === 'function'\n        ? match(peek$1(scanner))\n        : match === peek$1(scanner);\n    if (ok) {\n        scanner.pos--;\n    }\n    return !!ok;\n}\nfunction consumeWhile(scanner, match) {\n    const start = scanner.pos;\n    while (consume(scanner, match)) {\n        // empty\n    }\n    return scanner.pos < start;\n}\n\n/**\n * Check if given character code is a quote\n */\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\n/**\n * Consumes quoted value, if possible\n * @return Returns `true` is value was consumed\n */\nfunction consumeQuoted(scanner) {\n    const start = scanner.pos;\n    const quote = previous(scanner);\n    if (isQuote(quote)) {\n        while (!sol(scanner)) {\n            if (previous(scanner) === quote && peek$1(scanner) !== 92 /* Escape */) {\n                return true;\n            }\n        }\n    }\n    scanner.pos = start;\n    return false;\n}\n\nconst bracePairs = {\n    [91 /* SquareL */]: 93 /* SquareR */,\n    [40 /* RoundL */]: 41 /* RoundR */,\n    [123 /* CurlyL */]: 125 /* CurlyR */,\n};\n\n/**\n * Check if given reader’s current position points at the end of HTML tag\n */\nfunction isHtml(scanner) {\n    const start = scanner.pos;\n    if (!consume(scanner, 62 /* AngleRight */)) {\n        return false;\n    }\n    let ok = false;\n    consume(scanner, 47 /* Slash */); // possibly self-closed element\n    while (!sol(scanner)) {\n        consumeWhile(scanner, isWhiteSpace);\n        if (consumeIdent(scanner)) {\n            // ate identifier: could be a tag name, boolean attribute or unquoted\n            // attribute value\n            if (consume(scanner, 47 /* Slash */)) {\n                // either closing tag or invalid tag\n                ok = consume(scanner, 60 /* AngleLeft */);\n                break;\n            }\n            else if (consume(scanner, 60 /* AngleLeft */)) {\n                // opening tag\n                ok = true;\n                break;\n            }\n            else if (consume(scanner, isWhiteSpace)) {\n                // boolean attribute\n                continue;\n            }\n            else if (consume(scanner, 61 /* Equals */)) {\n                // simple unquoted value or invalid attribute\n                if (consumeIdent(scanner)) {\n                    continue;\n                }\n                break;\n            }\n            else if (consumeAttributeWithUnquotedValue(scanner)) {\n                // identifier was a part of unquoted value\n                ok = true;\n                break;\n            }\n            // invalid tag\n            break;\n        }\n        if (consumeAttribute(scanner)) {\n            continue;\n        }\n        break;\n    }\n    scanner.pos = start;\n    return ok;\n}\n/**\n * Consumes HTML attribute from given string.\n * @return `true` if attribute was consumed.\n */\nfunction consumeAttribute(scanner) {\n    return consumeAttributeWithQuotedValue(scanner) || consumeAttributeWithUnquotedValue(scanner);\n}\nfunction consumeAttributeWithQuotedValue(scanner) {\n    const start = scanner.pos;\n    if (consumeQuoted(scanner) && consume(scanner, 61 /* Equals */) && consumeIdent(scanner)) {\n        return true;\n    }\n    scanner.pos = start;\n    return false;\n}\nfunction consumeAttributeWithUnquotedValue(scanner) {\n    const start = scanner.pos;\n    const stack = [];\n    while (!sol(scanner)) {\n        const ch = peek$1(scanner);\n        if (isCloseBracket(ch)) {\n            stack.push(ch);\n        }\n        else if (isOpenBracket(ch)) {\n            if (stack.pop() !== bracePairs[ch]) {\n                // Unexpected open bracket\n                break;\n            }\n        }\n        else if (!isUnquotedValue(ch)) {\n            break;\n        }\n        scanner.pos--;\n    }\n    if (start !== scanner.pos && consume(scanner, 61 /* Equals */) && consumeIdent(scanner)) {\n        return true;\n    }\n    scanner.pos = start;\n    return false;\n}\n/**\n * Consumes HTML identifier from stream\n */\nfunction consumeIdent(scanner) {\n    return consumeWhile(scanner, isIdent);\n}\n/**\n * Check if given character code belongs to HTML identifier\n */\nfunction isIdent(ch) {\n    return ch === 58 /* Colon */ || ch === 45 /* Dash */ || isAlpha(ch) || isNumber(ch);\n}\n/**\n * Check if given character code is alpha code (letter though A to Z)\n */\nfunction isAlpha(ch) {\n    ch &= ~32; // quick hack to convert any char code to uppercase char code\n    return ch >= 65 && ch <= 90; // A-Z\n}\n/**\n * Check if given code is a number\n */\nfunction isNumber(ch) {\n    return ch > 47 && ch < 58;\n}\n/**\n * Check if given code is a whitespace\n */\nfunction isWhiteSpace(ch) {\n    return ch === 32 /* Space */ || ch === 9 /* Tab */;\n}\n/**\n * Check if given code may belong to unquoted attribute value\n */\nfunction isUnquotedValue(ch) {\n    return !isNaN(ch) && ch !== 61 /* Equals */ && !isWhiteSpace(ch) && !isQuote(ch);\n}\nfunction isOpenBracket(ch) {\n    return ch === 123 /* CurlyL */ || ch === 40 /* RoundL */ || ch === 91 /* SquareL */;\n}\nfunction isCloseBracket(ch) {\n    return ch === 125 /* CurlyR */ || ch === 41 /* RoundR */ || ch === 93 /* SquareR */;\n}\n\nconst code = (ch) => ch.charCodeAt(0);\nconst specialChars = '#.*:$-_!@%^+>/'.split('').map(code);\nconst defaultOptions$1 = {\n    type: 'markup',\n    lookAhead: true,\n    prefix: ''\n};\n/**\n * Extracts Emmet abbreviation from given string.\n * The goal of this module is to extract abbreviation from current editor’s line,\n * e.g. like this: `<span>.foo[title=bar|]</span>` -> `.foo[title=bar]`, where\n * `|` is a current caret position.\n * @param line A text line where abbreviation should be expanded\n * @param pos Caret position in line. If not given, uses end of line\n * @param options Extracting options\n */\nfunction extractAbbreviation(line, pos = line.length, options = {}) {\n    // make sure `pos` is within line range\n    const opt = Object.assign(Object.assign({}, defaultOptions$1), options);\n    pos = Math.min(line.length, Math.max(0, pos == null ? line.length : pos));\n    if (opt.lookAhead) {\n        pos = offsetPastAutoClosed(line, pos, opt);\n    }\n    let ch;\n    const start = getStartOffset(line, pos, opt.prefix || '');\n    if (start === -1) {\n        return void 0;\n    }\n    const scanner = backwardScanner(line, start);\n    scanner.pos = pos;\n    const stack = [];\n    while (!sol(scanner)) {\n        ch = peek$1(scanner);\n        if (stack.includes(125 /* CurlyR */)) {\n            if (ch === 125 /* CurlyR */) {\n                stack.push(ch);\n                scanner.pos--;\n                continue;\n            }\n            if (ch !== 123 /* CurlyL */) {\n                scanner.pos--;\n                continue;\n            }\n        }\n        if (isCloseBrace(ch, opt.type)) {\n            stack.push(ch);\n        }\n        else if (isOpenBrace(ch, opt.type)) {\n            if (stack.pop() !== bracePairs[ch]) {\n                // unexpected brace\n                break;\n            }\n        }\n        else if (stack.includes(93 /* SquareR */) || stack.includes(125 /* CurlyR */)) {\n            // respect all characters inside attribute sets or text nodes\n            scanner.pos--;\n            continue;\n        }\n        else if (isHtml(scanner) || !isAbbreviation(ch)) {\n            break;\n        }\n        scanner.pos--;\n    }\n    if (!stack.length && scanner.pos !== pos) {\n        // Found something, remove some invalid symbols from the\n        // beginning and return abbreviation\n        const abbreviation = line.slice(scanner.pos, pos).replace(/^[*+>^]+/, '');\n        return {\n            abbreviation,\n            location: pos - abbreviation.length,\n            start: options.prefix\n                ? start - options.prefix.length\n                : pos - abbreviation.length,\n            end: pos\n        };\n    }\n}\n/**\n * Returns new `line` index which is right after characters beyound `pos` that\n * editor will likely automatically close, e.g. }, ], and quotes\n */\nfunction offsetPastAutoClosed(line, pos, options) {\n    // closing quote is allowed only as a next character\n    if (isQuote(line.charCodeAt(pos))) {\n        pos++;\n    }\n    // offset pointer until non-autoclosed character is found\n    while (isCloseBrace(line.charCodeAt(pos), options.type)) {\n        pos++;\n    }\n    return pos;\n}\n/**\n * Returns start offset (left limit) in `line` where we should stop looking for\n * abbreviation: it’s nearest to `pos` location of `prefix` token\n */\nfunction getStartOffset(line, pos, prefix) {\n    if (!prefix) {\n        return 0;\n    }\n    const scanner = backwardScanner(line);\n    const compiledPrefix = prefix.split('').map(code);\n    scanner.pos = pos;\n    let result;\n    while (!sol(scanner)) {\n        if (consumePair(scanner, 93 /* SquareR */, 91 /* SquareL */) || consumePair(scanner, 125 /* CurlyR */, 123 /* CurlyL */)) {\n            continue;\n        }\n        result = scanner.pos;\n        if (consumeArray(scanner, compiledPrefix)) {\n            return result;\n        }\n        scanner.pos--;\n    }\n    return -1;\n}\n/**\n * Consumes full character pair, if possible\n */\nfunction consumePair(scanner, close, open) {\n    const start = scanner.pos;\n    if (consume(scanner, close)) {\n        while (!sol(scanner)) {\n            if (consume(scanner, open)) {\n                return true;\n            }\n            scanner.pos--;\n        }\n    }\n    scanner.pos = start;\n    return false;\n}\n/**\n * Consumes all character codes from given array, right-to-left, if possible\n */\nfunction consumeArray(scanner, arr) {\n    const start = scanner.pos;\n    let consumed = false;\n    for (let i = arr.length - 1; i >= 0 && !sol(scanner); i--) {\n        if (!consume(scanner, arr[i])) {\n            break;\n        }\n        consumed = i === 0;\n    }\n    if (!consumed) {\n        scanner.pos = start;\n    }\n    return consumed;\n}\nfunction isAbbreviation(ch) {\n    return (ch > 64 && ch < 91) // uppercase letter\n        || (ch > 96 && ch < 123) // lowercase letter\n        || (ch > 47 && ch < 58) // number\n        || specialChars.includes(ch); // special character\n}\nfunction isOpenBrace(ch, syntax) {\n    return ch === 40 /* RoundL */ || (syntax === 'markup' && (ch === 91 /* SquareL */ || ch === 123 /* CurlyL */));\n}\nfunction isCloseBrace(ch, syntax) {\n    return ch === 41 /* RoundR */ || (syntax === 'markup' && (ch === 93 /* SquareR */ || ch === 125 /* CurlyR */));\n}\n\nfunction expandAbbreviation(abbr, config) {\n    const resolvedConfig = resolveConfig(config);\n    return resolvedConfig.type === 'stylesheet'\n        ? stylesheet(abbr, resolvedConfig)\n        : markup(abbr, resolvedConfig);\n}\n/**\n * Expands given *markup* abbreviation (e.g. regular Emmet abbreviation that\n * produces structured output like HTML) and outputs it according to options\n * provided in config\n */\nfunction markup(abbr, config) {\n    return stringify(parse(abbr, config), config);\n}\n/**\n * Expands given *stylesheet* abbreviation (a special Emmet abbreviation designed for\n * stylesheet languages like CSS, SASS etc.) and outputs it according to options\n * provided in config\n */\nfunction stylesheet(abbr, config) {\n    return css(parse$1(abbr, config), config);\n}\n\nexport default expandAbbreviation;\nexport { extractAbbreviation as extract, markup, parse as parseMarkup, parse$1 as parseStylesheet, convertSnippets as parseStylesheetSnippets, resolveConfig, stringify as stringifyMarkup, css as stringifyStylesheet, stylesheet };\n//# sourceMappingURL=emmet.es.js.map\n","//@ts-check\r\n\r\nexport const commonStorage = sessionStorage;\r\n\r\n/**\r\n * @param {{ (): number; (): any; }} func\r\n * @param {number} delay\r\n */\r\nexport function debounce(func, delay) {\r\n    \r\n    let inAwaiting = false;\r\n\r\n    return function ()\r\n    {\r\n        if (!inAwaiting) {\r\n\r\n            let result = func();\r\n\r\n            inAwaiting = true;\r\n            setTimeout(() => inAwaiting = false, delay);\r\n\r\n            return result;\r\n        }\r\n    };\r\n}\r\n\r\n\r\n\r\n/**\r\n * @param {string} code\r\n * @returns {string|null}\r\n */\r\nexport function getLangMode(code)\r\n{\r\n    let langModeMatch = code.match(/\\/\\* ([\\w \\n]+) \\*\\//);\r\n\r\n    return langModeMatch\r\n        ? langModeMatch.pop()\r\n        : null;\r\n}\r\n\r\n\r\n","//@ts-check\r\n\r\n\r\n\r\n\r\nconst reactCompiler = {\r\n    react: 'https://unpkg.com/react@17/umd/react.production.min.js',\r\n    reactDOM: 'https://unpkg.com/react-dom@17/umd/react-dom.production.min.js',\r\n}\r\n\r\nconst vueCompiler = {\r\n    // vue: \"https://unpkg.com/vue@2.5.17/dist/vue.js\"\r\n    vue: 'https://cdnjs.cloudflare.com/ajax/libs/vue/2.6.14/vue.min.js'\r\n}\r\n\r\nconst preactCompiler = {\r\n    // set: './build/_preact.js',\r\n    // set: '~/build/_preact.js',\r\n\r\n    // preact: 'https://cdnjs.cloudflare.com/ajax/libs/preact/11.0.0-experimental.1/preact.umd.min.js',     // preact\r\n    // hooks: 'https://cdnjs.cloudflare.com/ajax/libs/preact/11.0.0-experimental.1/hooks.umd.min.js',      // hooks\r\n    // compat: 'https://cdnjs.cloudflare.com/ajax/libs/preact/11.0.0-experimental.1/compat.umd.min.js'     // react\r\n\r\n    // set: 'http://127.0.0.1:3000/build/_preact.js',\r\n\r\n    set: document.location.origin + (~document.location.host.indexOf('3000') ? '/build/_preact.js' : '/static/js/compiler_libs/_preact.js'),\r\n}\r\n\r\n\r\nexport const babelCompiler = {\r\n    link: 'https://unpkg.com/@babel/standalone/babel.min.js',\r\n    mode: ' type=\"text/babel\" '\r\n}\r\n\r\n\r\n// export const reactCompilers = [babelCompiler.link, reactCompiler.react, reactCompiler.reactDOM];\r\n\r\n// export const reactCompilers = [\r\n//     preactCompiler.set,\r\n//     babelCompiler.link,\r\n// ];\r\n\r\n// export const reactCompilers = [\r\n//     vueCompiler.vue\r\n// ];\r\n\r\n\r\nexport const compilers = {\r\n    vanile: undefined,\r\n    preact: [babelCompiler.link].concat(Object.values(preactCompiler)),\r\n    vue: Object.values(vueCompiler),\r\n    react: [babelCompiler.link].concat(Object.values(reactCompiler)),    \r\n};\r\n\r\n\r\nexport const defaultValues = [\r\n    // html\r\n    {\r\n        html: '<h2 onclick=\"greeting(event)\">\\n\\tHello world!\\n</h2>',\r\n        css: 'h2 {\\n\\tcolor: green;\\n\\tcursor: pointer; \\n}',\r\n        javascript: 'function greeting(event){\\n\\talert(\"greeting!\")\\n}'\r\n    },\r\n    // preact\r\n    {\r\n        html: '<div id=\"root\"></div>',\r\n        css: '#root{\\n\\tcolor: red;\\n}',\r\n        javascript: \"const name = 'world'; \\n\\trender(\\n\\t<h1>Hello {name}</h1>, \\n\\tdocument.getElementById('root')\\n);\"\r\n    },\r\n    // vue\r\n    {\r\n        html: '<div id=\"app\">\\n\\t<input type=\"text\" v-on:input=\"setMsg\" />\\n\\t<p>{{msg}}</p>\\n</div>',\r\n        css: '#app { \\n\\tcolor: green; \\n}',\r\n        javascript: \"new Vue({\\n\\tel: '#app', \\n\\tdata: {\\n\\t\\tmsg: 'Hello Vue!'\\n\\t}, \\n\\tmethods: {\\n\\t\\tsetMsg: function(e){\\n\\t\\t\\tthis.msg = e.target.value;\\n\\t\\t}\\n\\t}\\n})\"\r\n    },\r\n    // react\r\n    {\r\n        html: '<div id=\"root\"></div>',\r\n        css: '#root{\\n\\tcolor: red;\\n}\\nh1{\\n\\tcursor: pointer;\\n\\tuser-select: none;\\n}',\r\n        // javascript: \"const name = 'world'; \\n\\nReactDOM.render(\\n\\t<h1>Привет, {name}!</h1>, \\n\\tdocument.getElementById('root')\\n);\"\r\n        javascript: \"const name = 'world';function App(){\\n\\tconst [count, setCount] = React.useState(0);\" +\r\n                    \"\\n\\treturn <h1 onClick={()=>setCount(count+1)}>Привет, {name} {count}!</h1>;\\n}\\n\\nReactDOM.render(\\n\\t<App/>,\\n\\tdocument.getElementById('root')\\n);\"\r\n    },\r\n]","/**\r\n * initialize global funcs in the sandbox\r\n * \r\n * (обработчики событий, назначенных в атрибутах, должны быть глобальными. Назначаем их глобальными здесь)\r\n * \r\n * @param {*} code \r\n * @returns \r\n */\r\nexport function generateGlobalInintializer(code) {\r\n\r\n    let globalInit = (code.match(/function ([\\w\\d_]+)\\s?\\(/gm) || [])\r\n        .map(it => it.split(' ')[1].replace('(', '').trim())\r\n        .map(it => 'globalThis.' + it + ' = ' + it).join(';\\n');\r\n\r\n    return globalInit;\r\n}\r\n\r\n\r\nexport const isPaired = (/** @type {string} */ tag) => !~['link'].indexOf(tag);","export const html = (/** @type {ReadonlyArray<string>} */ text, /** @type {any[]} */ ...args) => text.reduce((p, n, i) => p + args[i - 1] + n);","//@ts-check\r\n\r\nimport { html } from \"./../utils/linter\";\r\n\r\n\r\n// HTMLElement\r\nexport class ChoiceMenu extends HTMLElement {\r\n\r\n    itemStyle = ' \\\r\n        color: white; \\\r\n        background-color: #666; \\\r\n        padding: 0.1em 1em 0.1em 2em; \\\r\n        margin-top: 1px; \\\r\n        text-align: right; \\\r\n        position: relative; '\r\n\r\n\r\n    /** selected element\r\n     * @type {HTMLElement}\r\n     */\r\n    selectedElement = null;\r\n\r\n    /** checked mark // only for external slot //\r\n     * @type {HTMLElement}\r\n     */\r\n    checkedElement = null;\r\n\r\n    /** ul\r\n     * @type {HTMLUListElement}\r\n     */\r\n    rootElement = null;\r\n\r\n    /** selected info\r\n     * @type {{id: string, metaId: string, value: string}}\r\n     */\r\n    checkInfo = null;\r\n\r\n    /// \r\n    //@ts-ignore\r\n    itemInitialize = (/** @type {HTMLLIElement} */ el) => ((el.onclick = (/** @type {Event} */ e) => this.selectedChanged(e)), el.style = this.itemStyle)\r\n\r\n    // get rootElement() { return this._rootElement; };\r\n    // set rootElement(v) {\r\n    //     console.log(v);\r\n    //     this._rootElement = v;\r\n    // }\r\n\r\n    \r\n    /** \r\n     * @deprecated\r\n     * @type number\r\n     */\r\n    // @ts-ignore    \r\n    get selectedIndex() {\r\n        let index = [].slice.call(this.rootElement.querySelectorAll('li')).indexOf(this.rootElement.querySelector('.selected'));\r\n        return index;\r\n    };\r\n    \r\n\r\n    /**\r\n     * @type string\r\n     */\r\n    // @ts-ignore\r\n    get selectedItem() {\r\n        //@ts-ignore\r\n        // return (this.rootElement.querySelector('.selected') || {}).innerText\r\n        return this.selectedElement.innerText;\r\n    };\r\n\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        /// base vars\r\n\r\n        //@ts-ignore\r\n        const rootElement = document.getElementById('choice-menu').content.cloneNode(true);\r\n        const shadowRoot = this.attachShadow({ mode: 'open' }).appendChild(rootElement);\r\n\r\n\r\n        // tactic vars\r\n\r\n        //\r\n        let menuElement = this.rootElement = this.shadowRoot.querySelector('ul');\r\n\r\n\r\n        // initialization event\r\n        const self = this; this.shadowRoot.addEventListener(\"slotchange\", function (event) {\r\n            //@ts-ignore\r\n            [menuElement] = [self.rootElement] = event.target.assignedElements();\r\n            self.checkedElement = self.shadowRoot.querySelector('.checked');\r\n            [].slice.call(self.rootElement.querySelectorAll('li')).forEach(self.itemInitialize);\r\n        });\r\n\r\n\r\n        // other events:                    \r\n        this.addEventListener('opened', () => this.pickItem(this.selectedElement))\r\n        this.addEventListener('click', this.visibleChanged);\r\n\r\n\r\n        /// only default slot:\r\n        this.rootElement.addEventListener('click', this.selectedChanged)\r\n    }\r\n\r\n\r\n    ///\r\n    visibleChanged() {\r\n\r\n        const self = this;\r\n        const opened = this.rootElement.classList.contains('active');\r\n\r\n        setTimeout(\r\n            () => {\r\n                self.rootElement.classList.toggle('active');\r\n                setTimeout(() => self.checkedElement && self.checkedElement.classList.toggle('active'), +!opened * 200)\r\n            },\r\n            +opened * 150\r\n        );\r\n\r\n        this.dispatchEvent(new CustomEvent(opened ? 'closed' : 'opened', { detail: null }))\r\n    }\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {HTMLElement} element \r\n     */\r\n    pickItem(element) {\r\n        setTimeout(() => {\r\n            // console.log(this.checkedElement);\r\n\r\n            this.checkedElement.style.top = element.offsetTop + this.offsetHeight + 2 + 'px'\r\n            this.checkedElement.style.right = this.rootElement.offsetWidth - (16 * 4) + 5 + 'px';  // ? \r\n        })\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * @param {Event} event\r\n     */\r\n    selectedChanged(event) {\r\n        //@ts-expect-error\r\n        if (event.target.tagName === 'li'.toUpperCase()) {\r\n            \r\n            (this.selectedElement || (this.selectedElement = this.rootElement.querySelector('.selected'))) && this.selectedElement.classList.remove('selected');\r\n            //@ts-expect-error\r\n            (this.selectedElement = event.target).classList.add('selected');\r\n\r\n            //@ts-expect-error\r\n            this.checkedElement && this.pickItem(event.target)\r\n\r\n            this.dispatchEvent(new CustomEvent(\"selected_changed\", {\r\n                detail: this.checkInfo = {\r\n                    //@ts-expect-error\r\n                    id: event.target.id,\r\n                    //@ts-expect-error\r\n                    metaId: event.target.dataset.id,\r\n                    //@ts-expect-error\r\n                    value: event.target.innerText,\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * static constructor\r\n     */\r\n    static __contructor = (function () {\r\n        \r\n        document.body.insertAdjacentHTML('afterbegin', html`\r\n            <template id=\"choice-menu\">\r\n                <style>\r\n                    /* slotted need be styled inline */\r\n                    ::slotted(li),\r\n                    li {                \r\n                        color: white;\r\n                        background-color: #666;\r\n                        padding: 0.1em 1em 0.1em 2em;\r\n                        margin-top: 1px;\r\n                        position: relative;\r\n                    }\r\n\r\n                    ::slotted(ul), ul{\r\n                        margin: 0;\r\n                        position: absolute;\r\n                        top: 100%;\r\n                        right: .1em;\r\n                        width: max-content;\r\n                        list-style-type: none;\r\n                        transition: .3s;\r\n                        /* display: none; */\r\n                        \r\n                        overflow: hidden;\r\n                        height: 0;\r\n                    }\r\n\r\n                    /* стили применяемые к самому  my-paragraph*/\r\n                    :host {\r\n                        margin: 0em;\r\n                        /* margin-right: 2em; */\r\n                        position: relative;\r\n                    }\r\n\r\n                    ::slotted(.active), .active{\r\n                        /*display: block !important;*/\r\n\r\n                        height: 6em;                        \r\n                        display: block !important;\r\n                    }\r\n\r\n                    .selected::after, .checked{\r\n                        content: '';\r\n                        background: url(static/images/check_mark.svg) no-repeat;\r\n                        background-size: contain;\r\n                        width: 1em;\r\n                        height: 2em;\r\n                        position: absolute;\r\n                        left: .5em;\r\n                        top: 0.15em;\r\n                    }\r\n\r\n                    .checked{\r\n                        left: auto;\r\n                        /* opacity: 0; */\r\n                        /* transition: opacity .3s ease .3s; */\r\n                        display: none; \r\n                        z-index: 5;\r\n                    }\r\n\r\n                </style>\r\n\r\n                <!-- <slot name=\"text\">My default text</slot> -->\r\n                <div class=\"checked\"></div>\r\n                <slot>\r\n                    <ul>\r\n                        <li class=\"selected\">item 1</li>\r\n                        <li>item 2</li>\r\n                    </ul>\r\n                </slot>\r\n\r\n            </template>\r\n        `);\r\n\r\n    })()\r\n\r\n}\r\n\r\n\r\n","export const modes = [\r\n    'html',\r\n    'css',\r\n    'javascript',\r\n    // 'typescript',\r\n]","// @ts-check\r\n\r\nimport { babelCompiler, compilers } from \"./features/compiler\";\r\nimport { generateGlobalInintializer, isPaired } from \"./utils/page_generator\";\r\nimport { commonStorage, getLangMode } from './utils/utils';\r\n\r\n// TODO REMOVE:\r\nimport { ChoiceMenu } from \"./ui/ChoiceMenu\";\r\nimport { modes as baseModes } from \"./features/base\";\r\n\r\n\r\nexport { compilers, babelCompiler };\r\n\r\n/**\r\n * @type {{editors: any[], iframe: any, curUrl: any, fileStorage: object, modes?: [object?, object?, object?]}}\r\n */\r\nexport const playgroundObject = {\r\n    editors: [],\r\n    iframe: null,\r\n    curUrl: null,\r\n    fileStorage: { _active: 0 },\r\n    modes: null\r\n}\r\n\r\n\r\n/**\r\n * @param {{ [x: string]: string; }} [attrs]\r\n */\r\nfunction createHtml({ body, style, script, link }, attrs) {\r\n\r\n    // console.log(arguments);\r\n\r\n    const htmlStruct = {\r\n        html: {\r\n            head: {\r\n                style,\r\n                script,\r\n                link\r\n            },\r\n            body\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {{ [x: string]: any; html?: { head: { [x: string]: string; script: string; }; body: any; }; }} nodeStruct\r\n     */\r\n    function nodeCreate(nodeStruct) {\r\n\r\n        let html = '';\r\n        for (const key in nodeStruct) {\r\n\r\n            let _attrs = attrs[key] || '';\r\n            let content = typeof nodeStruct[key] === typeof nodeStruct\r\n                ? nodeCreate(nodeStruct[key])\r\n                : (nodeStruct[key] || '');\r\n\r\n            html += content !== null\r\n                ? ('<' + key + _attrs + '>' + content + '</' + key + '>')\r\n                : ('<' + key + _attrs + '/>');\r\n\r\n        }\r\n        return html;\r\n    }\r\n\r\n    return nodeCreate(htmlStruct);\r\n}\r\n\r\n\r\n/**\r\n * \r\n * TODO: option {simplestBundler, fileStore}\r\n * \r\n * @param {string} [prevUrl]\r\n * @param {string[]} [additionalScripts]\r\n * @param {string} [scriptType]\r\n * @param {object} [options]\r\n * @returns {[HTMLElement, string]}\r\n */\r\nexport function createPage(prevUrl, additionalScripts, scriptType, options) {    \r\n    \r\n    // alert(99)\r\n    if ((playgroundObject.fileStorage || window['fileStore']) && playgroundObject.editors) {\r\n        const fileStorage = playgroundObject.fileStorage || window['fileStore'];\r\n        let activeTab = document.querySelector('.tabs .tab.active');\r\n        // update current tab content:\r\n\r\n        if (fileStorage) {\r\n            fileStorage[fileStorage.innerText] = playgroundObject.editors[2].getValue()\r\n        }        \r\n    }\r\n    \r\n    let appCode = (playgroundObject.fileStorage || window['fileStore'] || {})['app.js'] || playgroundObject.fileStorage[undefined + ''];\r\n    // console.log('appCode');\r\n\r\n\r\n    const langMode = getLangMode(appCode);\r\n    if (langMode) {\r\n\r\n        var currentLang = playgroundObject.modes && playgroundObject.modes[2] && playgroundObject.modes[2][langMode];\r\n\r\n        if (currentLang.src && currentLang.target === 'self') {\r\n            let scriptID = currentLang.src.split('/').pop().split('.').shift();\r\n            let originScript = document.getElementById(scriptID)\r\n            if (!originScript) {\r\n                originScript = document.createElement('script');\r\n                //@ts-ignore\r\n                originScript.src = currentLang.src;\r\n                originScript.onload = () => {\r\n\r\n                    // createPage(prevUrl, additionalScripts, scriptType, options);\r\n                    waiting.parentElement.removeChild(waiting);\r\n                }\r\n                document.head.appendChild(originScript);\r\n                let waiting = document.querySelector('.view').appendChild(document.createElement('div'))\r\n                waiting.innerText = 'Ожидание...'\r\n                waiting.id = 'view__waiting';                \r\n                // return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    let buildJS = (/** @type {string} */ code) => {        \r\n\r\n        // convert to js:   \r\n\r\n\r\n        if (window['simplestBundler']) {\r\n            code = window['simplestBundler'].default(code, playgroundObject.fileStorage || window['fileStore']);\r\n            console.log('build...');\r\n        }\r\n        else {\r\n            console.warn('bundler is absent');\r\n            // alert('Warn/ look logs')\r\n        }        \r\n\r\n        // ts transpilation:\r\n        if (currentLang) {\r\n            code = currentLang.compileFunc(code);\r\n        }\r\n\r\n        // \r\n        let globalReinitializer = generateGlobalInintializer(code)\r\n\r\n        return 'window.addEventListener(\"DOMContentLoaded\", function(){' + code + '\\n\\n' + globalReinitializer + '\\n});';\r\n    }\r\n\r\n\r\n    // при concat все равно скопируется\r\n    // additionalScripts = additionalScripts.slice()\r\n    \r\n    \r\n    const editors = playgroundObject.editors;\r\n    const baseTags = ['body', 'style', 'script'];\r\n    const attrs = {\r\n        script: scriptType\r\n    }\r\n\r\n\r\n    console.log(777777777777777789);\r\n\r\n    // compilerSubModes дополняем:\r\n    if (playgroundObject.modes && playgroundObject.modes.length) playgroundObject.editors.forEach((editor, i) => {\r\n\r\n        /**\r\n         * @type ChoiceMenu\r\n         */\r\n        let modeMenu = editor.container.querySelector('choice-menu');\r\n        if (modeMenu) {\r\n            /**\r\n             * @type {{src: string|string[], target?: {tag: string, attributes: string, outline?: true}}}\r\n             */\r\n            let actualMode = playgroundObject.modes[i][modeMenu.selectedElement.innerText]\r\n            if (actualMode) {                \r\n                additionalScripts = (additionalScripts || []).concat(typeof actualMode.src === 'string' ? [actualMode.src] : actualMode.src)\r\n            }\r\n            \r\n            if (actualMode && actualMode.target) {\r\n                if (actualMode.target.tag) baseTags[i] = actualMode.target.tag;\r\n                if (actualMode.target.outline) {\r\n                    // create link\r\n                    let blob = new Blob([editors[i].getValue()], { type: 'text/' + baseModes[i] });\r\n                    let link = URL.createObjectURL(blob);\r\n                    actualMode.target.attributes = actualMode.target.attributes.replace('{}', link)\r\n                }\r\n                if (actualMode.target.attributes) attrs[baseTags[i]] = actualMode.target.attributes;\r\n            }\r\n        }\r\n    })\r\n\r\n    \r\n    \r\n    let htmlContent = baseTags.reduce((acc, el, i, arr) => (\r\n        (\r\n            acc[el] = i < 2\r\n                ? isPaired(el) ? editors[i].getValue() : null\r\n                : buildJS(appCode || editors[i].getValue())\r\n        ), acc),\r\n        {}\r\n    );\r\n\r\n    let optionalScripts = ''\r\n    if (additionalScripts && additionalScripts.length) {\r\n        for (let i = 0; i < additionalScripts.length; i++) {\r\n            // htmlContent['body'] += '<script src=\"' + additionalScripts[i] + '\"></script>';\r\n            optionalScripts += '<script src=\"' + additionalScripts[i] + '\"></script>';\r\n        }\r\n    }\r\n    // console.log(htmlContent);    \r\n\r\n\r\n    // @ts-ignore\r\n    console.log('html');\r\n    let html = createHtml(htmlContent, attrs);\r\n\r\n    console.log(optionalScripts);\r\n    html = html.replace('</head>', optionalScripts + '</head>');\r\n    html = html.replace('<head>', '<head><meta charset=\"UTF-8\">');\r\n\r\n    let file = new Blob([html], { type: 'text/html' });\r\n\r\n    prevUrl && URL.revokeObjectURL(prevUrl);\r\n    let url = URL.createObjectURL(file);\r\n\r\n    let view = document.querySelector('.view');\r\n    playgroundObject.iframe && (playgroundObject.iframe.parentElement === view) && view.removeChild(playgroundObject.iframe);\r\n    // view.innerHTML = '';    \r\n\r\n    let frame = document.createElement('iframe');\r\n    frame.src = url;\r\n    view.appendChild(frame)\r\n\r\n    return [frame, url]\r\n}\r\n\r\n\r\n/**\r\n * // @param {(url: string) => [HTMLIFrameElement, string]} [createPageFunc]\r\n * @param {boolean} jsxMode\r\n * ///! param {number} compilerMode\r\n * @param {string[]} compilerModes - \r\n * \r\n * TODO: options: {storage (localStorage|sessionStorage), fileStore}\r\n */\r\nexport function webCompile(jsxMode, compilerModes) {\r\n\r\n    console.log('compile');\r\n\r\n    // [iframe, curUrl] = createPage(curUrl);\r\n    // console.log(iframe);\r\n\r\n\r\n\r\n    let iframe = playgroundObject.iframe,\r\n        editors = playgroundObject.editors;\r\n\r\n    const fileStorage = playgroundObject.fileStorage || window['fileStore'];\r\n    //@ts-ignore\r\n    if (Object.keys(fileStorage || {}).length) fileStorage[document.querySelector('.tabs .tab.active').innerText] = editors[2].getValue()\r\n\r\n\r\n\r\n\r\n    if (iframe.contentDocument && !jsxMode && false) {\r\n        \r\n        iframe.contentDocument.body.innerHTML = editors[0].getValue()\r\n        iframe.contentDocument.head.querySelector('style').innerHTML = editors[1].getValue()\r\n\r\n        let lastScript = [].slice.call(iframe.contentDocument.querySelectorAll('script')).pop();\r\n        lastScript && lastScript.parentElement.removeChild(lastScript);\r\n\r\n        // let lastScripts = iframe.contentDocument.querySelectorAll('script');\r\n        // lastScripts && lastScripts.length && Array.prototype.slice.call(lastScripts).forEach((/** @type {{ parentElement: { removeChild: (arg: any) => void; }; }} */ element) =>\r\n        // {\r\n        //     element.parentElement.removeChild(element);\r\n        // });\r\n        \r\n        let script = iframe.contentDocument.createElement('script');\r\n        \r\n        console.log(jsxMode)\r\n        console.log(compilerModes);\r\n\r\n        if (jsxMode) {\r\n            \r\n            // for (let i = 0; i < compilerMode.length; i++) {\r\n            //     const link = compilerMode[i];\r\n\r\n            //     let jsxCompiler = iframe.contentDocument.createElement('script');\r\n            //     jsxCompiler.src = link;\r\n            //     iframe.contentDocument.body.appendChild(jsxCompiler);\r\n            // }\r\n\r\n            script.type = \"text/babel\";\r\n        }\r\n\r\n        let code = playgroundObject.fileStorage['app.js'] || editors[2].getValue();\r\n\r\n        let globalReinitializer = generateGlobalInintializer(code)\r\n\r\n        script.innerHTML = '(function(){' + code + ';\\n\\n' + globalReinitializer + '\\n})()'\r\n        iframe.contentDocument.body.appendChild(script)\r\n\r\n        // iframe.contentDocument.head.querySelector('script').innerHTML = editors[2].getValue()\r\n    }\r\n    else {\r\n        // console.log(compilerMode);\r\n        // console.log(Object.values(compilers)[compilerMode]);\r\n        // let [iframe, curUrl] = createPage(playgroundObject.curUrl, Object.values(compilers)[compilerMode], jsxMode ? babelCompiler.mode : undefined);\r\n        let [iframe, curUrl] = createPage(playgroundObject.curUrl, compilerModes, jsxMode ? babelCompiler.mode : undefined);\r\n        playgroundObject.iframe = iframe;\r\n        playgroundObject.curUrl = curUrl;\r\n    }\r\n\r\n\r\n\r\n\r\n    let compiler = Number.parseInt((commonStorage || localStorage).getItem('mode') || '0');\r\n\r\n    // just sandbox feature:\r\n    (commonStorage || localStorage).setItem(compiler + '__html', editors[0].getValue());\r\n    (commonStorage || localStorage).setItem(compiler + '__css', editors[1].getValue());\r\n    (commonStorage || localStorage).setItem(compiler + '__javascript', editors[2].getValue());\r\n    \r\n\r\n\r\n    let modulesStore = {};\r\n\r\n\r\n    if (fileStorage && Object.keys(fileStorage).length > 1) {\r\n        \r\n        for (let i = 0; i < Object.keys(fileStorage).length; i++) {\r\n            const fileName = Object.keys(fileStorage)[i];\r\n            if (fileName.startsWith('_')) continue;\r\n            modulesStore[fileName] = fileStorage[fileName];\r\n        }\r\n\r\n        // js multitabs:\r\n        (commonStorage || localStorage).setItem('_modules', JSON.stringify(modulesStore));\r\n        console.log('save modules...');\r\n    }\r\n\r\n    // document.getElementById('compiler_mode')\r\n}\r\n\r\n\r\n\r\n","// @ts-check\r\n\r\nimport { createPage, playgroundObject } from \"../pageBuilder\";\r\n\r\n\r\n/**\r\n * @param {{currentTarget: any;}} event\r\n * @param {string | any[]} [additionalScripts]\r\n * @param {string} [scriptType]\r\n */\r\nexport function expand(event, additionalScripts, scriptType) {\r\n\r\n    let [iframe, curUrl] = createPage(playgroundObject.curUrl, additionalScripts, scriptType);\r\n\r\n    playgroundObject.iframe = iframe;\r\n    playgroundObject.curUrl = curUrl;\r\n\r\n    const view = document.querySelector('.view');\r\n    // const view = event.currentTarget.parentElement;\r\n    // let iframe = view.querySelector('iframe');\r\n    let wrapper = document.querySelector('.expanded')\r\n\r\n    // @ts-ignore\r\n    if (wrapper && wrapper.style.display == 'none') {\r\n        // @ts-ignore\r\n        wrapper.style.display = 'block';\r\n        wrapper.innerHTML = '';\r\n    }\r\n    else if(!wrapper) {\r\n        wrapper = document.body.appendChild(document.createElement('div'));\r\n        wrapper.className = 'expanded';\r\n        // wrapper.tabIndex = '0';\r\n        // wrapper.onkeydown = function escape(event) { }        \r\n    }\r\n    // else if (wrapper) wrapper.innerHTML = '';\r\n    // wrapper.appendChild(iframe.cloneNode(true));\r\n    \r\n    wrapper.appendChild(iframe);    \r\n\r\n    let collapseButton = wrapper.appendChild(event.currentTarget);\r\n    collapseButton.classList.add('down');\r\n    collapseButton.dataset.title = 'Collapse'\r\n\r\n    collapseButton.onclick = function (event) {\r\n\r\n        view.appendChild(iframe);\r\n        view.appendChild(collapseButton);\r\n\r\n        collapseButton.classList.remove('down');\r\n        collapseButton.dataset.title = 'Expand'\r\n        collapseButton.onclick = expand;\r\n        // @ts-ignore\r\n        wrapper.style.display = 'none';\r\n    }\r\n}\r\n","// https://stackoverflow.com/questions/58377763/how-do-i-programmatically-add-a-snippet-in-ace-editor\r\n// https://prog.world/implementing-code-completion-in-ace-editor/\r\n\r\n//@ts-check\r\n\r\n\r\n\r\nexport let domFuncs = {\r\n    style: null,\r\n    color: null,\r\n\r\n    // ReactDOM: {\r\n    //     desc: 'only for react lib namespace',\r\n    //     return: 'namespace'\r\n    // },\r\n    render: {\r\n        desc: 'render preact/react component to html DOM',\r\n        sign: {\r\n            'component': {\r\n                desc: 'react/preact component',\r\n                type: 'VNode<any>'\r\n            },\r\n            parent: {\r\n                desc: 'app root inside DOM tree',\r\n                type: 'HTMLElement'\r\n            }\r\n        },\r\n        return: 'HTMLElement'\r\n    },\r\n\r\n\r\n    useRef: {\r\n        desc: 'get a reference to a DOM node inside a functional components',\r\n        sign: {\r\n            initialValue: {\r\n                desc: 'initial value'\r\n            }\r\n        },\r\n        'return': 'Ref<T>'\r\n    },\r\n    useState: {\r\n        desc: 'assigns the starting state value, and returns an array of two elements',\r\n        sign: {\r\n            initialState: {\r\n                type: '<T>(initialState: T | (() => T))',\r\n                desc: 'initial state'\r\n            }\r\n        },\r\n        'return': '[T, StateUpdater<T>]'\r\n    },\r\n    useEffect: {\r\n        desc: '',\r\n        sign: {\r\n            effect: {\r\n                type: 'EffectCallback',\r\n                desc: 'callback function'\r\n            },\r\n            inputs: {\r\n                type: 'Inputs?',\r\n                desc: ''\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n\r\n    // Array and string methods: \r\n\r\n    indexOf: '',\r\n    from: '',\r\n    slice: '',\r\n\r\n\r\n    // snippets:\r\n\r\n    qf: {\r\n        desc: '',\r\n        value: '[].slice.call(document.querySelector(${1:selector})).forEach((${2:elem}) => {\\n\\t${3}\\n})'\r\n    },\r\n    qm: {\r\n        desc: '',\r\n        value: '[].slice.call(document.querySelector(${1:selector})).map(elem => {\\n\\t${2}\\n})'\r\n    },\r\n\r\n    // qff: {\r\n    //     desc: '',\r\n    //     value: '[].slice.call(document.querySelector(${1:selector}).filter(elem => elem.${2:innerText} == ${3}).forEach(elem => {\\n\\t${4}\\n})'\r\n    // },\r\n    // qfm: {\r\n    //     desc: '',\r\n    //     value: '[].slice.call(document.querySelector(${1:selector}).filter(elem => elem.${2}).map(elem => {\\n\\t${3}\\n})'\r\n    // },\r\n\r\n    fore: {\r\n        desc: 'forEach',\r\n        origin: 'forEach',\r\n        value: 'forEach((${1:elem}, ${2:i}, ${3:array}) => {\\n\\t${4}\\n})',\r\n        sign: {\r\n            callback: { type: ' (elem, i, array) => void', desc: 'функция обратного вызова' },\r\n            context: { type: ' this?', desc: 'контекст' }\r\n        }\r\n    },\r\n    log: {\r\n        desc: 'console.log',\r\n        value: 'console.log(${1})',\r\n        sign: {\r\n            message: {\r\n                type: 'string',\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    // DOM:\r\n\r\n    target: null,\r\n    classList: null,\r\n    offsetHeight: null,\r\n    offsetWidth: null,\r\n    getComputedStyle: '',\r\n\r\n    innerText: null,\r\n\r\n    appendChild: '',\r\n    insertBefore: '',\r\n    createElement: '',\r\n\r\n    closest: '',\r\n    querySelectorAll: '',\r\n    getElementById: {\r\n        desc: '',  //  'Найти элемент по его ID',\r\n        'return': 'HTMLElement?'\r\n    },\r\n    \r\n    querySelector: {\r\n        desc: 'get element by selector',\r\n        sign: {\r\n            'selector': {\r\n                type: 'string',\r\n                desc: 'element selector'\r\n            }\r\n        },\r\n        'return': 'HTMLElement'\r\n    },\r\n\r\n    // Events: \r\n\r\n    addEventListener: {\r\n        desc: '',\r\n        sign: {\r\n            'selector': {\r\n                type: 'string',\r\n                desc: 'element selector'\r\n            }\r\n        },\r\n    },\r\n\r\n    onload: '',\r\n    onclick: '',\r\n    oninput: '',\r\n    onkeydown: '',\r\n    onchange: '',\r\n\r\n    onmousedown: '',\r\n    onmousemove: '',\r\n    onmouseover: '',\r\n    onmouseout: '',\r\n}\r\n\r\n\r\nlet wordList = Object.keys(domFuncs);\r\n\r\nexport let keyWords = wordList.map(\r\n    function (word) {\r\n        const metaInfo = domFuncs[word];\r\n        return {\r\n            caption: word,\r\n            value: word + (undefined ? '()' : ''),  // для методов без параметров (таких-то и не могу даже вспомнить)\r\n            // meta: \"local\",\r\n            // meta: \"static\",\r\n\r\n            // snippet: 'This2(${1})',\r\n\r\n            // (metaInfo && metaInfo.sign) - только для описанных сигнатурой\r\n            snippet: metaInfo !== null ? (metaInfo.value || (word.startsWith('on') ? (word + ' = e => {${1}}') : ((metaInfo.value || word) + '(${1})'))) : undefined,\r\n\r\n            type: (metaInfo && metaInfo.sign) ? \"snippet\" : 'static',\r\n            meta: (metaInfo !== null && !word.startsWith('on')) ? (metaInfo.value ? 'function' : 'function') : 'prop',\r\n\r\n            // completer: {\r\n            //     insertMatch: function (editor, data) {\r\n            //         editor.completer.insertMatch({ value: data.value })\r\n            //     }\r\n            // }\r\n\r\n            // inputParameters: { 1: '?' },\r\n        };\r\n    }\r\n)\r\n\r\n\r\n\r\n/**\r\n * @param {{\r\n *  completers: { \r\n *      getCompletions: (editor: any, session: any, pos: any, prefix: any, callback: any) => void;\r\n *      getDocTooltip: (item: {docHTML: string;caption: string;}) => void;\r\n *   }[];\r\n * }} editor : ace editor instanse\r\n * @param {{ hint?: {desc: string, origin?: string, sign: {[x: string]: {type: string, description: string}}}; name: string; template?: string; meta?: 'function'|'property'; }} keyWordInfo\r\n */\r\nexport function autocompleteExpand(editor, keyWordInfo) {\r\n\r\n    let hint = keyWordInfo.hint;\r\n    \r\n    editor.completers.push({\r\n        getCompletions: function (editor, session, pos, prefix, callback) {\r\n            // prefix !== '.' ? [] :\r\n            callback(null, [{\r\n                caption: keyWordInfo.name,\r\n                value: keyWordInfo.name,\r\n                snippet: keyWordInfo.template,\r\n                meta: keyWordInfo.meta || '',\r\n            }]);\r\n        },\r\n        getDocTooltip: function (/** @type {{ docHTML: string; caption: string; }} */ item) {\r\n            \r\n            if (hint) {\r\n                let args = Object.keys(hint.sign || {}).map(arg => arg + ': ' + hint.sign[arg].type).join(', ');\r\n                item.docHTML = '<h5>' + (hint.origin || item.caption) + '(' + args + ') : ' + hint['return'] + '</h5><hr>' + '<p>' + hint.desc + '</p>'\r\n                let argsDesc = ''\r\n                for (const key in hint.sign) {\r\n                    argsDesc += '<li><b>' + key + ':' + (hint.sign[key].type || 'any') + '</b> - ' + hint.sign[key].description\r\n                }\r\n                item.docHTML += '<ul>' + argsDesc + '</ul>'\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//! не используется !//\r\n\r\n\r\n\r\n// динамическое добавление сниппетов:\r\n\r\n\r\n// var ace = window['ace'];\r\n\r\n// export const registerSnippets = function (editor, session, mode, snippetText) {\r\n//     editor.setOptions({\r\n//         enableBasicAutocompletion: true,\r\n//         enableSnippets: true,\r\n//     })\r\n\r\n//     var snippetManager = ace.require('ace/snippets').snippetManager\r\n\r\n//     var id = session.$mode.$id || ''\r\n//     var m = snippetManager.files[id]\r\n\r\n//     m.scope = mode\r\n//     m.snippetText = snippetText\r\n//     m.snippet = snippetManager.parseSnippetFile(snippetText, m.scope)\r\n\r\n//     snippetManager.register(m.snippet, m.scope)\r\n// }\r\n\r\n// export const createSnippets = snippets =>\r\n//     (Array.isArray(snippets) ? snippets : [snippets])\r\n//         .map(({ name, code }) =>\r\n//             [\r\n//                 'snippet ' + name,\r\n//                 code\r\n//                     .split('\\n')\r\n//                     .map(c => '\\t' + c)\r\n//                     .join('\\n'),\r\n//             ].join('\\n')\r\n//         )\r\n//         .join('\\n')","// @ts-check\r\n\r\nimport { default as extend } from 'emmet';\r\n\r\nimport { debounce } from \"./utils/utils\";\r\nimport { expand } from './features/expantion';\r\nimport { defaultValues } from './features/compiler';\r\nimport { domFuncs, keyWords } from './utils/autocompletion';\r\nimport { playgroundObject } from './pageBuilder';\r\n\r\n\r\n\r\n/**\r\n * \r\n * TODO: options {\r\n *  + fileStore\r\n * }\r\n * \r\n * @param {{require: (arg: string) => {(): any;new (): any;Range: any;};edit: (arg: any) => any;}} ace\r\n * @param {{ compileFunc: Function; controlSave?: (ev: object, compileFunc: Function) => void; storage?: Storage, modes?: object[]}} editorOptions\r\n * @param {string[]} modes\r\n * @param {string | number} syntax\r\n * @param {?[string?, string?, string?]} [values]\r\n */\r\nexport default function initializeEditor(ace, editorOptions, modes, syntax, values) {\r\n\r\n    const webCompile = editorOptions.compileFunc;\r\n\r\n    const Range = ace.require('ace/range').Range;\r\n    const delay = 500;\r\n    const autoPlay = debounce(() => setTimeout(webCompile, delay), delay);\r\n    const fontSize = '.9em';\r\n\r\n    values = values || [];\r\n\r\n\r\n    let cssKeyWords = [\"red\", \"green\", \"blue\", 'gray', 'lightgray', 'lightblue', 'orange', 'white', 'black', 'none'];\r\n    // cssKeyWords = cssKeyWords.concat(['div', 'input', 'select'])\r\n\r\n\r\n    let editors = [].slice.call(document.querySelectorAll('.editor')).map((/** @type {{ id: any; }} */ element, /** @type {number} */ i, /** @type {any[]} */ arr) =>\r\n    {\r\n\r\n        let editor = ace.edit(element.id);        \r\n        editor.setTheme(\"ace/theme/monokai\");\r\n        editor.session.setMode(\"ace/mode/\" + modes[i]);\r\n        \r\n        let value = values[i] || (editorOptions.storage || localStorage).getItem(syntax + '__' + modes[i]) || defaultValues[syntax][modes[i]];\r\n        if (value) {\r\n            editor.session.setValue(value)\r\n        }\r\n\r\n        const allCommands = editor.commands.byName;\r\n\r\n\r\n        // editor.commands.bindKey(\"F9\", null);\r\n                \r\n        editor.commands.removeCommand(allCommands.removeline)        \r\n        // allCommands.removeline.bindKey = { win: \"Ctrl-X\", mac: \"Cmd-X\" }\r\n        // editor.commands.addCommand(allCommands.removeline)\r\n        // // editor.commands.addCommand(allCommands.cut_or_delete)\r\n\r\n        allCommands.copylinesdown.bindKey = { win: \"Ctrl-D\", mac: \"Cmd-D\" }\r\n        editor.commands.addCommand(allCommands.copylinesdown);\r\n        \r\n        \r\n        (i < 2) && editor.textInput.getElement().addEventListener('input', autoPlay);\r\n\r\n        editor.textInput.getElement().addEventListener('keydown', function (/** @type {{ ctrlKey: any; keyCode: number; key: string; preventDefault: () => void; }} */ event)\r\n        {\r\n\r\n            // console.log(event);\r\n\r\n            (event.ctrlKey && event.keyCode === 190) && (arr[i + 1] || arr[0]).querySelector('textarea').focus();\r\n            (event.ctrlKey && event.key === 'ArrowUp') && expand({ currentTarget: document.querySelector('.expand')})            \r\n            if ( event.key === 'F9')      // ctrl+s\r\n            {\r\n                event.preventDefault(), webCompile();\r\n            }\r\n            else if (event.ctrlKey && event.keyCode === 83) {\r\n                \r\n                console.log(editorOptions);\r\n                // event.preventDefault(), (editorOptions.controlSave || webCompile)();\r\n\r\n                event.preventDefault(), (editorOptions.controlSave ? editorOptions.controlSave(event, webCompile) : webCompile());\r\n            }\r\n        })\r\n\r\n        if (i === 0 && window.outerWidth > 600) {\r\n\r\n            \r\n            editor.setOptions(\r\n                {\r\n                    enableBasicAutocompletion: true,\r\n                    enableSnippets: true,\r\n                    enableLiveAutocompletion: true,\r\n                    fontSize,\r\n                    // placeholder: \"Enter your \" + modes[i] + \" Code\",\r\n                    // enableEmmet: true,   //                       don't work   \r\n                }\r\n            );\r\n\r\n            editor.completers = editor.completers.slice();\r\n\r\n\r\n            const cursorText = editor.container.querySelector('textarea')\r\n            cursorText.addEventListener('keydown', function tabHandler(/** @type {{ key: string; }} */ e) {                \r\n                if (e.key === 'Tab'){\r\n                    if (editor.completer) {\r\n                        editor.completer.keyboardHandler.removeCommand(editor.completer.keyboardHandler.commands.Tab);\r\n                        cursorText.removeEventListener('keydown', tabHandler)\r\n                        console.log('removing tab hot key from autocomplete popup');\r\n                    }\r\n                }\r\n            })\r\n\r\n            editor.commands.addCommand(  // [ indent,\r\n                \r\n                {\r\n                    name: \"extend\",\r\n                    exec: function () {\r\n                        let cursor = editor.getCursorPosition();\r\n                        let row = cursor.row;\r\n\r\n                        // editor.completer && editor.completer.keyboardHandler.removeCommand(editor.completer.keyboardHandler.commands.Tab)\r\n\r\n                        if (cursor.column == editor.session.getLine(row).length) {\r\n                            \r\n                            let line = editor.session.getLine(row);\r\n                            \r\n                            let startChar = Math.max(line.lastIndexOf(' ') + 1, 0);\r\n                            let endChar = cursor.column;\r\n                            let range = new Range(row, startChar, row, endChar);\r\n\r\n                            let textRange = line.slice(startChar, endChar);\r\n                            let code = extend(textRange)\r\n                            // let text = editor.session.getValue();\r\n                            editor.session.replace(range, code)\r\n\r\n                            editor.moveCursorTo(row, !(textRange.startsWith('.') || textRange.startsWith('#'))\r\n                                ? startChar + code.length - textRange.length - 3\r\n                                : startChar + code.length - 6\r\n                            )\r\n\r\n                            return;\r\n                        }\r\n                        editor.indent();\r\n                    },\r\n                    bindKey: { win: 'Tab' }\r\n                }, //  expandSnippet ]\r\n                    \r\n                \r\n            );\r\n\r\n        }\r\n        else {  //  if (i)\r\n\r\n            editor.setOptions(\r\n                {\r\n                    enableBasicAutocompletion: true,\r\n                    enableSnippets: true,\r\n                    enableLiveAutocompletion: true,\r\n                    fontSize,\r\n                    // maxSize: Infinity\r\n                    \r\n                    // placeholder: \"Enter your \" + modes[i] + \" Code\",\r\n                    // enableEmmet: true        \r\n                }\r\n            );\r\n\r\n            // html (on width < 600)\r\n            if (!i) {\r\n                editor.completers = editor.completers.slice();\r\n                editor.completers.push({\r\n                    getCompletions: function htmlCompleter (editor, session, pos, prefix, callback) {                        \r\n                        callback(null,\r\n                            ['fill'].concat(cssKeyWords)\r\n                                .map(w => {\r\n                                    // editors[i].session.$mode.$highlightRules.$keywordList.push(w);\r\n                                    return {\r\n                                        caption: w,\r\n                                        value: w,\r\n                                        // snippet: '<' + w + '>',\r\n                                        meta: \"attribute\"\r\n                                    }\r\n                                })\r\n                                .concat(['svg', 'select', 'option'].map(w => {\r\n                                    return {\r\n                                        caption: '<' + w + '>',\r\n                                        value: w,\r\n                                        snippet: '<' + w + '>${1}</' + w + '>',\r\n                                        meta: \"tag\"\r\n                                    }\r\n                                })).concat(['input'].map(w => {\r\n                                    return {\r\n                                        caption: '<' + w + '>',\r\n                                        value: w,\r\n                                        snippet: '<' + w + '/>',\r\n                                        meta: \"tag\"\r\n                                    }\r\n                                }))\r\n                        )\r\n                    }\r\n                })                \r\n            }\r\n            // style\r\n            else if (i === +!!i) {\r\n\r\n                editor.commands.on(\"afterExec\", function (e) {\r\n                    console.log(e.command.name);\r\n                    if (e.command.name.toLowerCase() === 'return') {\r\n                        webCompile()\r\n                    }\r\n                    // if (e.command.name == \"insertstring\" && /^[\\w.]$/.test(e.args)) {\r\n                    //     editor.execCommand(\"startAutocomplete\")\r\n                    // }\r\n                })\r\n\r\n                const colorsCompleter = {                    \r\n                    getCompletions: function cssCompleter (editor, session, pos, prefix, callback) {\r\n                        // console.log(pos);                        \r\n                        callback(null, cssKeyWords.concat(['div', 'input', 'select']).map(\r\n                            function (word) {\r\n                                return {\r\n                                    caption: word,\r\n                                    value: word,\r\n                                    meta: \"static\"\r\n                                };\r\n                            }\r\n                        ));\r\n                    },\r\n                    // getDocTooltip: function (item) {\r\n                    //     if (item.type == \"snippet\" && !item.docHTML) {\r\n                    //         item.docHTML = [\r\n                    //             \"<b>\", lang.escapeHTML(item.caption), \"</b>\", \"<hr></hr>\",\r\n                    //             lang.escapeHTML(item.snippet)\r\n                    //         ].join(\"\");\r\n                    //     }\r\n                    // }\r\n                };\r\n\r\n                editor.completers = editor.completers.slice();\r\n                editor.completers.push(colorsCompleter)\r\n            }\r\n            // javascript:\r\n            else if(i === 2) {\r\n            \r\n\r\n                // AUTO COMPLETION:\r\n\r\n                const domCompleter = {\r\n                    getCompletions: function jsCompleter (editor, session, pos, prefix, callback) {                        \r\n                        // prefix !== '.' ? [] :\r\n                        console.log(pos);\r\n                        // editors[2].session.getLine(2).slice(0, 9).match(/([\\w\\d]+)\\.\\w+$/m)[1]\r\n                        // get object for autocompletion\r\n\r\n                        // let token = editor.session.getTokenAt(pos.row, pos.column)\r\n                        // if (token.type == 'string') {\r\n                        //     console.log('string token');\r\n                        // }\r\n                        \r\n                        callback(null, keyWords);\r\n                    },\r\n                    getDocTooltip: function (/** @type {{ docHTML: string; caption: string; }} */ item) {\r\n                        // item['type'] === 'snippet'\r\n                        if (!item.docHTML || (item['meta'] === 'function' && domFuncs[item.caption] && domFuncs[item.caption].sign)) {\r\n                            let hint = domFuncs[item.caption];\r\n                            if (hint) {\r\n                                let args = Object.keys(hint.sign || {}).map(item => item + ': ' + hint.sign[item].type).join(', ');\r\n                                // item.docHTML = '<h5>' + (hint.value || item.caption) + '(' + args + ') : ' + hint['return'] + '</h5><hr>'\r\n                                item.docHTML = '<h5>' + (hint.origin || item.caption) + '(' + args + ') : ' + hint['return'] + '</h5><hr>'\r\n                                item.docHTML += '<p>' + (hint.desc || hint.value) + '</p>'\r\n                                let argsDesc = ''\r\n                                for (const key in hint.sign) {\r\n                                    argsDesc += '<li><b>' + key + ':' + (hint.sign[key].type || 'any') + '</b> - ' + hint.sign[key].desc\r\n                                }\r\n                                item.docHTML += '<ul>' + argsDesc + '</ul>'\r\n                                // item.docHTML += '<h6>return ' + hint['return'] + '</h6>'\r\n                            }\r\n                            console.log(item);\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // editor.completers = editor.completers.slice();\r\n                editor.completers.push(domCompleter);\r\n\r\n\r\n\r\n                // REMOVE TAB AUTO COMPLETION IN STRING:                \r\n\r\n                const cursorText = editor.container.querySelector('textarea')\r\n                cursorText.addEventListener('keydown', function tabHandler(/** @type {{ key: string; }} */ e) {\r\n                    if (e.key === 'Tab') {\r\n                        if (editor.completer) {\r\n\r\n                            editor.completer.keyboardHandler.removeCommand(editor.completer.keyboardHandler.commands.Tab);\r\n                            cursorText.removeEventListener('keydown', tabHandler)\r\n                            console.log('removing tab hot key from autocompletion');\r\n\r\n                            // var position = editor.getCursorPosition();\r\n                            // var token = editor.session.getTokenAt(position.row, position.column);\r\n                            // if (token.type === 'string') {\r\n                            //     editor.completer.keyboardHandler.removeCommand(editor.completer.keyboardHandler.commands.Tab);\r\n                            //     cursorText.removeEventListener('keydown', tabHandler)                                \r\n                            //     console.log('removing tab hot key from autocompletion');\r\n                            // }\r\n                        }\r\n                    }\r\n                })\r\n\r\n\r\n\r\n                //AUTO RENAME:\r\n\r\n                editor.commands.addCommand(\r\n                    {\r\n                        name: \"rename\",\r\n                        exec: function () {\r\n                            var position = editor.getCursorPosition();\r\n                            var token = editor.session.getTokenAt(position.row, position.column);\r\n                            if (token.type == \"identifier\") {\r\n                                let newValue = prompt('', token.value)\r\n                                if (newValue !== token.value) {\r\n                                    if (newValue && newValue.match(/^[\\w_][\\w_\\d]*$/m)) {\r\n                                        let range = null;\r\n                                        let options = {\r\n                                            // backwards: true,\r\n                                            wrap: true,\r\n                                            // caseSensitive: true,\r\n                                            // range: null,\r\n                                            wholeWord: true,\r\n                                            // regExp: false\r\n                                        }\r\n                                        let threshold = editor.findAll(token.value);\r\n                                        if (threshold) {\r\n                                            const pattern = 'import \\\\\\{[\\w\\d_\\\\\\. ,]*' + token.value + '[\\w\\d_\\\\\\. ,]*\\\\\\} from [\\'\"]\\\\\\./([\\\\\\w\\\\\\d_\\\\\\.]+)';\r\n                                            editor.find(new RegExp(pattern), { regExp: true })\r\n                                            const match = editor.getSelectedText().match(pattern)\r\n                                            if (match) {\r\n                                                let storeName = match[1];\r\n                                                let module = playgroundObject.fileStorage[storeName];\r\n                                                if (!module) alert('Связанный модуль ' + storeName + ' не найден')\r\n                                                else {\r\n                                                    let replacePattern = '(^' + token.value + ')|( ' + token.value + ')|(' + token.value + ' )';\r\n                                                    console.log(replacePattern);\r\n                                                    playgroundObject.fileStorage[storeName] = module.replace(new RegExp(replacePattern, 'm'), function(substring, args) {\r\n                                                        console.log(arguments);\r\n                                                        return substring.replace(token.value, newValue);\r\n                                                    })\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                        while ((range = editor.find(token.value, options)) && threshold--) {\r\n                                            console.log('replace...');\r\n                                            editor.session.replace(range, newValue);                                            \r\n                                        }\r\n                                    }\r\n                                    else if(newValue !== null) {\r\n                                        alert('Введите корректное имя для идентификатора');\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        bindKey: { win: 'F2' }\r\n                        // insted of expand/collapse\r\n                    }\r\n                )\r\n\r\n\r\n                // GO TO DEFINITION:\r\n                \r\n                editor.container.addEventListener('click', function (/** @type {{ ctrlKey: boolean; }} */ e) {\r\n                    \r\n                    var position = editor.getCursorPosition();\r\n                    var token = editor.session.getTokenAt(position.row, position.column);\r\n                    if (e.ctrlKey && token.type == \"identifier\") {\r\n                        \r\n                        console.log(token);\r\n                        let code = editor.session.getValue();\r\n\r\n                        const pattern = new RegExp('(var|let|const|function|class|import \\{ ?) ?' + token.value)\r\n                        const match = editor.session.getValue().match(pattern);\r\n\r\n                        if (match) {\r\n                            \r\n                            let linesCount = code.slice(0, match.index).split('\\n').length - 1;\r\n                            if (linesCount === position.row) {\r\n                                // нашел себя же (ту же строку)\r\n                                // => ищем дальше (//TODO//)\r\n                            }\r\n                            else {\r\n                                let line = editor.session.getLine(2);\r\n                                if (line.startsWith('import')) {\r\n                                    let r = line.match(new RegExp(\"from ['\\\"]\\\\\\./([\\\\\\w\\\\\\d_\\\\\\.]+)'\"))\r\n                                    if (r) {\r\n                                        let filename = r[1];\r\n                                        // find inside filename: \r\n                                        let module = playgroundObject.fileStorage[filename];\r\n                                        if (!module) {\r\n                                            editor.removeSelectionMarkers(editor.session.$selectionMarkers);\r\n                                            alert('Отсутвует модуль ' + filename)\r\n                                            return;\r\n                                        }\r\n                                        let submatch = module.match(pattern);\r\n                                        if (submatch) {\r\n                                            // переключаемся на эту вкладку\r\n                                            // let tabIndex = Object.keys(playgroundObject.fileStorage).indexOf(filename)\r\n                                            const tabs = document.querySelector('.tabs').children;\r\n                                            let activeTab = [].slice.call(tabs).filter(f => f.innerText == filename).pop()\r\n                                            //@ts-ignore\r\n                                            activeTab.click()\r\n\r\n                                            console.log(submatch);\r\n                                            // переходим к определению\r\n                                            linesCount = module.slice(0, match.index).split('\\n').length - 1;\r\n                                            editor.moveCursorTo(linesCount, 8 + submatch[1].length);\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    editor.moveCursorTo(linesCount, 0)\r\n                                }\r\n                            }\r\n                        }\r\n                        editor.removeSelectionMarkers(editor.session.$selectionMarkers)\r\n                    }\r\n                });\r\n\r\n            }\r\n        }                \r\n        \r\n        return editor;\r\n\r\n    });\r\n\r\n    \r\n    // read modules:\r\n\r\n    //@ts-ignore\r\n    let fileStorage = editors.fileStorage = window.fileStorage = window['fileStore'] || {};\r\n    // fileStorage\r\n    let modulesStorage = (editorOptions.storage || localStorage).getItem('_modules');\r\n    if (modulesStorage) {\r\n\r\n        // create tabs:\r\n\r\n        let _modules = JSON.parse(modulesStorage);\r\n        let fileCreate = document.querySelector('.tabs .tab:last-child');\r\n\r\n        let i = 0;\r\n\r\n        if (fileCreate) {\r\n            for (const key in _modules) {\r\n                if (Object.hasOwnProperty.call(_modules, key)) {\r\n                    fileStorage[key] = _modules[key];                    \r\n                    \r\n                    if (i++) {\r\n                        console.log(fileCreate);\r\n                        //@ts-ignore\r\n                        fileCreate.click({ target: fileCreate, file: key });\r\n                    }\r\n                    else {                        \r\n                        editors[2].setValue(_modules[key]);                                     // set editor value\r\n                        // clear selection\r\n                        editors[2].session.selection.setRange(new Range(0, 0, 0, 0))\r\n                    }\r\n                }\r\n            }\r\n\r\n            let activeTab = document.querySelector('.tabs .tab.active');\r\n            activeTab && activeTab.classList.toggle('active');\r\n\r\n            document.querySelector('.tabs .tab').classList.add('active');\r\n        }\r\n    }      \r\n\r\n\r\n    // initResizers()\r\n\r\n    return editors;\r\n\r\n}\r\n\r\n","//@ts-check\r\n\r\n\r\nlet hrSplitter = document.querySelector('.h_line');\r\nlet vertSplitter = document.querySelector('.v_line');\r\nlet centerSplitter = document.querySelector('.center_line');\r\n\r\nconst htmlEditor = document.getElementById('htmleditor')\r\nconst styleEditor = document.getElementById('csseditor')\r\nconst jsEditor = document.getElementById('jseditor')\r\nconst editionView = document.querySelector('.view')\r\n\r\nlet hoSeized = false;\r\nlet vertSeized = false;\r\nlet allSeized = false;\r\n\r\nconst container = document.querySelector('.md_container');\r\nconst header = document.querySelector('.header');\r\n\r\n// const headerHeight = header.offsetHeight;\r\n// const headerHeight = container.offsetTop;\r\nconst headerHeight = container.getBoundingClientRect().top;\r\nconst paddingTop = parseFloat(getComputedStyle(container).padding) * 2 || 0;\r\n//@ts-ignore\r\nwindow.__debug && console.log(paddingTop);\r\n\r\n/**\r\n * Initialize resize lines\r\n */\r\nexport function initResizers() {        \r\n\r\n    container.addEventListener('mousedown', function (event) {\r\n        if (event.target === hrSplitter) {\r\n\r\n            hoSeized = true;\r\n            // let iframe = editionView.querySelector('iframe');\r\n            // iframe.contentDocument.onmouseup = function (event) { seized = false; };\r\n        }\r\n        else if (event.target === vertSplitter) vertSeized = true\r\n        else {\r\n            allSeized = event.target === centerSplitter;\r\n        }\r\n    })\r\n\r\n    window.addEventListener('resize', function resetSize(event) {\r\n        [hrSplitter, vertSplitter, centerSplitter, htmlEditor, styleEditor, jsEditor, editionView].forEach(el => {\r\n            //@ts-ignore\r\n            el.style = null;\r\n        })\r\n    })\r\n    container.addEventListener('mouseup', function (event) {\r\n        if (hoSeized || allSeized) {\r\n            //@ts-ignore\r\n            editors.forEach(function(elem) {\r\n                elem.resize();\r\n                console.log('resize...');\r\n            })\r\n        }\r\n        hoSeized = vertSeized = allSeized = false;\r\n        console.log('ok');\r\n    })\r\n    container.addEventListener('mousemove', function (event) {\r\n\r\n        if (hoSeized) hTune(event)\r\n        else if (vertSeized) vTune(event)\r\n        else if (allSeized) {\r\n            hTune(event) || vTune(event)\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nfunction hTune(event) {\r\n    \r\n    let marginTop = headerHeight;    \r\n\r\n    //@ts-ignore\r\n    hrSplitter.style.top = event.clientY - paddingTop + 'px';\r\n    //@ts-ignore\r\n    vertSplitter.style.height = event.clientY - paddingTop + 'px';\r\n    //@ts-ignore\r\n    centerSplitter.style.top = event.clientY - paddingTop + 'px';\r\n\r\n\r\n    htmlEditor.style.height = event.clientY - marginTop + 'px';\r\n    styleEditor.style.height = event.clientY - marginTop + 'px';\r\n\r\n    // let lowerHeight = container.offsetHeight - event.clientY - paddingTop - 10 + marginTop + 'px';\r\n    //@ts-ignore\r\n    let lowerHeight = container.offsetHeight - event.clientY - (paddingTop || 10) + marginTop + 'px';        \r\n\r\n    //@ts-ignore\r\n    jsEditor.style.height = editionView.style.height = lowerHeight;\r\n    \r\n    return true;\r\n}\r\n\r\nfunction vTune(event) {\r\n    let pref = 14;\r\n    let prefLine = 10;\r\n    // let prefLine = 20;\r\n    // let pref = 32;\r\n    let post = 0;\r\n\r\n    //@ts-ignore\r\n    vertSplitter.style.left = event.clientX - prefLine + 'px';\r\n    //@ts-ignore\r\n    hrSplitter.style.width = event.clientX - prefLine + 'px';\r\n    //@ts-ignore\r\n    centerSplitter.style.left = event.clientX - prefLine + 'px';\r\n\r\n    htmlEditor.style.width = event.clientX - pref + 'px';\r\n    jsEditor.style.width = event.clientX - pref + 'px'\r\n    //@ts-ignore\r\n    styleEditor.style.width = container.offsetWidth - event.clientX + post + 'px'\r\n    //@ts-ignore\r\n    editionView.style.width = container.offsetWidth - event.clientX + post + 'px'\r\n}","//@ts-check\r\n\r\nimport { playgroundObject } from \"../pageBuilder\";\r\nimport { autocompleteExpand, keyWords } from \"../utils/autocompletion\";\r\n\r\n\r\n// var fileStore = { _active: 0 };\r\n\r\n/**\r\n * @param {{ file?: string; target: any; }} event\r\n */\r\nexport function fileAttach(event) {\r\n\r\n    var fileStore = playgroundObject.fileStorage;\r\n\r\n    //! Проверяем имя файла на валидность:\r\n\r\n    var editors = event['editors'] || window['editors'];\r\n    var filename = event.file || prompt('Enter file name:');\r\n\r\n    if (!filename) return;\r\n\r\n    let title = ~filename.indexOf('.') ? filename : (filename + '.js');\r\n\r\n    if (!event.file && ~Object.keys(fileStore).indexOf(title)) {\r\n        alert('Файл с таким именем уже существует');\r\n        return;\r\n    }\r\n\r\n\r\n    let importSnippet = {\r\n        name: \"import { * } from './\" + title + \"'\",\r\n        template: \"import { ${1} } from './\" + title + \"'\"\r\n    }\r\n\r\n\r\n\r\n    let target = event.target;\r\n\r\n    //! Настройка переключения между табами:\r\n\r\n    let origTab = target.parentElement.children[0];\r\n    origTab.onclick = origTab.onclick || function toggleTab (/** @type {{ target: { classList: { add: (arg0: string) => void; }; innerText: string | number; }; }} */ ev) {\r\n        let prevTab = document.querySelector('.tab.active');\r\n        if (prevTab) {\r\n\r\n            const prevTabName = prevTab['innerText'];\r\n\r\n            prevTab.classList.toggle('active');\r\n\r\n            fileStore[prevTabName] = editors[2].getValue();\r\n\r\n            \r\n\r\n            \r\n            const exports = fileStore[prevTabName].match(/export (function|const|let|class) (\\w+)/g) || [];\r\n            const defaultExport = fileStore[prevTabName].match(/export default function (\\w+)/);\r\n            \r\n            // atocomplete update:\r\n\r\n            exports.forEach((/** @type {string} */ ex) => {\r\n                let exprWords = ex.split(' ');\r\n                let caption = exprWords.pop();\r\n                let meta = exprWords.pop()\r\n                keyWords.push({\r\n                    caption,\r\n                    value: caption,\r\n                    meta,\r\n                    type: '',\r\n                    snippet: undefined // meta == 'function' ? (caption + '(${1})') : undefined\r\n                })\r\n            })\r\n\r\n            // let newComplete = exports.map((/** @type {string} */ exp) => exp.split(' ').pop()).join(', ');\r\n            // importSnippet.name = importSnippet.template = importSnippet.template.replace(\r\n            //     new RegExp('(\\\\\\{ \\\\\\$\\\\\\{1\\\\\\} \\\\\\})|(\\\\\\{ [\\\\\\w\\\\\\d_, ]* \\\\\\})'), '{ ' + newComplete + ' }'\r\n            // );\r\n\r\n            // console.log('{ ' + newComplete + ' }');\r\n            // console.log(importSnippet.template);\r\n\r\n            // if (defaultExport) {\r\n            //     // editors[2].session.$mode.$highlightRules.$keywordList.unshift(\"import \" + defaultExport.pop() + \" from './\" + newTab.innerText + \"'\");\r\n            //     keyWords.push({\r\n            //         caption: defaultExport[1],\r\n            //         value: defaultExport[1],\r\n            //         meta: 'function',\r\n            //         type: '',\r\n            //         snippet: undefined,  // (defaultExport[1] + '({$1})')\r\n            //     })\r\n            // }\r\n\r\n        }\r\n        ev.target.classList.add('active');\r\n\r\n        editors[2].setValue(fileStore[ev.target.innerText]);\r\n\r\n        console.log('toggle tab...');    \r\n\r\n        console.log(fileStore[ev.target.innerText].split('\\n').length);\r\n        editors[2].gotoLine(fileStore[ev.target.innerText].split('\\n').length - 1)\r\n        editors[2].focus();        \r\n    }\r\n\r\n\r\n\r\n    // создание нового таба:\r\n\r\n    let newTab = origTab.cloneNode();\r\n    newTab.innerText = title;\r\n\r\n    let prevTab = document.querySelector('.tab.active');\r\n    prevTab && prevTab.classList.toggle('active');\r\n    newTab.classList.add('active');\r\n\r\n    newTab.style.marginRight = '1.25em';\r\n    newTab.onclick = origTab.onclick;\r\n    newTab.ondblclick = origTab.ondblclick;\r\n\r\n    if (!event.file) {\r\n        fileStore[origTab.innerText] = editors[2].getValue();\r\n        fileStore[newTab.innerText] = '';                   // create new\r\n        editors[2].setValue(fileStore[newTab.innerText]);\r\n\r\n        // добавление нового ключевого слова:\r\n        // editors[2].session.$mode.$highlightRules.$keywordList.push(\"from './\" + newTab.innerText + \"'\");\r\n        // editors[2].session.$mode.$highlightRules.$keywordList.push(\"import {*} from './\" + newTab.innerText + \"'\");\r\n\r\n\r\n        // let moduleName = newTab.innerText.split('.')[0];\r\n        // moduleName = parseInt(moduleName) ? ('_' + moduleName) : moduleName;\r\n        // editors[2].session.$mode.$highlightRules.$keywordList.push(\"import * as \" + moduleName + \" from './\" + newTab.innerText + \"'\");\r\n\r\n        autocompleteExpand(editors[2], importSnippet)\r\n    }\r\n\r\n    target.parentElement.insertBefore(newTab, target);\r\n    editors[2].focus();\r\n\r\n    //@ts-ignore\r\n    const snippetManager = ace.require('ace/snippets').snippetManager;    \r\n    snippetManager.insertSnippet(editors[2], \"export function ${1:funcName} (${2:args}){\\n\\t${3}\\n}\");\r\n    \r\n}\r\n","// @ts-check\r\n\r\nimport initializeEditor from \"./aceInitialize\";\r\nimport { createPage, webCompile, playgroundObject } from \"./pageBuilder\";\r\n\r\nimport { expand } from \"./features/expantion\";\r\nimport { initResizers } from \"./features/resizing\";\r\nimport { babelCompiler, compilers } from \"./features/compiler\";\r\nimport { commonStorage } from \"./utils/utils\";\r\nimport { fileAttach } from \"./features/tabs\";\r\n\r\nimport { ChoiceMenu } from \"./ui/ChoiceMenu\";\r\nimport { modes } from \"./features/base\";\r\n\r\n\r\n\r\n\r\n/**\r\n * @param {string[]} values\r\n * @param {{onControlSave?: Function, tabAttachSelector?: string, modes?: [object?, object?, object?]}?} options\r\n * @returns {any[]}\r\n */\r\nexport function initialize(values, options) {\r\n\r\n    options = options || {};\r\n    \r\n    let syntaxMode = Number.parseInt((commonStorage || localStorage).getItem('mode') || '0');\r\n    //@ts-ignore\r\n    document.getElementById('compiler_mode').selectedIndex = syntaxMode;\r\n\r\n    // js mode:\r\n    const jsxMode = !!(syntaxMode % 2);\r\n    if (jsxMode) {\r\n        document.getElementById('jseditor').classList.add('dis_errors');\r\n    }\r\n\r\n    playgroundObject.modes = options.modes;\r\n    const frameworkEnvironment = Object.values(compilers)[syntaxMode];\r\n    \r\n    // @ts-ignore\r\n    let compileFunc = syntaxMode ? webCompile.bind(null, jsxMode, frameworkEnvironment) : webCompile;\r\n\r\n    initResizers()\r\n\r\n    // let compileFunc = mode ? webCompile.bind(null, mode > 1, mode) : webCompile;\r\n    // console.log(mode);\r\n    // console.log(Object.values(compilers)[mode]);\r\n\r\n    const editorOptions = {\r\n        compileFunc,\r\n        controlSave: options.onControlSave,\r\n        storage: commonStorage\r\n    }\r\n    // @ts-ignore\r\n    let editors = playgroundObject.editors = initializeEditor(ace, editorOptions, modes, syntaxMode, values)\r\n\r\n    \r\n    \r\n    if (options.modes) {\r\n        customElements.define('choice-menu', ChoiceMenu);\r\n        console.log(options.modes);\r\n        options.modes.forEach(function (/** @type { {tabs?: true, src?: string, target? : object } } */ mode, i) {\r\n\r\n            let items = [];  // ['css','less','stylus']\r\n\r\n            if (mode && (items = Object.keys(mode)).length > 1) {                            \r\n\r\n                const settingsElement = editors[i].container.appendChild(document.createElement('choice-menu'));\r\n                settingsElement.className = 'settings';\r\n                settingsElement.addEventListener('selected_changed', (/** @type { CustomEvent } */ e) => {\r\n                    console.log(e.detail);\r\n                    console.log(mode);\r\n\r\n                    /**\r\n                     * @type {{src?: string, tabs?: true, mode: 'html'|'css'|'javascript'}}\r\n                     */\r\n                    const modeOptions = mode[e.detail.value];\r\n                    // const link = options.modes[i][e.detail.value];\r\n                    // console.log(link)\r\n\r\n\r\n                    // multitabs mode:\r\n                    // if (mode[e.detail.value].tabs)\r\n                    {\r\n                        const multitabs = modeOptions && modeOptions.tabs;\r\n                        const tabs = document.querySelector('.tabs' + (multitabs ? '' : '.enabled'));\r\n                        tabs && tabs.classList.toggle('enabled')\r\n                    }\r\n                    \r\n                    // upload to frame will in pageBuilder, here just is highlight change\r\n                    editors[i].session.setMode(\"ace/mode/\" + ((modeOptions && modeOptions.mode) || e.detail.value));\r\n\r\n                    //@ts-ignore\r\n                    var Range = ace.require(\"ace/range\").Range;\r\n                    \r\n                    let markLine = editors[i].session.getLine(0);\r\n                    const markValue = \"/* \" + e.detail.value + \" */\";\r\n\r\n                    if (markLine.startsWith('/*')) {\r\n                        editors[i].session.replace(new Range(0, 0, 0, markLine.length), markValue)\r\n                    }\r\n                    else {\r\n                        editors[i].session.insert({ row: 0, column: 0 }, markValue + '\\n\\n')\r\n                    }                    \r\n                })\r\n\r\n                // const value = editors[i].getValue()\r\n                const markLine = editors[i].session.getLine(0);\r\n                \r\n                const list = settingsElement.appendChild(document.createElement('ul'));\r\n                items.forEach((point, j) => {\r\n                    let itemElement = list.appendChild(document.createElement('li'));\r\n                    itemElement.innerText = point;\r\n                    \r\n                    let mark = markLine.match(new RegExp('/\\\\\\* (' + point + ') \\\\\\*/'));\r\n                    \r\n                    if (!j) settingsElement.selectedElement = itemElement;\r\n                    else if (mark) {\r\n                        // mark[1]\r\n                        settingsElement.selectedElement = itemElement;\r\n                        settingsElement.dispatchEvent(new CustomEvent('selected_changed', {\r\n                            detail: {\r\n                                // id: itemElement.id,\r\n                                value: point\r\n                            }\r\n                        }))\r\n                    }                    \r\n                })\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    let [iframe, curUrl] = createPage(playgroundObject.curUrl, frameworkEnvironment, jsxMode ? babelCompiler.mode : undefined, editorOptions)\r\n\r\n    playgroundObject.iframe = iframe;\r\n    playgroundObject.curUrl = curUrl;\r\n\r\n\r\n    document.querySelector('.play').addEventListener('click', () => webCompile(jsxMode, frameworkEnvironment));\r\n    document.querySelector('.expand')['onclick'] = (/** @type {{ currentTarget: any; }} */ e) => expand(e, frameworkEnvironment, jsxMode ? babelCompiler.mode : undefined);\r\n    document.getElementById('compiler_mode').addEventListener('change', function (event) {\r\n\r\n        // @ts-ignore\r\n        (editorOptions.storage || localStorage).setItem('mode', event.target.selectedIndex)\r\n\r\n        // @ts-ignore\r\n        if (event.target.selectedIndex || true) location.reload()\r\n        else {\r\n            for (let i = 0; i < editors.length; i++) {\r\n                //@ts-ignore\r\n                let value = (editorOptions.storage || localStorage).getItem(event.target.selectedIndex + '__' + modes[i]) || '';\r\n                editors[i].session.setValue(value)\r\n            }\r\n            // document.querySelector('.play').click();\r\n        }\r\n\r\n        // localStorage.setItem('mode', event.target.selectedOptions[event.target.selectedIndex].value)\r\n        // console.log(event.target.selectedIndex);\r\n    });\r\n    \r\n    \r\n    options.tabAttachSelector && document.querySelector(options.tabAttachSelector).addEventListener('click', function (e) {\r\n        e['editors'] = editors;\r\n        fileAttach(e);\r\n    });\r\n\r\n\r\n    return editors;\r\n}\r\n\r\n\r\n// export const {editors}"],"names":["isWhiteSpace","isQuote","tokenScanner","peek","readable","consume","error","element","isSiblingOperator","isBracket","isOperator","createLiteral","literal","isLiteral","tokenize","getToken","field","whiteSpace","literal$1","operator","bracket","isOpenBracket","operatorType","consumePlaceholder","stringify","last","stringifyValue","isField","parse","parse$2","html","parse$3","baseModes","extend"],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,CAAC,CAAC,CAAC;AACX;IACA,KAAK,GAAG;AACR;IACA;;ICtPO,MAAM,KAAK,GAAG;IACrB,IAAI,MAAM;IACV,IAAI,KAAK;IACT,IAAI,YAAY;IAChB;IACA;;ICLA;AAYA;IACA;IACA;IACA;IACO,MAAM,gBAAgB,GAAG;IAChC,IAAI,OAAO,EAAE,EAAE;IACf,IAAI,MAAM,EAAE,IAAI;IAChB,IAAI,MAAM,EAAE,IAAI;IAChB,IAAI,WAAW,EAAE,EAAE,OAAO,EAAE,CAAC,EAAE;IAC/B,IAAI,KAAK,EAAE,IAAI;IACf,EAAC;AACD;AACA;IACA;IACA;IACA;IACA,SAAS,UAAU,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE;AAC1D;IACA;AACA;IACA,IAAI,MAAM,UAAU,GAAG;IACvB,QAAQ,IAAI,EAAE;IACd,YAAY,IAAI,EAAE;IAClB,gBAAgB,KAAK;IACrB,gBAAgB,MAAM;IACtB,gBAAgB,IAAI;IACpB,aAAa;IACb,YAAY,IAAI;IAChB,SAAS;IACT,MAAK;AACL;IACA;IACA;IACA;IACA,IAAI,SAAS,UAAU,CAAC,UAAU,EAAE;AACpC;IACA,QAAQ,IAAI,IAAI,GAAG,EAAE,CAAC;IACtB,QAAQ,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;AACtC;IACA,YAAY,IAAI,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;IAC1C,YAAY,IAAI,OAAO,GAAG,OA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"}