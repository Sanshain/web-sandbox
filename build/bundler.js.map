{"version":3,"file":"bundler.js","sources":["../node_modules/tcp-bundler/pack.js","../node_modules/tcp-bundler/index.js","../source/utils/bundler.js"],"sourcesContent":["//@ts-check\r\n// import \"fs\";\r\n\r\nconst extensions = ['.ts','.js']\r\nvar exportedFiles = []\r\n\r\n// integrate(\"base.ts\", 'result.js')\r\n\r\nexports.combine = combine;\r\n// exports.integrate = integrate;\r\n\r\nfunction combine(content, dirpath, options){\r\n    \r\n    exportedFiles = []\r\n\r\n    content = removeLazy(content)\r\n\r\n    content = importInsert(content, dirpath, options);\r\n\r\n    return content;\r\n}\r\n\r\n// function integrate(from, to, options){    \r\n\r\n//     let content = fs.readFileSync(from).toString();        \r\n//     let filename = path.resolve(from);\r\n    \r\n//     content = combine(content, path.dirname(filename), options)\r\n\r\n//     to = to || path.parse(filename).dir + path.sep + path.parse(filename).name + '.js';\r\n\r\n//     fs.writeFileSync(to, content)    \r\n// }\r\n\r\nclass pathMan {\r\n    constructor(dirname, _getContent) {\r\n        this.dirPath = dirname;\r\n        this.getContent = _getContent;\r\n    }\r\n}\r\n\r\nfunction importInsert(content, dirpath, options) {\r\n    \r\n    console.log('importInsert...');\r\n\r\n    let pathman = new pathMan(dirpath, options.getContent || getContent);\r\n    \r\n    let regex = /^import \\* as (?<module>\\w+) from \\\"\\.\\/(?<filename>\\w+)\\\";?/gm;            \r\n    content = content.replace(regex, unitsPack.bind(pathman));\r\n\r\n    ///* not recommended, but easy for realization:\r\n    // regex = /^import \\\"\\.\\/(?<filename>\\w+)\\\"/gm;\r\n    // content = content.replace(regex, allocPack.bind(pathman)); //*/    \r\n\r\n    regex = /^import {([\\w, ]+)} from ['\"]\\.\\/([\\w\\.]+)['\"];?/gm\r\n    content = content.replace(regex, wrapsPack.bind(pathman)); //*/\r\n\r\n    regex = /^import ([\\w, ]+) from ['\"].\\/([\\w\\.\\/]+)['\"];?/gm;\r\n    content = content.replace(regex, defaultPack.bind(pathman)); //*/\r\n    \r\n    if (options && options.release)\r\n    {\r\n        // remove comments:\r\n        content = content.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\r\n        content = content.replace(/\\/\\/[\\s\\S]*?\\n/g, '\\n'); //*/\r\n    }\r\n\r\n    return content\r\n}\r\n\r\n\r\nfunction defaultPack(match, classNames, fileName, offset, source) {\r\n\r\n    var content = this.getContent(fileName)\r\n    if (content == '' || !content) return ''\r\n\r\n    classNames = classNames.split(',').map(s => s.trim())\r\n    const matches = Array.from(content.matchAll(/^export default (function|class) (\\w+)[ ]*\\([\\w, ]*\\)[\\s]*{[\\w\\W]*?\\n}/gm))        \r\n\r\n    console.log(match);\r\n    match = '';\r\n    for (let unit of matches) {\r\n        if (classNames.includes(unit[2])) {\r\n\r\n            match += unit[0].substr(7).replace('default ', '') + '\\n\\n'\r\n        }\r\n    }\r\n\r\n    content = `\\n/*start of ${fileName}*/\\n${match.trim()}\\n/*end*/\\n\\n`\r\n\r\n    return content;\r\n}\r\n\r\n\r\nfunction wrapsPack(match, classNames, fileName, offset, source){\r\n\r\n    console.log('wrapsPack...');\r\n\r\n    var content = this.getContent(fileName)\r\n    if (content == '' || !content) return ''\r\n\r\n    classNames = classNames.split(',').map(s => s.trim())\r\n    let matches1 = Array.from(content.matchAll(/^export (let|var) (\\w+) = [^\\n]+/gm))    \r\n    let matches2 = Array.from(content.matchAll(/^export (function) (\\w+)[ ]*\\([\\w, ]*\\)[\\s]*{[\\w\\W]*?\\n}/gm))\r\n    let matches3 = Array.from(content.matchAll(/^export (class) (\\w+)([\\s]*{[\\w\\W]*?\\n})/gm))\r\n    var matches = matches1.concat(matches2, matches3);\r\n\r\n    match = ''\r\n    for (let unit of matches)\r\n    {\r\n        if (classNames.includes(unit[2])){\r\n            \r\n            match += unit[0].substr(7) + '\\n\\n'\r\n        }        \r\n    }\r\n    \r\n    content = `\\n/*start of ${fileName}*/\\n${match.trim()}\\n/*end*/\\n\\n` \r\n\r\n    return content;\r\n}\r\n\r\nfunction unitsPack(match, modulName, fileName, offset, source){\r\n\r\n    var content = this.getContent(fileName)\r\n    if (content == '' || !content) return ''\r\n\r\n    let exportList = []\r\n\r\n    content = content.replace(/^(let|var) /gm, 'let ')\r\n    content = content.replace(/^export (let|var|function|class) (\\w+)/gm, \r\n    function(match, declType, varName, offset, source)\r\n    {\r\n        // exportList[varName] = varName\r\n\r\n        let postfix = ''\r\n        if (declType == 'function') postfix = '.bind(window)'\r\n        exportList.push('\\t\\t' + varName + \":\" + varName)\r\n        return declType + ' ' + varName;\r\n    });\r\n\r\n    var unitObj = exportList.join(',\\n')\r\n    content += `\\n\\nvar ${modulName} = {\\n ${unitObj} \\n}`\r\n\r\n    content = '{\\n' + content.replace(/^([\\S \\t])/gm, '    $1') + '\\n}'    \r\n\r\n    content = `\\n/*start of ${fileName}*/\\n${content}\\n/*end*/\\n\\n`    \r\n\r\n    return content;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * Obsolete!\r\n * @param {RegExp} match regular expression\r\n * @param {string} fileName file name\r\n * @param {*} offset \r\n * @param {string} source \r\n * @returns {string}\r\n */\r\nfunction allocPack(match, fileName, offset, source){\r\n\r\n    var content = this.getContent(fileName)\r\n    if (content == '') return ''\r\n\r\n    var simple = false;\r\n    if (simple){\r\n        // w/o unique check of variable names! ie- supports\r\n        content = content.replace(/^export /gm, '')    \r\n    }\r\n    else{\r\n        // vs unique check of variable names! ie11+\r\n        content = content.replace(/^(let|var) /gm, 'let ')\r\n        content = content.replace(/^export (let|var) /gm, 'let ')            \r\n        content = content.replace(/^export function (?<funcname>\\w+)\\(/gm, 'let $1 = function(')\r\n        \r\n        var warn = /^export (class) (\\w+)/gm.exec(content);\r\n        if (warn){\r\n            throw new Error(`use \"import {${warn[2]}} from './${fileName}'\" `+\r\n                        `statement for class import instead of common import *`)\r\n        }\r\n        content = '{\\n' + content.replace(/^([\\S])/gm, '    $1') + '\\n}'\r\n        \r\n    }\r\n    \r\n    content = `\\n/*start of ${fileName}*/\\n${content}\\n/*end*/\\n\\n`    \r\n\r\n    return content;\r\n}\r\n\r\n\r\n\r\nfunction getContent(fileName){    \r\n\r\n    const fs = require(\"fs\");\r\n\r\n    fileName = this.dirPath + '/' + fileName\r\n\r\n    for(let ext of extensions){\r\n        if (fs.existsSync(fileName + ext)) \r\n        {   \r\n            fileName = fileName + ext;\r\n            break;            \r\n        }\r\n    }\r\n\r\n    if (exportedFiles.includes(fileName)) \r\n    {\r\n        \r\n        // let lineNumber = source.substr(0, offset).split('\\n').length\r\n        console.warn(`attempting to re-import '${fileName}' into 'base.ts' has been rejected`);\r\n        return ''\r\n    }\r\n    else exportedFiles.push(fileName)\r\n    \r\n\r\n    var content = fs.readFileSync(fileName).toString()    \r\n\r\n    // content = Convert(content)\r\n\r\n    return content;\r\n}\r\n\r\n/**\r\n * Remove lazy-marked chunk of code:\r\n * \r\n * @param {string} content : content;\r\n * @returns {string}\r\n */\r\nfunction removeLazy(content){    \r\n\r\n    return content.replace(/\\/\\*-lazy\\*\\/[\\s\\S]*?\\/\\*lazy-\\*\\//, '');    \r\n}\r\n","\r\n// const fs = require(\"fs\");\r\n// const sock = require('net');\r\n// const path = require('path')\r\n\r\n// // const cmd = require(\"child_process\");\r\n// var tss = require('typescript-simple');\r\n// var obfuscator = require(\"uglify-js\");\r\n\r\nconst build = require('./pack').combine;\r\n\r\n// function startListen(host, port, options){\r\n// \thost = host || 'localhost'\r\n// \tport = port || 9098\r\n// \toptions = options || {}\r\n\r\n// \tconsole.log(`bundler start listen on ${host}:${port}`)    \t\r\n\r\n// \tsock.createServer(function (socket) {\r\n\r\n// \t\tconsole.log('connection estableshed')    \r\n\t\r\n// \t\tsocket.on('data', async function(data) {\r\n\t\t\t \t\t\t\r\n// \t\t\tconsole.time('Time');\t\t\r\n\t\r\n// \t\t\tlet filename = data.toString();\r\n// \t\t\tconsole.log(`received task for '${filename}'`)\r\n\t\t\t\t\r\n// \t\t\tif (fs.existsSync(filename)){\r\n\t\r\n// \t\t\t\tvar content = fs.readFileSync(filename, \"utf8\");\r\n// \t\t\t\tvar result = bundler.combine(content, path.dirname(filename), options)\r\n\t\t\t\t\r\n// \t\t\t\tif (options.tsc)  result = tss(result);\t\t\r\n// \t\t\t\tif (options.minify)\tresult = obfuscator.minify(result).code.valueOf();\t\t\t\t\r\n// \t\t\t\tlet pathinfo = path.parse(filename);\r\n\r\n// \t\t\t\tfs.writeFileSync(pathinfo.dir + path.sep + pathinfo.name + '.js', result)\r\n// \t\t\t}\r\n// \t\t\telse throw new Error(`file ${filename} does not exists`)\r\n\t\t\t\t\t\r\n// \t\t\tconsole.timeEnd('Time');\r\n// \t\t\tsocket.write('success');\r\n\r\n// \t\t});\r\n\t\t \r\n// \t}).listen(port, host);\r\n\r\n// }\r\n\r\nmodule.exports = { build }\r\n\r\n\r\n\r\n/*\r\nvar s = require('net').Socket();\r\ns.connect(8080, 'localhost');\r\ns.write('Hello');\r\ns.end();\r\n//*/","import { build } from 'tcp-bundler';\r\n\r\n/**\r\n * билдит модули\r\n * @param {string} content : ;\r\n * @param {object} store \r\n * @return {string}\r\n */\r\nexport default function plainBuild(content, store) {\r\n\r\n    let exportedFiles = [];\r\n\r\n    // console.log(build);\r\n\r\n    \r\n    let bb = build;\r\n    globalThis.__debug && console.log(bb);\r\n\r\n\r\n    let result = build(content, '.', {\r\n        getContent: function (fileName) {\r\n\r\n            // fileName = path.normalize(this.dirPath + '/' + fileName)\r\n\r\n            //! один файл можно импотрировать только один раз !//\r\n\r\n            if (~exportedFiles.indexOf(fileName)) { console.warn(`attempting to re-import '${fileName}' into 'base.ts' has been rejected`); return ''; }\r\n            else {\r\n                exportedFiles.push(fileName)\r\n            }\r\n\r\n            let content = store['app.js'] || store[fileName];          // var content = fs.readFileSync(fileName).toString()\r\n\r\n            return content;\r\n        }\r\n    });\r\n\r\n    //@ts-ignore\r\n    // try {\r\n    //     editors[2].completers.push(exportCompleter);\r\n    // }\r\n    // catch (exc) {\r\n    //     console.warn('empty editors...');\r\n    // }\r\n\r\n    return result;\r\n}\r\n\r\n\r\n// simplest dyncmic custom autocomplete\r\n\r\nconst exportTable = [\r\n    {\r\n        caption: 'someFunc',\r\n        value: 'someFunc',\r\n        meta: 'local'\r\n    }\r\n]\r\n\r\nvar exportCompleter = {\r\n    getCompletions: function (editor, session, pos, prefix, callback) {\r\n        callback(null, exportTable);\r\n    }\r\n};\r\n\r\n\r\n\r\nconst splitAt = (x, index) => [x.slice(0, index), x.slice(index)]\r\n\r\n/**\r\n * Функция для нативного импорта\r\n * \r\n * (не используется?)\r\n * @param {string} content : ;\r\n * @param {*} store \r\n */\r\nexport function thisBuild(content, store){\r\n\r\n    function createModule(match, classNames, fileName, offset, source) {\r\n\r\n        console.log(source);\r\n        let [expr, file] = splitAt(splitAt, offset);\r\n        \r\n        let blob = new Blob([store[fileName]], { type: 'text/html' });\r\n        let url = URL.createObjectURL(blob);\r\n\r\n        return expr + file.replace(fileName, '/' + url.split('/').pop());\r\n    }\r\n\r\n    let regex;\r\n\r\n    regex = /^import {([\\w, ]+)} from ['\"](\\.\\/[\\w\\.]+)['\"];?/gm\r\n    content = content.replace(regex, createModule); //*/\r\n\r\n    regex = /^import ([\\w, ]+) from ['\"](.\\/[\\w\\.\\/]+)['\"];?/gm;\r\n    content = content.replace(regex, createModule); //*/\r\n}\r\n\r\n"],"names":["require$$0","build"],"mappings":"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"}